From 641cf0a95895985ade7192e881555923a029f497 Mon Sep 17 00:00:00 2001
From: shichen01 <shichen01@baidu.com>
Date: Tue, 28 Feb 2023 18:24:28 +0800
Subject: [PATCH] demo update

---
 CMakeCache.txt                                | 293 +++++++
 .../3.10.2}/CMakeCXXCompiler.cmake            |  25 +-
 .../3.10.2/CMakeDetermineCompilerABI_CXX.bin  | Bin 0 -> 8264 bytes
 .../3.10.2}/CMakeSystem.cmake                 |   8 +-
 .../CompilerIdCXX/CMakeCXXCompilerId.cpp      | 164 +---
 CMakeFiles/3.10.2/CompilerIdCXX/a.out         | Bin 0 -> 8416 bytes
 CMakeFiles/CMakeDirectoryInformation.cmake    |  16 +
 CMakeFiles/CMakeOutput.log                    | 430 ++++++++++
 CMakeFiles/Makefile.cmake                     |  98 +++
 CMakeFiles/Makefile2                          | 163 ++++
 CMakeFiles/Progress/1                         |   1 +
 CMakeFiles/Progress/2                         |   1 +
 CMakeFiles/Progress/count.txt                 |   1 +
 CMakeFiles/TargetDirectories.txt              |   6 +
 CMakeFiles/cmake.check_cache                  |   1 +
 CMakeFiles/feature_tests.bin                  | Bin 0 -> 12312 bytes
 CMakeFiles/feature_tests.cxx                  | 405 ++++++++++
 CMakeFiles/logdbtest.dir/DependInfo.cmake     |  23 +
 CMakeFiles/logdbtest.dir/build.make           | 114 +++
 CMakeFiles/logdbtest.dir/cmake_clean.cmake    |  10 +
 CMakeFiles/logdbtest.dir/depend.make          |   2 +
 CMakeFiles/logdbtest.dir/flags.make           |  10 +
 CMakeFiles/logdbtest.dir/link.txt             |   1 +
 CMakeFiles/logdbtest.dir/progress.make        |   3 +
 CMakeFiles/progress.marks                     |   1 +
 CMakeLists.txt                                |   2 +-
 Makefile                                      | 192 +++++
 build/CMakeCache.txt                          | 137 ++--
 .../CMakeFiles/3.10.2/CMakeCXXCompiler.cmake  |  75 ++
 .../3.10.2/CMakeDetermineCompilerABI_CXX.bin  | Bin 0 -> 8264 bytes
 build/CMakeFiles/3.10.2/CMakeSystem.cmake     |  15 +
 .../CompilerIdCXX/CMakeCXXCompilerId.cpp      | 576 ++++++++++++++
 build/CMakeFiles/3.10.2/CompilerIdCXX/a.out   | Bin 0 -> 8416 bytes
 .../3.16.3/CMakeDetermineCompilerABI_CXX.bin  | Bin 16560 -> 0 bytes
 build/CMakeFiles/3.16.3/CompilerIdCXX/a.out   | Bin 16720 -> 0 bytes
 .../CMakeDirectoryInformation.cmake           |  16 +
 build/CMakeFiles/CMakeOutput.log              | 743 +++++++++---------
 build/CMakeFiles/Makefile.cmake               |  45 ++
 build/CMakeFiles/Makefile2                    | 104 +--
 build/CMakeFiles/TargetDirectories.txt        |  12 +-
 build/CMakeFiles/feature_tests.bin            | Bin 0 -> 12312 bytes
 build/CMakeFiles/feature_tests.cxx            | 405 ++++++++++
 .../CMakeFiles/logdbtest.dir/CXX.includecache |  34 +-
 .../CMakeFiles/logdbtest.dir/DependInfo.cmake |   5 +-
 build/CMakeFiles/logdbtest.dir/build.make     |  33 +-
 .../logdbtest.dir/cmake_clean.cmake           |   2 +-
 .../CMakeFiles/logdbtest.dir/depend.internal  |  10 +-
 build/CMakeFiles/logdbtest.dir/depend.make    |   8 +-
 build/CMakeFiles/logdbtest.dir/flags.make     |   6 +-
 build/CMakeFiles/logdbtest.dir/link.txt       |   2 +-
 build/CMakeFiles/logdbtest.dir/progress.make  |   4 +-
 build/CMakeFiles/progress.marks               |   2 +-
 build/Makefile                                |  18 +-
 build/cmake_install.cmake                     |   9 +-
 build/compile_commands.json                   |  25 +-
 .../CMakeDirectoryInformation.cmake           |   6 +-
 .../src/CMakeFiles/logdb.dir/CXX.includecache |  56 +-
 .../src/CMakeFiles/logdb.dir/DependInfo.cmake |  10 +-
 build/src/CMakeFiles/logdb.dir/build.make     |  91 ++-
 .../CMakeFiles/logdb.dir/cmake_clean.cmake    |   2 +
 .../src/CMakeFiles/logdb.dir/depend.internal  |  21 +-
 build/src/CMakeFiles/logdb.dir/depend.make    |  19 +-
 build/src/CMakeFiles/logdb.dir/flags.make     |   6 +-
 build/src/CMakeFiles/logdb.dir/link.txt       |   2 +-
 build/src/CMakeFiles/logdb.dir/progress.make  |   2 +
 build/src/CMakeFiles/progress.marks           |   2 +-
 build/src/Makefile                            |  96 ++-
 build/src/cmake_install.cmake                 |   2 +-
 cmake_install.cmake                           |  55 ++
 include/appender.h                            |  28 +-
 include/layout.h                              |  36 +
 {src => include}/log.h                        |  22 +-
 include/loggingevent.h                        |  31 +
 .../CMakeDirectoryInformation.cmake           |  16 +
 src/CMakeFiles/logdb.dir/CXX.includecache     |  72 ++
 src/CMakeFiles/logdb.dir/DependInfo.cmake     |  23 +
 src/CMakeFiles/logdb.dir/appender.cpp.o       | Bin 0 -> 10768 bytes
 src/CMakeFiles/logdb.dir/build.make           | 167 ++++
 src/CMakeFiles/logdb.dir/cmake_clean.cmake    |  12 +
 src/CMakeFiles/logdb.dir/depend.internal      |  24 +
 src/CMakeFiles/logdb.dir/depend.make          |  24 +
 src/CMakeFiles/logdb.dir/flags.make           |  10 +
 src/CMakeFiles/logdb.dir/link.txt             |   1 +
 src/CMakeFiles/logdb.dir/progress.make        |   5 +
 src/CMakeFiles/progress.marks                 |   1 +
 src/CMakeLists.txt                            |   2 +-
 src/Makefile                                  | 240 ++++++
 src/appender.cpp                              |  37 +
 src/cmake_install.cmake                       |  39 +
 src/layout.cpp                                |  42 +
 src/log.cpp                                   |  55 +-
 testlogdb.cpp                                 |  15 +-
 92 files changed, 4682 insertions(+), 846 deletions(-)
 create mode 100644 CMakeCache.txt
 rename {build/CMakeFiles/3.16.3 => CMakeFiles/3.10.2}/CMakeCXXCompiler.cmake (82%)
 create mode 100755 CMakeFiles/3.10.2/CMakeDetermineCompilerABI_CXX.bin
 rename {build/CMakeFiles/3.16.3 => CMakeFiles/3.10.2}/CMakeSystem.cmake (52%)
 rename {build/CMakeFiles/3.16.3 => CMakeFiles/3.10.2}/CompilerIdCXX/CMakeCXXCompilerId.cpp (83%)
 create mode 100755 CMakeFiles/3.10.2/CompilerIdCXX/a.out
 create mode 100644 CMakeFiles/CMakeDirectoryInformation.cmake
 create mode 100644 CMakeFiles/CMakeOutput.log
 create mode 100644 CMakeFiles/Makefile.cmake
 create mode 100644 CMakeFiles/Makefile2
 create mode 100644 CMakeFiles/Progress/1
 create mode 100644 CMakeFiles/Progress/2
 create mode 100644 CMakeFiles/Progress/count.txt
 create mode 100644 CMakeFiles/TargetDirectories.txt
 create mode 100644 CMakeFiles/cmake.check_cache
 create mode 100755 CMakeFiles/feature_tests.bin
 create mode 100644 CMakeFiles/feature_tests.cxx
 create mode 100644 CMakeFiles/logdbtest.dir/DependInfo.cmake
 create mode 100644 CMakeFiles/logdbtest.dir/build.make
 create mode 100644 CMakeFiles/logdbtest.dir/cmake_clean.cmake
 create mode 100644 CMakeFiles/logdbtest.dir/depend.make
 create mode 100644 CMakeFiles/logdbtest.dir/flags.make
 create mode 100644 CMakeFiles/logdbtest.dir/link.txt
 create mode 100644 CMakeFiles/logdbtest.dir/progress.make
 create mode 100644 CMakeFiles/progress.marks
 create mode 100644 Makefile
 create mode 100644 build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake
 create mode 100755 build/CMakeFiles/3.10.2/CMakeDetermineCompilerABI_CXX.bin
 create mode 100644 build/CMakeFiles/3.10.2/CMakeSystem.cmake
 create mode 100644 build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
 create mode 100755 build/CMakeFiles/3.10.2/CompilerIdCXX/a.out
 delete mode 100755 build/CMakeFiles/3.16.3/CMakeDetermineCompilerABI_CXX.bin
 delete mode 100755 build/CMakeFiles/3.16.3/CompilerIdCXX/a.out
 create mode 100644 build/CMakeFiles/CMakeDirectoryInformation.cmake
 create mode 100644 build/CMakeFiles/Makefile.cmake
 create mode 100755 build/CMakeFiles/feature_tests.bin
 create mode 100644 build/CMakeFiles/feature_tests.cxx
 create mode 100644 cmake_install.cmake
 create mode 100644 include/layout.h
 rename {src => include}/log.h (85%)
 create mode 100644 include/loggingevent.h
 create mode 100644 src/CMakeFiles/CMakeDirectoryInformation.cmake
 create mode 100644 src/CMakeFiles/logdb.dir/CXX.includecache
 create mode 100644 src/CMakeFiles/logdb.dir/DependInfo.cmake
 create mode 100644 src/CMakeFiles/logdb.dir/appender.cpp.o
 create mode 100644 src/CMakeFiles/logdb.dir/build.make
 create mode 100644 src/CMakeFiles/logdb.dir/cmake_clean.cmake
 create mode 100644 src/CMakeFiles/logdb.dir/depend.internal
 create mode 100644 src/CMakeFiles/logdb.dir/depend.make
 create mode 100644 src/CMakeFiles/logdb.dir/flags.make
 create mode 100644 src/CMakeFiles/logdb.dir/link.txt
 create mode 100644 src/CMakeFiles/logdb.dir/progress.make
 create mode 100644 src/CMakeFiles/progress.marks
 create mode 100644 src/Makefile
 create mode 100644 src/cmake_install.cmake
 create mode 100644 src/layout.cpp

diff --git a/CMakeCache.txt b/CMakeCache.txt
new file mode 100644
index 0000000..8c3c56f
--- /dev/null
+++ b/CMakeCache.txt
@@ -0,0 +1,293 @@
+# This is the CMakeCache file.
+# For build in directory: /home/shichen/ssd/opensource/logdb
+# It was generated by CMake: /usr/bin/cmake
+# You can edit this file to change values found and used by cmake.
+# If you do not want to change any of the values, simply exit the editor.
+# If you do want to change a value, simply edit, save, and exit the editor.
+# The syntax for the file is as follows:
+# KEY:TYPE=VALUE
+# KEY is the name of a variable in the cache.
+# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
+# VALUE is the current value for the KEY.
+
+########################
+# EXTERNAL cache entries
+########################
+
+//Path to a program.
+CMAKE_AR:FILEPATH=/usr/bin/ar
+
+//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
+// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
+CMAKE_BUILD_TYPE:STRING=
+
+//Enable/Disable color output during build.
+CMAKE_COLOR_MAKEFILE:BOOL=ON
+
+//CXX compiler
+CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++
+
+//A wrapper around 'ar' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-7
+
+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-7
+
+//Flags used by the compiler during all build types.
+CMAKE_CXX_FLAGS:STRING=
+
+//Flags used by the compiler during debug builds.
+CMAKE_CXX_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the compiler during release builds for minimum
+// size.
+CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the compiler during release builds.
+CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the compiler during release builds with debug info.
+CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//Flags used by the linker.
+CMAKE_EXE_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during debug builds.
+CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during release minsize builds.
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during release builds.
+CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during Release with Debug Info builds.
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Enable/Disable output of compile commands during generation.
+CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF
+
+//Install path prefix, prepended onto install directories.
+CMAKE_INSTALL_PREFIX:PATH=/usr/local
+
+//Path to a program.
+CMAKE_LINKER:FILEPATH=/usr/bin/ld
+
+//Path to a program.
+CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make
+
+//Flags used by the linker during the creation of modules.
+CMAKE_MODULE_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during debug builds.
+CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during release minsize builds.
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during release builds.
+CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during Release with Debug Info builds.
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_NM:FILEPATH=/usr/bin/nm
+
+//Path to a program.
+CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy
+
+//Path to a program.
+CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump
+
+//Value Computed by CMake
+CMAKE_PROJECT_DESCRIPTION:STATIC=C++ implementation of logging system
+
+//Value Computed by CMake
+CMAKE_PROJECT_NAME:STATIC=logdb
+
+//Path to a program.
+CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib
+
+//Flags used by the linker during the creation of dll's.
+CMAKE_SHARED_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during debug builds.
+CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during release minsize builds.
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during release builds.
+CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during Release with Debug Info builds.
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//If set, runtime paths are not added when installing shared libraries,
+// but are added when building.
+CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
+
+//If set, runtime paths are not added when using shared libraries.
+CMAKE_SKIP_RPATH:BOOL=NO
+
+//Flags used by the linker during the creation of static libraries.
+CMAKE_STATIC_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during debug builds.
+CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during release minsize builds.
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during release builds.
+CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during Release with Debug Info builds.
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_STRIP:FILEPATH=/usr/bin/strip
+
+//If this value is on, makefiles will be generated without the
+// .SILENT directive, and all commands will be echoed to the console
+// during the make.  This is useful for debugging only. With Visual
+// Studio IDE projects all commands are done without /nologo.
+CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
+
+//Value Computed by CMake
+logdb_BINARY_DIR:STATIC=/home/shichen/ssd/opensource/logdb
+
+//Dependencies for target
+logdb_LIB_DEPENDS:STATIC=
+
+//Value Computed by CMake
+logdb_SOURCE_DIR:STATIC=/home/shichen/ssd/opensource/logdb
+
+
+########################
+# INTERNAL cache entries
+########################
+
+//ADVANCED property for variable: CMAKE_AR
+CMAKE_AR-ADVANCED:INTERNAL=1
+//This is the directory where this CMakeCache.txt was created
+CMAKE_CACHEFILE_DIR:INTERNAL=/home/shichen/ssd/opensource/logdb
+//Major version of cmake used to create the current loaded cache
+CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
+//Minor version of cmake used to create the current loaded cache
+CMAKE_CACHE_MINOR_VERSION:INTERNAL=10
+//Patch version of cmake used to create the current loaded cache
+CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
+//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
+CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
+//Path to CMake executable.
+CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
+//Path to cpack program executable.
+CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
+//Path to ctest program executable.
+CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
+//ADVANCED property for variable: CMAKE_CXX_COMPILER
+CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
+CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
+CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS
+CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
+CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
+CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
+CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
+CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//Executable file format
+CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
+CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
+CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
+CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
+CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
+//Name of external makefile project generator.
+CMAKE_EXTRA_GENERATOR:INTERNAL=
+//Name of generator.
+CMAKE_GENERATOR:INTERNAL=Unix Makefiles
+//Name of generator platform.
+CMAKE_GENERATOR_PLATFORM:INTERNAL=
+//Name of generator toolset.
+CMAKE_GENERATOR_TOOLSET:INTERNAL=
+//Source directory with the top level CMakeLists.txt file for this
+// project
+CMAKE_HOME_DIRECTORY:INTERNAL=/home/shichen/ssd/opensource/logdb
+//Install .so files without execute permission.
+CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
+//ADVANCED property for variable: CMAKE_LINKER
+CMAKE_LINKER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
+CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
+CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
+CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
+CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_NM
+CMAKE_NM-ADVANCED:INTERNAL=1
+//number of local generators
+CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=2
+//ADVANCED property for variable: CMAKE_OBJCOPY
+CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJDUMP
+CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
+//Platform information initialized
+CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RANLIB
+CMAKE_RANLIB-ADVANCED:INTERNAL=1
+//Path to CMake installation.
+CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.10
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
+CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
+CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
+CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
+CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_RPATH
+CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
+CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
+CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
+CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STRIP
+CMAKE_STRIP-ADVANCED:INTERNAL=1
+//uname command
+CMAKE_UNAME:INTERNAL=/bin/uname
+//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
+CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
+
diff --git a/build/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake b/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake
similarity index 82%
rename from build/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake
rename to CMakeFiles/3.10.2/CMakeCXXCompiler.cmake
index 278ef39..85984d7 100644
--- a/build/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake
+++ b/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake
@@ -1,30 +1,27 @@
 set(CMAKE_CXX_COMPILER "/usr/bin/c++")
 set(CMAKE_CXX_COMPILER_ARG1 "")
 set(CMAKE_CXX_COMPILER_ID "GNU")
-set(CMAKE_CXX_COMPILER_VERSION "9.4.0")
+set(CMAKE_CXX_COMPILER_VERSION "7.5.0")
 set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
 set(CMAKE_CXX_COMPILER_WRAPPER "")
 set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")
-set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17")
 set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
 set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
 set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
 set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
-set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
 
 set(CMAKE_CXX_PLATFORM_ID "Linux")
 set(CMAKE_CXX_SIMULATE_ID "")
-set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")
 set(CMAKE_CXX_SIMULATE_VERSION "")
 
 
 
 set(CMAKE_AR "/usr/bin/ar")
-set(CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-9")
+set(CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-7")
 set(CMAKE_RANLIB "/usr/bin/ranlib")
-set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-9")
+set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-7")
 set(CMAKE_LINKER "/usr/bin/ld")
-set(CMAKE_MT "")
 set(CMAKE_COMPILER_IS_GNUCXX 1)
 set(CMAKE_CXX_COMPILER_LOADED 1)
 set(CMAKE_CXX_COMPILER_WORKS TRUE)
@@ -42,17 +39,8 @@ if(CMAKE_COMPILER_IS_MINGW)
   set(MINGW 1)
 endif()
 set(CMAKE_CXX_COMPILER_ID_RUN 1)
-set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP)
 set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
-
-foreach (lang C OBJC OBJCXX)
-  if (CMAKE_${lang}_COMPILER_ID_RUN)
-    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
-      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
-    endforeach()
-  endif()
-endforeach()
-
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;mm;CPP)
 set(CMAKE_CXX_LINKER_PREFERENCE 30)
 set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
 
@@ -82,7 +70,6 @@ endif()
 
 
 
-set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include")
 set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")
-set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/7;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib")
 set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
diff --git a/CMakeFiles/3.10.2/CMakeDetermineCompilerABI_CXX.bin b/CMakeFiles/3.10.2/CMakeDetermineCompilerABI_CXX.bin
new file mode 100755
index 0000000000000000000000000000000000000000..06f175697a725345131ebff7865782a6235439ef
GIT binary patch
literal 8264
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

literal 0
HcmV?d00001

diff --git a/build/CMakeFiles/3.16.3/CMakeSystem.cmake b/CMakeFiles/3.10.2/CMakeSystem.cmake
similarity index 52%
rename from build/CMakeFiles/3.16.3/CMakeSystem.cmake
rename to CMakeFiles/3.10.2/CMakeSystem.cmake
index f4b3e37..7962f62 100644
--- a/build/CMakeFiles/3.16.3/CMakeSystem.cmake
+++ b/CMakeFiles/3.10.2/CMakeSystem.cmake
@@ -1,13 +1,13 @@
-set(CMAKE_HOST_SYSTEM "Linux-5.15.0-60-generic")
+set(CMAKE_HOST_SYSTEM "Linux-5.4.0-105-generic")
 set(CMAKE_HOST_SYSTEM_NAME "Linux")
-set(CMAKE_HOST_SYSTEM_VERSION "5.15.0-60-generic")
+set(CMAKE_HOST_SYSTEM_VERSION "5.4.0-105-generic")
 set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")
 
 
 
-set(CMAKE_SYSTEM "Linux-5.15.0-60-generic")
+set(CMAKE_SYSTEM "Linux-5.4.0-105-generic")
 set(CMAKE_SYSTEM_NAME "Linux")
-set(CMAKE_SYSTEM_VERSION "5.15.0-60-generic")
+set(CMAKE_SYSTEM_VERSION "5.4.0-105-generic")
 set(CMAKE_SYSTEM_PROCESSOR "x86_64")
 
 set(CMAKE_CROSSCOMPILING "FALSE")
diff --git a/build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp b/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
similarity index 83%
rename from build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
rename to CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
index 69cfdba..2d66298 100644
--- a/build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
+++ b/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
@@ -19,9 +19,6 @@
 # define COMPILER_ID "Intel"
 # if defined(_MSC_VER)
 #  define SIMULATE_ID "MSVC"
-# endif
-# if defined(__GNUC__)
-#  define SIMULATE_ID "GNU"
 # endif
   /* __INTEL_COMPILER = VRP */
 # define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
@@ -40,17 +37,6 @@
 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
 # endif
-# if defined(__GNUC__)
-#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-# elif defined(__GNUG__)
-#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-# endif
-# if defined(__GNUC_MINOR__)
-#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-# endif
-# if defined(__GNUC_PATCHLEVEL__)
-#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-# endif
 
 #elif defined(__PATHCC__)
 # define COMPILER_ID "PathScale"
@@ -125,14 +111,6 @@
 # define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
 # define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
 
-#elif defined(__ibmxl__) && defined(__clang__)
-# define COMPILER_ID "XLClang"
-# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
-# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
-# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
-# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
-
-
 #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
 # define COMPILER_ID "XL"
   /* __IBMCPP__ = VRP */
@@ -170,33 +148,9 @@
 #elif defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version)
 # define COMPILER_ID "Fujitsu"
 
-#elif defined(__ghs__)
-# define COMPILER_ID "GHS"
-/* __GHS_VERSION_NUMBER = VVVVRP */
-# ifdef __GHS_VERSION_NUMBER
-# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
-# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
-# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
-# endif
-
 #elif defined(__SCO_VERSION__)
 # define COMPILER_ID "SCO"
 
-#elif defined(__ARMCC_VERSION) && !defined(__clang__)
-# define COMPILER_ID "ARMCC"
-#if __ARMCC_VERSION >= 1000000
-  /* __ARMCC_VERSION = VRRPPPP */
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
-#else
-  /* __ARMCC_VERSION = VRPPPP */
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
-#endif
-
-
 #elif defined(__clang__) && defined(__apple_build_version__)
 # define COMPILER_ID "AppleClang"
 # if defined(_MSC_VER)
@@ -212,13 +166,6 @@
 # endif
 # define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
 
-#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
-# define COMPILER_ID "ARMClang"
-  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
-# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
-
 #elif defined(__clang__)
 # define COMPILER_ID "Clang"
 # if defined(_MSC_VER)
@@ -276,22 +223,49 @@
 
 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
 # define COMPILER_ID "IAR"
-# if defined(__VER__) && defined(__ICCARM__)
+# if defined(__VER__)
 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
 #  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
 #  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
-#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
-#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
-#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
-#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# endif
+
+#elif defined(__ARMCC_VERSION)
+# define COMPILER_ID "ARMCC"
+#if __ARMCC_VERSION >= 1000000
+  /* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+#else
+  /* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+#endif
+
+
+#elif defined(_SGI_COMPILER_VERSION) || defined(_COMPILER_VERSION)
+# define COMPILER_ID "MIPSpro"
+# if defined(_SGI_COMPILER_VERSION)
+  /* _SGI_COMPILER_VERSION = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(_SGI_COMPILER_VERSION/100)
+#  define COMPILER_VERSION_MINOR DEC(_SGI_COMPILER_VERSION/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(_SGI_COMPILER_VERSION    % 10)
+# else
+  /* _COMPILER_VERSION = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(_COMPILER_VERSION/100)
+#  define COMPILER_VERSION_MINOR DEC(_COMPILER_VERSION/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(_COMPILER_VERSION    % 10)
 # endif
 
 
 /* These compilers are either not known or too old to define an
   identification macro.  Try to identify the platform and guess that
   it is the native compiler.  */
+#elif defined(__sgi)
+# define COMPILER_ID "MIPSpro"
+
 #elif defined(__hpux) || defined(__hpua)
 # define COMPILER_ID "HP"
 
@@ -350,6 +324,9 @@ char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
 #elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
 # define PLATFORM_ID "AIX"
 
+#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)
+# define PLATFORM_ID "IRIX"
+
 #elif defined(__hpux) || defined(__hpux__)
 # define PLATFORM_ID "HP-UX"
 
@@ -409,14 +386,6 @@ char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
 #  define PLATFORM_ID
 # endif
 
-#elif defined(__INTEGRITY)
-# if defined(INT_178B)
-#  define PLATFORM_ID "Integrity178"
-
-# else /* regular Integrity */
-#  define PLATFORM_ID "Integrity"
-# endif
-
 #else /* unknown platform */
 # define PLATFORM_ID
 
@@ -474,50 +443,9 @@ char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
 # if defined(__ICCARM__)
 #  define ARCHITECTURE_ID "ARM"
 
-# elif defined(__ICCRX__)
-#  define ARCHITECTURE_ID "RX"
-
-# elif defined(__ICCRH850__)
-#  define ARCHITECTURE_ID "RH850"
-
-# elif defined(__ICCRL78__)
-#  define ARCHITECTURE_ID "RL78"
-
-# elif defined(__ICCRISCV__)
-#  define ARCHITECTURE_ID "RISCV"
-
 # elif defined(__ICCAVR__)
 #  define ARCHITECTURE_ID "AVR"
 
-# elif defined(__ICC430__)
-#  define ARCHITECTURE_ID "MSP430"
-
-# elif defined(__ICCV850__)
-#  define ARCHITECTURE_ID "V850"
-
-# elif defined(__ICC8051__)
-#  define ARCHITECTURE_ID "8051"
-
-# else /* unknown architecture */
-#  define ARCHITECTURE_ID ""
-# endif
-
-#elif defined(__ghs__)
-# if defined(__PPC64__)
-#  define ARCHITECTURE_ID "PPC64"
-
-# elif defined(__ppc__)
-#  define ARCHITECTURE_ID "PPC"
-
-# elif defined(__ARM__)
-#  define ARCHITECTURE_ID "ARM"
-
-# elif defined(__x86_64__)
-#  define ARCHITECTURE_ID "x64"
-
-# elif defined(__i386__)
-#  define ARCHITECTURE_ID "X86"
-
 # else /* unknown architecture */
 #  define ARCHITECTURE_ID ""
 # endif
@@ -602,26 +530,14 @@ char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
 
 
 
-#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
-#  if defined(__INTEL_CXX11_MODE__)
-#    if defined(__cpp_aggregate_nsdmi)
-#      define CXX_STD 201402L
-#    else
-#      define CXX_STD 201103L
-#    endif
-#  else
-#    define CXX_STD 199711L
-#  endif
-#elif defined(_MSC_VER) && defined(_MSVC_LANG)
-#  define CXX_STD _MSVC_LANG
+#if defined(_MSC_VER) && defined(_MSVC_LANG)
+#define CXX_STD _MSVC_LANG
 #else
-#  define CXX_STD __cplusplus
+#define CXX_STD __cplusplus
 #endif
 
 const char* info_language_dialect_default = "INFO" ":" "dialect_default["
-#if CXX_STD > 201703L
-  "20"
-#elif CXX_STD >= 201703L
+#if CXX_STD > 201402L
   "17"
 #elif CXX_STD >= 201402L
   "14"
diff --git a/CMakeFiles/3.10.2/CompilerIdCXX/a.out b/CMakeFiles/3.10.2/CompilerIdCXX/a.out
new file mode 100755
index 0000000000000000000000000000000000000000..71c2ceda86a2fae89d661d131b89af3990e37838
GIT binary patch
literal 8416
zcmeHMU2GKB6~4QRu>pH`p#cm;WtxHnZ9J?AKZb;6*ME$wwIRe%8pjOd{jpcsA9r^)
zu~A8_I*GKUZcx$(TB%hkwGWjdMe0KoRcd8qN}j5cz66C-qE$#tOH`*c)M>%nbMBn8
zo*55qs`jA|Txs{*`<<VA?(d#^_8VRCZokhbxCF$P1hx*>SxA%^S2s`vNK~|m74Ut(
z*d&%idzr*6e$*nswaPr1X4*h_04VCU`7OXr?<YB?>>*NejU=4p@CvKVR0u@^sE5AJ
zHOVGWMOK(b$q$Vv>tPf1L{N$YRjdlpX>yDyj}OO&pMJ9Erk$1*!4ze&9KL2IvEE3A
z-1HGCB?ME}dkplXpTz%nBuoNFsK2|-OPKs;O2ZX9vYDYhyLM!gE!j-IJk~PSwx?y!
zF11upcgk_2eUv@ecU1O->&;V(KHmo)#E^eS{r;%`$oDQ@e(CoMC$4?`?1}3?`3vgu
z2dbaCw1K4JA-xf>H6D0BV2THxxC_1t@CQ8P1<XeRhrdVYdScAb)0w=H&74X>6Ipu6
zG>WF4GctK`Fy7PNq3=|8s=I~W)8DHnQ^nM9revmy{k<L8LO#`R3}sPsI9JG%rf!LP
z3QB*h+2uL*!R+Du@j90`X5eJ_#e?KK?|a^_hiUW7)45<gOn5_Bk(!KiJM6+I>a7l%
zUHESaS6ui9gl}`<HwnKSvie0ga6DYD+Hf8-@@8!~?k_HLHk{84^5$*0{a(=~Z!~CU
z>VCCS5!&<9roVbgo4n94BdWV!0;sz6yYL;_9EIA?pq4(%{j`4AQ+exzR{4WA`QF^&
z{`gegJK(l9)s&Fr!22LrU7H4-zlJt<BIm$Qp>b53s{0X8ZQs0Bxn^#FuJ>aTx^5b*
zUQMf^&Ckg$24}F>#Wv_?P;hGZkTkP>0ra)=3jwV%r=6dDRP$Zb-dZr5!Jv-}Hlo41
z*_$}90mMXkhc<cO?G;cvivBceXAZmrt=Xn(wK}W8*TuSzpzT9<CeX2)Ghh<NgW`kN
z(;$Jh%IO<grF`|xuG=W1omu+>P&(6fLp!JWE`?qfp<hn>x^4qL<%OeQ;u6fv-#|I^
z`Z9k_Jnt=jdvGT9mDsVK%G<G{F_`<U!FoBhEl3}aRqpguZpF7>lWTkaPGENZLba+r
z|Dmb0Ug7zOSN<Na-0H0SIaa;zU2Ss4r|tV)`H#5v1B0<AV}r31F@5Ij;{4y7fpOtp
zk-Gy&=`6n5t>?tK)zjB~Xn&%R8_i@>#R0et2bp702VZ|WRV-x+`GJU4_Nr9b&6UWY
zkQ$>|!%P>7xq&#|&IB68#K-{ElNlqMN|<o<q>Xac9BAD&D14g&599rbXKl-!Y87|f
zE}*Xh?F5Q<Wgkr01)vvzzK48R=?7tJ<9&|Bcj}1njfH)i8tWU*`s%}o<8S!v?P~Rl
zC_u$q9{L47%AW&yd3OcF-NEKBhgLn)Fd-h@`0y7V+9I!C)bE7P1jsc2<$}6T!snad
z@6!mzg5ekZ9Zk#qUjvUUov#CY8TcvWw+F*7`rCue-wAXDm8oUz!EN8J(}Ix~mTSSb
z$@<=4v>0rQ1tYQGw)UU`av<LxY>@XV&Vzt?u-`uj-7EKI;NA?}n}Pqw8Q?gN<2sJ1
zm^PBr%@hpLb4hekJjTyJjvqIXJm0|>XJg?w67ORy%>Q_yTEO->x->cF(kNKN-ySS)
z5PzlB6sL)<BHB!JEm0;M^G#D+M{bLGVz3_y4Va#bg6(~l46)ols+PYXE+M$?rT>@7
z9{l{tHqYN2wJ#F?6Kb;`?C1ZC(mV9Owa4*1$L}1kb9~P6_`!~j{mQnZL*=|#R`#k8
zc(goJmaW!jTievguI(23Y5WO5M9=SjyL<p*CVnqF@qjQreryBq;^h70l&`DpBPYIG
z@P2dR^@7*Ui8lydZzsN@wy&J{O2OyHiLVk7-taa?Ks1V|C*D-c!`Q^(-5ji)M<*T<
zCp|V=0HPJnBRJ((3yn9rjS+yCGM{f74E=tlcCMW`L}MQNFd)_nK8H^Eb?`7%?2xPn
z#Cj3&#QAhCs^EEBCO)bzB32FWFTZFK6R!CT5<cz1KSwy<hn5u~_Cm#H^M}uOx5Ssu
zLyqk5{mOR6rTo(QJO{X!|F22;ka&gGaVHtN+j!4Q`PCxM7a7ST@v{FL$zQW%9j^lJ
z!zkXhj@L=vy&rB%eCfUlfulZ;b>9m38d#Sojf;=*Zon03%lS1f@umCZF~GxO-I9H>
z1MoE-=i<1;owl*{4B2t-!{-23mWqp)0blK3C-|OZkyj8Gi|1|`F<z7SI^oWP`~q;C
zhfDNBmm>KqK*O-#+FbkpG|6*5mfujnCj0LE%N4-Uj{6*aKz5#>e&yQ;`n*AQ-1(Q4
zus}Fox1Du>E9A4CL;!!l4p99~+3(W(Fpl<N9TivJM<j}7$t<VSYC<fg#dI^LConNq
zf}~iopbuvYLq=9lnuTIXH_BrIU(nf<nM$gA_v~x)7Q&QVMmLH@V_Z+=&EmL77mZv>
zPnL7JaZs_fbdWS1q8+`)Q>l*Q$2;h$-jh@lqoYE9BHp?)lTR1;X%2R}kHmVr^sc^6
z9ddR~OG%-3ezh;w+tcCX$mAeE@c!4kG_s&|9ufM%_@VY#TtC#^{diZu-XCj^ccE38
zQcRS}a!mg^iI_?nrok$US;%PAk%rV!%1SkYtTXSZCrbr=#K<QxC)sldq>`DuUM{7Q
zLJpmi4crO(g%fCTIk^Gcp;C#uka<w4oHg>pWn&nY!I_Z&aY%;pG-8(2Gxh0AwmJtT
z?PJnI2(>hxGmRmjX3?S}T+8Gk?>Z{fe8EhqvG$%8(-@}KaK5Y#l{1j!&LoA3tr4R%
zBGlw~9_(4vELt2&%{Ur5@QSIdfeJ#EQ=*P$O@UwPZ~-c2Y7D+{V}fKsu9TV@p{+QQ
z1buE<`qrMbG`J4Nja()H?%+bJFv&uNNzcI^_c)OMA%yWg9N}6Pi{mw>9N)89l(m=7
zLj$jTIPS7=T*p))oC)8b+-`-6U7zDWrdwE$s9V1i@LLdrbN?JCGG+fcEO3WIeV~tT
z4%UBzDoi=?i`OcSo%K0lIR+R$1z4ZsPNw{>0TEf;^LGMJd}FXa$EQsBy~h5t9Mh*j
zAKxt8<~WwAB73!Res=!}7N?+sbISVj^sZs5ki*=+d;HIVE{f34PAx9x_;@|=?8Uu)
z-vXvxpW|ny{Qm~q;5O42UHTknGi85SpW93^PP6yVzr#%BA62Xjl>24qhc117M>BPY
zZSL{^nDlx6Pg4BE^i}SNsN!lPAN^;2eg`mp#3k?U|K~1!elIX>K;yQ;^TyBxs9@|(
z+otxe;Qt%l^4w;633Nj?ea<V)Q(}VUKtvX9Gkq6O+<V-AExtvkpiGnhygylw*YRbL
zK@ryH_sldp1tluK7r$7a=`~>4^=t7abr4xpl{MC5_)kzljQi(!EJFHjdDn7?InYJS
z-4E+;2cEsKzMb;kvCEyL{v$MTnD@chl>OoR5BE3wZr48xp*@ykF5}#<#l;xWTmOCP
L;1d=k>el}!^A2#R

literal 0
HcmV?d00001

diff --git a/CMakeFiles/CMakeDirectoryInformation.cmake b/CMakeFiles/CMakeDirectoryInformation.cmake
new file mode 100644
index 0000000..72f65c9
--- /dev/null
+++ b/CMakeFiles/CMakeDirectoryInformation.cmake
@@ -0,0 +1,16 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# Relative path conversion top directories.
+set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/shichen/ssd/opensource/logdb")
+set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/shichen/ssd/opensource/logdb")
+
+# Force unix paths in dependencies.
+set(CMAKE_FORCE_UNIX_PATHS 1)
+
+
+# The C and CXX include file regular expressions for this directory.
+set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")
+set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")
+set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
+set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
diff --git a/CMakeFiles/CMakeOutput.log b/CMakeFiles/CMakeOutput.log
new file mode 100644
index 0000000..5306d38
--- /dev/null
+++ b/CMakeFiles/CMakeOutput.log
@@ -0,0 +1,430 @@
+The system is: Linux - 5.4.0-105-generic - x86_64
+Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
+Compiler: /usr/bin/c++ 
+Build flags: 
+Id flags:  
+
+The output was:
+0
+
+
+Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"
+
+The CXX compiler identification is GNU, found in "/home/shichen/ssd/opensource/logdb/CMakeFiles/3.10.2/CompilerIdCXX/a.out"
+
+Determining if the CXX compiler works passed with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_0de0b/fast"
+/usr/bin/make -f CMakeFiles/cmTC_0de0b.dir/build.make CMakeFiles/cmTC_0de0b.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_0de0b.dir/testCXXCompiler.cxx.o
+/usr/bin/c++     -o CMakeFiles/cmTC_0de0b.dir/testCXXCompiler.cxx.o -c /home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
+Linking CXX executable cmTC_0de0b
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0de0b.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_0de0b.dir/testCXXCompiler.cxx.o  -o cmTC_0de0b 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+
+
+Detecting CXX compiler ABI info compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_1ee63/fast"
+/usr/bin/make -f CMakeFiles/cmTC_1ee63.dir/build.make CMakeFiles/cmTC_1ee63.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o
+/usr/bin/c++     -o CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.10/Modules/CMakeCXXCompilerABI.cpp
+Linking CXX executable cmTC_1ee63
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1ee63.dir/link.txt --verbose=1
+/usr/bin/c++      -v CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_1ee63 
+Using built-in specs.
+COLLECT_GCC=/usr/bin/c++
+COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper
+OFFLOAD_TARGET_NAMES=nvptx-none
+OFFLOAD_TARGET_DEFAULT=1
+Target: x86_64-linux-gnu
+Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.5.0-3ubuntu1~18.04' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
+Thread model: posix
+gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) 
+COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/
+LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../:/lib/:/usr/lib/
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_1ee63' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
+ /usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccnJquC5.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_1ee63 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_1ee63' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+
+
+Parsed CXX implicit link information from above output:
+  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
+  ignore line: [Change Dir: /home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp]
+  ignore line: []
+  ignore line: [Run Build Command:"/usr/bin/make" "cmTC_1ee63/fast"]
+  ignore line: [/usr/bin/make -f CMakeFiles/cmTC_1ee63.dir/build.make CMakeFiles/cmTC_1ee63.dir/build]
+  ignore line: [make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp']
+  ignore line: [Building CXX object CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o]
+  ignore line: [/usr/bin/c++     -o CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.10/Modules/CMakeCXXCompilerABI.cpp]
+  ignore line: [Linking CXX executable cmTC_1ee63]
+  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1ee63.dir/link.txt --verbose=1]
+  ignore line: [/usr/bin/c++      -v CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_1ee63 ]
+  ignore line: [Using built-in specs.]
+  ignore line: [COLLECT_GCC=/usr/bin/c++]
+  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper]
+  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none]
+  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
+  ignore line: [Target: x86_64-linux-gnu]
+  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.5.0-3ubuntu1~18.04' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
+  ignore line: [Thread model: posix]
+  ignore line: [gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) ]
+  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/]
+  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../:/lib/:/usr/lib/]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_1ee63' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
+  link line: [ /usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccnJquC5.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_1ee63 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o]
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/collect2] ==> ignore
+    arg [-plugin] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so] ==> ignore
+    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper] ==> ignore
+    arg [-plugin-opt=-fresolution=/tmp/ccnJquC5.res] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [--build-id] ==> ignore
+    arg [--eh-frame-hdr] ==> ignore
+    arg [-m] ==> ignore
+    arg [elf_x86_64] ==> ignore
+    arg [--hash-style=gnu] ==> ignore
+    arg [--as-needed] ==> ignore
+    arg [-dynamic-linker] ==> ignore
+    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
+    arg [-pie] ==> ignore
+    arg [-znow] ==> ignore
+    arg [-zrelro] ==> ignore
+    arg [-o] ==> ignore
+    arg [cmTC_1ee63] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o] ==> ignore
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib]
+    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
+    arg [-L/lib/../lib] ==> dir [/lib/../lib]
+    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
+    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../..]
+    arg [CMakeFiles/cmTC_1ee63.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
+    arg [-lstdc++] ==> lib [stdc++]
+    arg [-lm] ==> lib [m]
+    arg [-lgcc_s] ==> lib [gcc_s]
+    arg [-lgcc] ==> lib [gcc]
+    arg [-lc] ==> lib [c]
+    arg [-lgcc_s] ==> lib [gcc_s]
+    arg [-lgcc] ==> lib [gcc]
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o] ==> ignore
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7] ==> [/usr/lib/gcc/x86_64-linux-gnu/7]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib] ==> [/usr/lib]
+  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
+  collapse library dir [/lib/../lib] ==> [/lib]
+  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
+  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../..] ==> [/usr/lib]
+  implicit libs: [stdc++;m;gcc_s;gcc;c;gcc_s;gcc]
+  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/7;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
+  implicit fwks: []
+
+
+
+
+Detecting CXX [-std=c++1z] compiler features compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_c5cba/fast"
+/usr/bin/make -f CMakeFiles/cmTC_c5cba.dir/build.make CMakeFiles/cmTC_c5cba.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_c5cba.dir/feature_tests.cxx.o
+/usr/bin/c++    -std=c++1z -o CMakeFiles/cmTC_c5cba.dir/feature_tests.cxx.o -c /home/shichen/ssd/opensource/logdb/CMakeFiles/feature_tests.cxx
+Linking CXX executable cmTC_c5cba
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c5cba.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_c5cba.dir/feature_tests.cxx.o  -o cmTC_c5cba 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+
+
+    Feature record: CXX_FEATURE:1cxx_aggregate_default_initializers
+    Feature record: CXX_FEATURE:1cxx_alias_templates
+    Feature record: CXX_FEATURE:1cxx_alignas
+    Feature record: CXX_FEATURE:1cxx_alignof
+    Feature record: CXX_FEATURE:1cxx_attributes
+    Feature record: CXX_FEATURE:1cxx_attribute_deprecated
+    Feature record: CXX_FEATURE:1cxx_auto_type
+    Feature record: CXX_FEATURE:1cxx_binary_literals
+    Feature record: CXX_FEATURE:1cxx_constexpr
+    Feature record: CXX_FEATURE:1cxx_contextual_conversions
+    Feature record: CXX_FEATURE:1cxx_decltype
+    Feature record: CXX_FEATURE:1cxx_decltype_auto
+    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types
+    Feature record: CXX_FEATURE:1cxx_default_function_template_args
+    Feature record: CXX_FEATURE:1cxx_defaulted_functions
+    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers
+    Feature record: CXX_FEATURE:1cxx_delegating_constructors
+    Feature record: CXX_FEATURE:1cxx_deleted_functions
+    Feature record: CXX_FEATURE:1cxx_digit_separators
+    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations
+    Feature record: CXX_FEATURE:1cxx_explicit_conversions
+    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations
+    Feature record: CXX_FEATURE:1cxx_extern_templates
+    Feature record: CXX_FEATURE:1cxx_final
+    Feature record: CXX_FEATURE:1cxx_func_identifier
+    Feature record: CXX_FEATURE:1cxx_generalized_initializers
+    Feature record: CXX_FEATURE:1cxx_generic_lambdas
+    Feature record: CXX_FEATURE:1cxx_inheriting_constructors
+    Feature record: CXX_FEATURE:1cxx_inline_namespaces
+    Feature record: CXX_FEATURE:1cxx_lambdas
+    Feature record: CXX_FEATURE:1cxx_lambda_init_captures
+    Feature record: CXX_FEATURE:1cxx_local_type_template_args
+    Feature record: CXX_FEATURE:1cxx_long_long_type
+    Feature record: CXX_FEATURE:1cxx_noexcept
+    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init
+    Feature record: CXX_FEATURE:1cxx_nullptr
+    Feature record: CXX_FEATURE:1cxx_override
+    Feature record: CXX_FEATURE:1cxx_range_for
+    Feature record: CXX_FEATURE:1cxx_raw_string_literals
+    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions
+    Feature record: CXX_FEATURE:1cxx_relaxed_constexpr
+    Feature record: CXX_FEATURE:1cxx_return_type_deduction
+    Feature record: CXX_FEATURE:1cxx_right_angle_brackets
+    Feature record: CXX_FEATURE:1cxx_rvalue_references
+    Feature record: CXX_FEATURE:1cxx_sizeof_member
+    Feature record: CXX_FEATURE:1cxx_static_assert
+    Feature record: CXX_FEATURE:1cxx_strong_enums
+    Feature record: CXX_FEATURE:1cxx_template_template_parameters
+    Feature record: CXX_FEATURE:1cxx_thread_local
+    Feature record: CXX_FEATURE:1cxx_trailing_return_types
+    Feature record: CXX_FEATURE:1cxx_unicode_literals
+    Feature record: CXX_FEATURE:1cxx_uniform_initialization
+    Feature record: CXX_FEATURE:1cxx_unrestricted_unions
+    Feature record: CXX_FEATURE:1cxx_user_literals
+    Feature record: CXX_FEATURE:1cxx_variable_templates
+    Feature record: CXX_FEATURE:1cxx_variadic_macros
+    Feature record: CXX_FEATURE:1cxx_variadic_templates
+
+
+Detecting CXX [-std=c++14] compiler features compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_26a64/fast"
+/usr/bin/make -f CMakeFiles/cmTC_26a64.dir/build.make CMakeFiles/cmTC_26a64.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_26a64.dir/feature_tests.cxx.o
+/usr/bin/c++    -std=c++14 -o CMakeFiles/cmTC_26a64.dir/feature_tests.cxx.o -c /home/shichen/ssd/opensource/logdb/CMakeFiles/feature_tests.cxx
+Linking CXX executable cmTC_26a64
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_26a64.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_26a64.dir/feature_tests.cxx.o  -o cmTC_26a64 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+
+
+    Feature record: CXX_FEATURE:1cxx_aggregate_default_initializers
+    Feature record: CXX_FEATURE:1cxx_alias_templates
+    Feature record: CXX_FEATURE:1cxx_alignas
+    Feature record: CXX_FEATURE:1cxx_alignof
+    Feature record: CXX_FEATURE:1cxx_attributes
+    Feature record: CXX_FEATURE:1cxx_attribute_deprecated
+    Feature record: CXX_FEATURE:1cxx_auto_type
+    Feature record: CXX_FEATURE:1cxx_binary_literals
+    Feature record: CXX_FEATURE:1cxx_constexpr
+    Feature record: CXX_FEATURE:1cxx_contextual_conversions
+    Feature record: CXX_FEATURE:1cxx_decltype
+    Feature record: CXX_FEATURE:1cxx_decltype_auto
+    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types
+    Feature record: CXX_FEATURE:1cxx_default_function_template_args
+    Feature record: CXX_FEATURE:1cxx_defaulted_functions
+    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers
+    Feature record: CXX_FEATURE:1cxx_delegating_constructors
+    Feature record: CXX_FEATURE:1cxx_deleted_functions
+    Feature record: CXX_FEATURE:1cxx_digit_separators
+    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations
+    Feature record: CXX_FEATURE:1cxx_explicit_conversions
+    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations
+    Feature record: CXX_FEATURE:1cxx_extern_templates
+    Feature record: CXX_FEATURE:1cxx_final
+    Feature record: CXX_FEATURE:1cxx_func_identifier
+    Feature record: CXX_FEATURE:1cxx_generalized_initializers
+    Feature record: CXX_FEATURE:1cxx_generic_lambdas
+    Feature record: CXX_FEATURE:1cxx_inheriting_constructors
+    Feature record: CXX_FEATURE:1cxx_inline_namespaces
+    Feature record: CXX_FEATURE:1cxx_lambdas
+    Feature record: CXX_FEATURE:1cxx_lambda_init_captures
+    Feature record: CXX_FEATURE:1cxx_local_type_template_args
+    Feature record: CXX_FEATURE:1cxx_long_long_type
+    Feature record: CXX_FEATURE:1cxx_noexcept
+    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init
+    Feature record: CXX_FEATURE:1cxx_nullptr
+    Feature record: CXX_FEATURE:1cxx_override
+    Feature record: CXX_FEATURE:1cxx_range_for
+    Feature record: CXX_FEATURE:1cxx_raw_string_literals
+    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions
+    Feature record: CXX_FEATURE:1cxx_relaxed_constexpr
+    Feature record: CXX_FEATURE:1cxx_return_type_deduction
+    Feature record: CXX_FEATURE:1cxx_right_angle_brackets
+    Feature record: CXX_FEATURE:1cxx_rvalue_references
+    Feature record: CXX_FEATURE:1cxx_sizeof_member
+    Feature record: CXX_FEATURE:1cxx_static_assert
+    Feature record: CXX_FEATURE:1cxx_strong_enums
+    Feature record: CXX_FEATURE:1cxx_template_template_parameters
+    Feature record: CXX_FEATURE:1cxx_thread_local
+    Feature record: CXX_FEATURE:1cxx_trailing_return_types
+    Feature record: CXX_FEATURE:1cxx_unicode_literals
+    Feature record: CXX_FEATURE:1cxx_uniform_initialization
+    Feature record: CXX_FEATURE:1cxx_unrestricted_unions
+    Feature record: CXX_FEATURE:1cxx_user_literals
+    Feature record: CXX_FEATURE:1cxx_variable_templates
+    Feature record: CXX_FEATURE:1cxx_variadic_macros
+    Feature record: CXX_FEATURE:1cxx_variadic_templates
+
+
+Detecting CXX [-std=c++11] compiler features compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_eab19/fast"
+/usr/bin/make -f CMakeFiles/cmTC_eab19.dir/build.make CMakeFiles/cmTC_eab19.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_eab19.dir/feature_tests.cxx.o
+/usr/bin/c++    -std=c++11 -o CMakeFiles/cmTC_eab19.dir/feature_tests.cxx.o -c /home/shichen/ssd/opensource/logdb/CMakeFiles/feature_tests.cxx
+Linking CXX executable cmTC_eab19
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_eab19.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_eab19.dir/feature_tests.cxx.o  -o cmTC_eab19 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+
+
+    Feature record: CXX_FEATURE:0cxx_aggregate_default_initializers
+    Feature record: CXX_FEATURE:1cxx_alias_templates
+    Feature record: CXX_FEATURE:1cxx_alignas
+    Feature record: CXX_FEATURE:1cxx_alignof
+    Feature record: CXX_FEATURE:1cxx_attributes
+    Feature record: CXX_FEATURE:0cxx_attribute_deprecated
+    Feature record: CXX_FEATURE:1cxx_auto_type
+    Feature record: CXX_FEATURE:0cxx_binary_literals
+    Feature record: CXX_FEATURE:1cxx_constexpr
+    Feature record: CXX_FEATURE:0cxx_contextual_conversions
+    Feature record: CXX_FEATURE:1cxx_decltype
+    Feature record: CXX_FEATURE:0cxx_decltype_auto
+    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types
+    Feature record: CXX_FEATURE:1cxx_default_function_template_args
+    Feature record: CXX_FEATURE:1cxx_defaulted_functions
+    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers
+    Feature record: CXX_FEATURE:1cxx_delegating_constructors
+    Feature record: CXX_FEATURE:1cxx_deleted_functions
+    Feature record: CXX_FEATURE:0cxx_digit_separators
+    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations
+    Feature record: CXX_FEATURE:1cxx_explicit_conversions
+    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations
+    Feature record: CXX_FEATURE:1cxx_extern_templates
+    Feature record: CXX_FEATURE:1cxx_final
+    Feature record: CXX_FEATURE:1cxx_func_identifier
+    Feature record: CXX_FEATURE:1cxx_generalized_initializers
+    Feature record: CXX_FEATURE:0cxx_generic_lambdas
+    Feature record: CXX_FEATURE:1cxx_inheriting_constructors
+    Feature record: CXX_FEATURE:1cxx_inline_namespaces
+    Feature record: CXX_FEATURE:1cxx_lambdas
+    Feature record: CXX_FEATURE:0cxx_lambda_init_captures
+    Feature record: CXX_FEATURE:1cxx_local_type_template_args
+    Feature record: CXX_FEATURE:1cxx_long_long_type
+    Feature record: CXX_FEATURE:1cxx_noexcept
+    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init
+    Feature record: CXX_FEATURE:1cxx_nullptr
+    Feature record: CXX_FEATURE:1cxx_override
+    Feature record: CXX_FEATURE:1cxx_range_for
+    Feature record: CXX_FEATURE:1cxx_raw_string_literals
+    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions
+    Feature record: CXX_FEATURE:0cxx_relaxed_constexpr
+    Feature record: CXX_FEATURE:0cxx_return_type_deduction
+    Feature record: CXX_FEATURE:1cxx_right_angle_brackets
+    Feature record: CXX_FEATURE:1cxx_rvalue_references
+    Feature record: CXX_FEATURE:1cxx_sizeof_member
+    Feature record: CXX_FEATURE:1cxx_static_assert
+    Feature record: CXX_FEATURE:1cxx_strong_enums
+    Feature record: CXX_FEATURE:1cxx_template_template_parameters
+    Feature record: CXX_FEATURE:1cxx_thread_local
+    Feature record: CXX_FEATURE:1cxx_trailing_return_types
+    Feature record: CXX_FEATURE:1cxx_unicode_literals
+    Feature record: CXX_FEATURE:1cxx_uniform_initialization
+    Feature record: CXX_FEATURE:1cxx_unrestricted_unions
+    Feature record: CXX_FEATURE:1cxx_user_literals
+    Feature record: CXX_FEATURE:0cxx_variable_templates
+    Feature record: CXX_FEATURE:1cxx_variadic_macros
+    Feature record: CXX_FEATURE:1cxx_variadic_templates
+
+
+Detecting CXX [-std=c++98] compiler features compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_3fd67/fast"
+/usr/bin/make -f CMakeFiles/cmTC_3fd67.dir/build.make CMakeFiles/cmTC_3fd67.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_3fd67.dir/feature_tests.cxx.o
+/usr/bin/c++    -std=c++98 -o CMakeFiles/cmTC_3fd67.dir/feature_tests.cxx.o -c /home/shichen/ssd/opensource/logdb/CMakeFiles/feature_tests.cxx
+Linking CXX executable cmTC_3fd67
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3fd67.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_3fd67.dir/feature_tests.cxx.o  -o cmTC_3fd67 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/CMakeFiles/CMakeTmp'
+
+
+    Feature record: CXX_FEATURE:0cxx_aggregate_default_initializers
+    Feature record: CXX_FEATURE:0cxx_alias_templates
+    Feature record: CXX_FEATURE:0cxx_alignas
+    Feature record: CXX_FEATURE:0cxx_alignof
+    Feature record: CXX_FEATURE:0cxx_attributes
+    Feature record: CXX_FEATURE:0cxx_attribute_deprecated
+    Feature record: CXX_FEATURE:0cxx_auto_type
+    Feature record: CXX_FEATURE:0cxx_binary_literals
+    Feature record: CXX_FEATURE:0cxx_constexpr
+    Feature record: CXX_FEATURE:0cxx_contextual_conversions
+    Feature record: CXX_FEATURE:0cxx_decltype
+    Feature record: CXX_FEATURE:0cxx_decltype_auto
+    Feature record: CXX_FEATURE:0cxx_decltype_incomplete_return_types
+    Feature record: CXX_FEATURE:0cxx_default_function_template_args
+    Feature record: CXX_FEATURE:0cxx_defaulted_functions
+    Feature record: CXX_FEATURE:0cxx_defaulted_move_initializers
+    Feature record: CXX_FEATURE:0cxx_delegating_constructors
+    Feature record: CXX_FEATURE:0cxx_deleted_functions
+    Feature record: CXX_FEATURE:0cxx_digit_separators
+    Feature record: CXX_FEATURE:0cxx_enum_forward_declarations
+    Feature record: CXX_FEATURE:0cxx_explicit_conversions
+    Feature record: CXX_FEATURE:0cxx_extended_friend_declarations
+    Feature record: CXX_FEATURE:0cxx_extern_templates
+    Feature record: CXX_FEATURE:0cxx_final
+    Feature record: CXX_FEATURE:0cxx_func_identifier
+    Feature record: CXX_FEATURE:0cxx_generalized_initializers
+    Feature record: CXX_FEATURE:0cxx_generic_lambdas
+    Feature record: CXX_FEATURE:0cxx_inheriting_constructors
+    Feature record: CXX_FEATURE:0cxx_inline_namespaces
+    Feature record: CXX_FEATURE:0cxx_lambdas
+    Feature record: CXX_FEATURE:0cxx_lambda_init_captures
+    Feature record: CXX_FEATURE:0cxx_local_type_template_args
+    Feature record: CXX_FEATURE:0cxx_long_long_type
+    Feature record: CXX_FEATURE:0cxx_noexcept
+    Feature record: CXX_FEATURE:0cxx_nonstatic_member_init
+    Feature record: CXX_FEATURE:0cxx_nullptr
+    Feature record: CXX_FEATURE:0cxx_override
+    Feature record: CXX_FEATURE:0cxx_range_for
+    Feature record: CXX_FEATURE:0cxx_raw_string_literals
+    Feature record: CXX_FEATURE:0cxx_reference_qualified_functions
+    Feature record: CXX_FEATURE:0cxx_relaxed_constexpr
+    Feature record: CXX_FEATURE:0cxx_return_type_deduction
+    Feature record: CXX_FEATURE:0cxx_right_angle_brackets
+    Feature record: CXX_FEATURE:0cxx_rvalue_references
+    Feature record: CXX_FEATURE:0cxx_sizeof_member
+    Feature record: CXX_FEATURE:0cxx_static_assert
+    Feature record: CXX_FEATURE:0cxx_strong_enums
+    Feature record: CXX_FEATURE:1cxx_template_template_parameters
+    Feature record: CXX_FEATURE:0cxx_thread_local
+    Feature record: CXX_FEATURE:0cxx_trailing_return_types
+    Feature record: CXX_FEATURE:0cxx_unicode_literals
+    Feature record: CXX_FEATURE:0cxx_uniform_initialization
+    Feature record: CXX_FEATURE:0cxx_unrestricted_unions
+    Feature record: CXX_FEATURE:0cxx_user_literals
+    Feature record: CXX_FEATURE:0cxx_variable_templates
+    Feature record: CXX_FEATURE:0cxx_variadic_macros
+    Feature record: CXX_FEATURE:0cxx_variadic_templates
diff --git a/CMakeFiles/Makefile.cmake b/CMakeFiles/Makefile.cmake
new file mode 100644
index 0000000..721241d
--- /dev/null
+++ b/CMakeFiles/Makefile.cmake
@@ -0,0 +1,98 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# The generator used is:
+set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")
+
+# The top level Makefile was generated from the following files:
+set(CMAKE_MAKEFILE_DEPENDS
+  "CMakeCache.txt"
+  "CMakeFiles/3.10.2/CMakeCXXCompiler.cmake"
+  "CMakeFiles/3.10.2/CMakeSystem.cmake"
+  "CMakeFiles/feature_tests.cxx"
+  "CMakeLists.txt"
+  "src/CMakeLists.txt"
+  "/usr/share/cmake-3.10/Modules/CMakeCXXCompiler.cmake.in"
+  "/usr/share/cmake-3.10/Modules/CMakeCXXCompilerABI.cpp"
+  "/usr/share/cmake-3.10/Modules/CMakeCXXInformation.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeCommonLanguageInclude.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeCompilerIdDetection.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeDetermineCXXCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeDetermineCompileFeatures.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeDetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeDetermineCompilerABI.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeDetermineCompilerId.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeDetermineSystem.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeFindBinUtils.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeGenericSystem.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeLanguageInformation.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeParseImplicitLinkInfo.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeSystem.cmake.in"
+  "/usr/share/cmake-3.10/Modules/CMakeSystemSpecificInformation.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeSystemSpecificInitialize.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeTestCXXCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeTestCompilerCommon.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeUnixFindMake.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/ADSP-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Borland-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Clang-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Cray-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/GHS-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/GNU-CXX-FeatureTests.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/GNU-CXX.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/GNU-FindBinUtils.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/GNU.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/HP-CXX-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/IAR-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Intel-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/MIPSpro-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/MSVC-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/PGI-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/PathScale-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/SCO-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/TI-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/Watcom-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/XL-CXX-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake"
+  "/usr/share/cmake-3.10/Modules/Internal/FeatureTesting.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/Linux-Determine-CXX.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/Linux-GNU-CXX.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/Linux-GNU.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/Linux.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/UnixPaths.cmake"
+  )
+
+# The corresponding makefile is:
+set(CMAKE_MAKEFILE_OUTPUTS
+  "Makefile"
+  "CMakeFiles/cmake.check_cache"
+  )
+
+# Byproducts of CMake generate step:
+set(CMAKE_MAKEFILE_PRODUCTS
+  "CMakeFiles/3.10.2/CMakeSystem.cmake"
+  "CMakeFiles/3.10.2/CMakeCXXCompiler.cmake"
+  "CMakeFiles/3.10.2/CMakeCXXCompiler.cmake"
+  "CMakeFiles/CMakeDirectoryInformation.cmake"
+  "src/CMakeFiles/CMakeDirectoryInformation.cmake"
+  )
+
+# Dependency information for all targets:
+set(CMAKE_DEPEND_INFO_FILES
+  "CMakeFiles/logdbtest.dir/DependInfo.cmake"
+  "src/CMakeFiles/logdb.dir/DependInfo.cmake"
+  )
diff --git a/CMakeFiles/Makefile2 b/CMakeFiles/Makefile2
new file mode 100644
index 0000000..7456ec9
--- /dev/null
+++ b/CMakeFiles/Makefile2
@@ -0,0 +1,163 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# Default target executed when no arguments are given to make.
+default_target: all
+
+.PHONY : default_target
+
+# The main recursive all target
+all:
+
+.PHONY : all
+
+# The main recursive preinstall target
+preinstall:
+
+.PHONY : preinstall
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb
+
+#=============================================================================
+# Target rules for target CMakeFiles/logdbtest.dir
+
+# All Build rule for target.
+CMakeFiles/logdbtest.dir/all: src/CMakeFiles/logdb.dir/all
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/depend
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/build
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir=/home/shichen/ssd/opensource/logdb/CMakeFiles --progress-num=5,6 "Built target logdbtest"
+.PHONY : CMakeFiles/logdbtest.dir/all
+
+# Include target in all.
+all: CMakeFiles/logdbtest.dir/all
+
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/logdbtest.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/CMakeFiles 6
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/logdbtest.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/CMakeFiles 0
+.PHONY : CMakeFiles/logdbtest.dir/rule
+
+# Convenience name for target.
+logdbtest: CMakeFiles/logdbtest.dir/rule
+
+.PHONY : logdbtest
+
+# clean rule for target.
+CMakeFiles/logdbtest.dir/clean:
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/clean
+.PHONY : CMakeFiles/logdbtest.dir/clean
+
+# clean rule for target.
+clean: CMakeFiles/logdbtest.dir/clean
+
+.PHONY : clean
+
+#=============================================================================
+# Directory level rules for directory src
+
+# Convenience name for "all" pass in the directory.
+src/all: src/CMakeFiles/logdb.dir/all
+
+.PHONY : src/all
+
+# Convenience name for "clean" pass in the directory.
+src/clean: src/CMakeFiles/logdb.dir/clean
+
+.PHONY : src/clean
+
+# Convenience name for "preinstall" pass in the directory.
+src/preinstall:
+
+.PHONY : src/preinstall
+
+#=============================================================================
+# Target rules for target src/CMakeFiles/logdb.dir
+
+# All Build rule for target.
+src/CMakeFiles/logdb.dir/all:
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/depend
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/build
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir=/home/shichen/ssd/opensource/logdb/CMakeFiles --progress-num=1,2,3,4 "Built target logdb"
+.PHONY : src/CMakeFiles/logdb.dir/all
+
+# Include target in all.
+all: src/CMakeFiles/logdb.dir/all
+
+.PHONY : all
+
+# Build rule for subdir invocation for target.
+src/CMakeFiles/logdb.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/CMakeFiles 4
+	$(MAKE) -f CMakeFiles/Makefile2 src/CMakeFiles/logdb.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/CMakeFiles 0
+.PHONY : src/CMakeFiles/logdb.dir/rule
+
+# Convenience name for target.
+logdb: src/CMakeFiles/logdb.dir/rule
+
+.PHONY : logdb
+
+# clean rule for target.
+src/CMakeFiles/logdb.dir/clean:
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/clean
+.PHONY : src/CMakeFiles/logdb.dir/clean
+
+# clean rule for target.
+clean: src/CMakeFiles/logdb.dir/clean
+
+.PHONY : clean
+
+#=============================================================================
+# Special targets to cleanup operation of make.
+
+# Special rule to run CMake to check the build system integrity.
+# No rule that depends on this can have commands that come from listfiles
+# because they might be regenerated.
+cmake_check_build_system:
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
+.PHONY : cmake_check_build_system
+
diff --git a/CMakeFiles/Progress/1 b/CMakeFiles/Progress/1
new file mode 100644
index 0000000..7b4d68d
--- /dev/null
+++ b/CMakeFiles/Progress/1
@@ -0,0 +1 @@
+empty
\ No newline at end of file
diff --git a/CMakeFiles/Progress/2 b/CMakeFiles/Progress/2
new file mode 100644
index 0000000..7b4d68d
--- /dev/null
+++ b/CMakeFiles/Progress/2
@@ -0,0 +1 @@
+empty
\ No newline at end of file
diff --git a/CMakeFiles/Progress/count.txt b/CMakeFiles/Progress/count.txt
new file mode 100644
index 0000000..1e8b314
--- /dev/null
+++ b/CMakeFiles/Progress/count.txt
@@ -0,0 +1 @@
+6
diff --git a/CMakeFiles/TargetDirectories.txt b/CMakeFiles/TargetDirectories.txt
new file mode 100644
index 0000000..4ee5adb
--- /dev/null
+++ b/CMakeFiles/TargetDirectories.txt
@@ -0,0 +1,6 @@
+/home/shichen/ssd/opensource/logdb/CMakeFiles/rebuild_cache.dir
+/home/shichen/ssd/opensource/logdb/CMakeFiles/logdbtest.dir
+/home/shichen/ssd/opensource/logdb/CMakeFiles/edit_cache.dir
+/home/shichen/ssd/opensource/logdb/src/CMakeFiles/rebuild_cache.dir
+/home/shichen/ssd/opensource/logdb/src/CMakeFiles/logdb.dir
+/home/shichen/ssd/opensource/logdb/src/CMakeFiles/edit_cache.dir
diff --git a/CMakeFiles/cmake.check_cache b/CMakeFiles/cmake.check_cache
new file mode 100644
index 0000000..3dccd73
--- /dev/null
+++ b/CMakeFiles/cmake.check_cache
@@ -0,0 +1 @@
+# This file is generated by cmake for dependency checking of the CMakeCache.txt file
diff --git a/CMakeFiles/feature_tests.bin b/CMakeFiles/feature_tests.bin
new file mode 100755
index 0000000000000000000000000000000000000000..18b0c801d40b59a2ff9a6657a25dee54acb34deb
GIT binary patch
literal 12312
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
Km{Gxc`TqiBL+q3Q

literal 0
HcmV?d00001

diff --git a/CMakeFiles/feature_tests.cxx b/CMakeFiles/feature_tests.cxx
new file mode 100644
index 0000000..b93418c
--- /dev/null
+++ b/CMakeFiles/feature_tests.cxx
@@ -0,0 +1,405 @@
+
+  const char features[] = {"\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 500 && __cplusplus >= 201402L
+"1"
+#else
+"0"
+#endif
+"cxx_aggregate_default_initializers\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_alias_templates\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_alignas\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_alignof\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_attributes\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_attribute_deprecated\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_auto_type\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_binary_literals\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_constexpr\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_contextual_conversions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_decltype\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_decltype_auto\n"
+"CXX_FEATURE:"
+#if ((__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) >= 40801) && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_decltype_incomplete_return_types\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_default_function_template_args\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_defaulted_functions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_defaulted_move_initializers\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_delegating_constructors\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_deleted_functions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_digit_separators\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_enum_forward_declarations\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_explicit_conversions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_extended_friend_declarations\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_extern_templates\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_final\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_func_identifier\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_generalized_initializers\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_generic_lambdas\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_inheriting_constructors\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_inline_namespaces\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_lambdas\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_lambda_init_captures\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_local_type_template_args\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_long_long_type\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_noexcept\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_nonstatic_member_init\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_nullptr\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_override\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_range_for\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_raw_string_literals\n"
+"CXX_FEATURE:"
+#if ((__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) >= 40801) && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_reference_qualified_functions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 500 && __cplusplus >= 201402L
+"1"
+#else
+"0"
+#endif
+"cxx_relaxed_constexpr\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_return_type_deduction\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_right_angle_brackets\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_rvalue_references\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_sizeof_member\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_static_assert\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_strong_enums\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && __cplusplus
+"1"
+#else
+"0"
+#endif
+"cxx_template_template_parameters\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_thread_local\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_trailing_return_types\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_unicode_literals\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_uniform_initialization\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_unrestricted_unions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_user_literals\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 500 && __cplusplus >= 201402L
+"1"
+#else
+"0"
+#endif
+"cxx_variable_templates\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_variadic_macros\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_variadic_templates\n"
+
+};
+
+int main(int argc, char** argv) { (void)argv; return features[argc]; }
diff --git a/CMakeFiles/logdbtest.dir/DependInfo.cmake b/CMakeFiles/logdbtest.dir/DependInfo.cmake
new file mode 100644
index 0000000..4edc60f
--- /dev/null
+++ b/CMakeFiles/logdbtest.dir/DependInfo.cmake
@@ -0,0 +1,23 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "/home/shichen/ssd/opensource/logdb/testlogdb.cpp" "/home/shichen/ssd/opensource/logdb/CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# The include file search paths:
+set(CMAKE_CXX_TARGET_INCLUDE_PATH
+  "include"
+  "src"
+  )
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  "/home/shichen/ssd/opensource/logdb/src/CMakeFiles/logdb.dir/DependInfo.cmake"
+  )
+
+# Fortran module output directory.
+set(CMAKE_Fortran_TARGET_MODULE_DIR "")
diff --git a/CMakeFiles/logdbtest.dir/build.make b/CMakeFiles/logdbtest.dir/build.make
new file mode 100644
index 0000000..3fd16da
--- /dev/null
+++ b/CMakeFiles/logdbtest.dir/build.make
@@ -0,0 +1,114 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# Delete rule output on recipe failure.
+.DELETE_ON_ERROR:
+
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb
+
+# Include any dependencies generated for this target.
+include CMakeFiles/logdbtest.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/logdbtest.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/logdbtest.dir/flags.make
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o: CMakeFiles/logdbtest.dir/flags.make
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o: testlogdb.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/ssd/opensource/logdb/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdbtest.dir/testlogdb.cpp.o -c /home/shichen/ssd/opensource/logdb/testlogdb.cpp
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/logdbtest.dir/testlogdb.cpp.i"
+	/usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/ssd/opensource/logdb/testlogdb.cpp > CMakeFiles/logdbtest.dir/testlogdb.cpp.i
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/logdbtest.dir/testlogdb.cpp.s"
+	/usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/ssd/opensource/logdb/testlogdb.cpp -o CMakeFiles/logdbtest.dir/testlogdb.cpp.s
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o.requires:
+
+.PHONY : CMakeFiles/logdbtest.dir/testlogdb.cpp.o.requires
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o.provides: CMakeFiles/logdbtest.dir/testlogdb.cpp.o.requires
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/testlogdb.cpp.o.provides.build
+.PHONY : CMakeFiles/logdbtest.dir/testlogdb.cpp.o.provides
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o.provides.build: CMakeFiles/logdbtest.dir/testlogdb.cpp.o
+
+
+# Object files for target logdbtest
+logdbtest_OBJECTS = \
+"CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
+
+# External object files for target logdbtest
+logdbtest_EXTERNAL_OBJECTS =
+
+logdbtest: CMakeFiles/logdbtest.dir/testlogdb.cpp.o
+logdbtest: CMakeFiles/logdbtest.dir/build.make
+logdbtest: src/liblogdb.so
+logdbtest: CMakeFiles/logdbtest.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/shichen/ssd/opensource/logdb/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) "Linking CXX executable logdbtest"
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/logdbtest.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/logdbtest.dir/build: logdbtest
+
+.PHONY : CMakeFiles/logdbtest.dir/build
+
+CMakeFiles/logdbtest.dir/requires: CMakeFiles/logdbtest.dir/testlogdb.cpp.o.requires
+
+.PHONY : CMakeFiles/logdbtest.dir/requires
+
+CMakeFiles/logdbtest.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles/logdbtest.dir/cmake_clean.cmake
+.PHONY : CMakeFiles/logdbtest.dir/clean
+
+CMakeFiles/logdbtest.dir/depend:
+	cd /home/shichen/ssd/opensource/logdb && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb/CMakeFiles/logdbtest.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : CMakeFiles/logdbtest.dir/depend
+
diff --git a/CMakeFiles/logdbtest.dir/cmake_clean.cmake b/CMakeFiles/logdbtest.dir/cmake_clean.cmake
new file mode 100644
index 0000000..c4d095a
--- /dev/null
+++ b/CMakeFiles/logdbtest.dir/cmake_clean.cmake
@@ -0,0 +1,10 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
+  "logdbtest.pdb"
+  "logdbtest"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/logdbtest.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
diff --git a/CMakeFiles/logdbtest.dir/depend.make b/CMakeFiles/logdbtest.dir/depend.make
new file mode 100644
index 0000000..e5891cf
--- /dev/null
+++ b/CMakeFiles/logdbtest.dir/depend.make
@@ -0,0 +1,2 @@
+# Empty dependencies file for logdbtest.
+# This may be replaced when dependencies are built.
diff --git a/CMakeFiles/logdbtest.dir/flags.make b/CMakeFiles/logdbtest.dir/flags.make
new file mode 100644
index 0000000..2f1b505
--- /dev/null
+++ b/CMakeFiles/logdbtest.dir/flags.make
@@ -0,0 +1,10 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# compile CXX with /usr/bin/c++
+CXX_FLAGS =  
+
+CXX_DEFINES = 
+
+CXX_INCLUDES = -I/home/shichen/ssd/opensource/logdb/include -I/home/shichen/ssd/opensource/logdb/src 
+
diff --git a/CMakeFiles/logdbtest.dir/link.txt b/CMakeFiles/logdbtest.dir/link.txt
new file mode 100644
index 0000000..643833e
--- /dev/null
+++ b/CMakeFiles/logdbtest.dir/link.txt
@@ -0,0 +1 @@
+/usr/bin/c++     CMakeFiles/logdbtest.dir/testlogdb.cpp.o  -o logdbtest -Wl,-rpath,/home/shichen/ssd/opensource/logdb/src src/liblogdb.so 
diff --git a/CMakeFiles/logdbtest.dir/progress.make b/CMakeFiles/logdbtest.dir/progress.make
new file mode 100644
index 0000000..3a86673
--- /dev/null
+++ b/CMakeFiles/logdbtest.dir/progress.make
@@ -0,0 +1,3 @@
+CMAKE_PROGRESS_1 = 5
+CMAKE_PROGRESS_2 = 6
+
diff --git a/CMakeFiles/progress.marks b/CMakeFiles/progress.marks
new file mode 100644
index 0000000..1e8b314
--- /dev/null
+++ b/CMakeFiles/progress.marks
@@ -0,0 +1 @@
+6
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7c068dc..2bd1942 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required (VERSION 3.16)
+cmake_minimum_required (VERSION 3.10.2)
 project(logdb
   VERSION 0.1
   DESCRIPTION "C++ implementation of logging system"
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..a539960
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,192 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# Default target executed when no arguments are given to make.
+default_target: all
+
+.PHONY : default_target
+
+# Allow only one "make -f Makefile2" at a time, but pass parallelism.
+.NOTPARALLEL:
+
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb
+
+#=============================================================================
+# Targets provided globally by CMake.
+
+# Special rule for the target rebuild_cache
+rebuild_cache:
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
+	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
+.PHONY : rebuild_cache
+
+# Special rule for the target rebuild_cache
+rebuild_cache/fast: rebuild_cache
+
+.PHONY : rebuild_cache/fast
+
+# Special rule for the target edit_cache
+edit_cache:
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
+	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
+.PHONY : edit_cache
+
+# Special rule for the target edit_cache
+edit_cache/fast: edit_cache
+
+.PHONY : edit_cache/fast
+
+# The main all target
+all: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/CMakeFiles /home/shichen/ssd/opensource/logdb/CMakeFiles/progress.marks
+	$(MAKE) -f CMakeFiles/Makefile2 all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/CMakeFiles 0
+.PHONY : all
+
+# The main clean target
+clean:
+	$(MAKE) -f CMakeFiles/Makefile2 clean
+.PHONY : clean
+
+# The main clean target
+clean/fast: clean
+
+.PHONY : clean/fast
+
+# Prepare targets for installation.
+preinstall: all
+	$(MAKE) -f CMakeFiles/Makefile2 preinstall
+.PHONY : preinstall
+
+# Prepare targets for installation.
+preinstall/fast:
+	$(MAKE) -f CMakeFiles/Makefile2 preinstall
+.PHONY : preinstall/fast
+
+# clear depends
+depend:
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
+.PHONY : depend
+
+#=============================================================================
+# Target rules for targets named logdbtest
+
+# Build rule for target.
+logdbtest: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 logdbtest
+.PHONY : logdbtest
+
+# fast build rule for target.
+logdbtest/fast:
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/build
+.PHONY : logdbtest/fast
+
+#=============================================================================
+# Target rules for targets named logdb
+
+# Build rule for target.
+logdb: cmake_check_build_system
+	$(MAKE) -f CMakeFiles/Makefile2 logdb
+.PHONY : logdb
+
+# fast build rule for target.
+logdb/fast:
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/build
+.PHONY : logdb/fast
+
+testlogdb.o: testlogdb.cpp.o
+
+.PHONY : testlogdb.o
+
+# target to build an object file
+testlogdb.cpp.o:
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/testlogdb.cpp.o
+.PHONY : testlogdb.cpp.o
+
+testlogdb.i: testlogdb.cpp.i
+
+.PHONY : testlogdb.i
+
+# target to preprocess a source file
+testlogdb.cpp.i:
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/testlogdb.cpp.i
+.PHONY : testlogdb.cpp.i
+
+testlogdb.s: testlogdb.cpp.s
+
+.PHONY : testlogdb.s
+
+# target to generate assembly for a file
+testlogdb.cpp.s:
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/testlogdb.cpp.s
+.PHONY : testlogdb.cpp.s
+
+# Help Target
+help:
+	@echo "The following are some of the valid targets for this Makefile:"
+	@echo "... all (the default if no target is provided)"
+	@echo "... clean"
+	@echo "... depend"
+	@echo "... rebuild_cache"
+	@echo "... logdbtest"
+	@echo "... edit_cache"
+	@echo "... logdb"
+	@echo "... testlogdb.o"
+	@echo "... testlogdb.i"
+	@echo "... testlogdb.s"
+.PHONY : help
+
+
+
+#=============================================================================
+# Special targets to cleanup operation of make.
+
+# Special rule to run CMake to check the build system integrity.
+# No rule that depends on this can have commands that come from listfiles
+# because they might be regenerated.
+cmake_check_build_system:
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
+.PHONY : cmake_check_build_system
+
diff --git a/build/CMakeCache.txt b/build/CMakeCache.txt
index 93f0dac..fc96687 100644
--- a/build/CMakeCache.txt
+++ b/build/CMakeCache.txt
@@ -1,5 +1,5 @@
 # This is the CMakeCache file.
-# For build in directory: /home/shichen/workspace/opensource/log/logdb/build
+# For build in directory: /home/shichen/ssd/opensource/logdb/build
 # It was generated by CMake: /usr/bin/cmake
 # You can edit this file to change values found and used by cmake.
 # If you do not want to change any of the values, simply exit the editor.
@@ -14,57 +14,55 @@
 # EXTERNAL cache entries
 ########################
 
-//Path to a program.
-CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line
-
 //Path to a program.
 CMAKE_AR:FILEPATH=/usr/bin/ar
 
 //No help, variable specified on the command line.
 CMAKE_BUILD_TYPE:STRING=Debug
 
+//Enable/Disable color output during build.
+CMAKE_COLOR_MAKEFILE:BOOL=ON
+
 //CXX compiler
 CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++
 
 //A wrapper around 'ar' adding the appropriate '--plugin' option
 // for the GCC compiler
-CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-9
+CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-7
 
 //A wrapper around 'ranlib' adding the appropriate '--plugin' option
 // for the GCC compiler
-CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-9
+CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-7
 
-//Flags used by the CXX compiler during all build types.
+//Flags used by the compiler during all build types.
 CMAKE_CXX_FLAGS:STRING=
 
-//Flags used by the CXX compiler during DEBUG builds.
+//Flags used by the compiler during debug builds.
 CMAKE_CXX_FLAGS_DEBUG:STRING=-g
 
-//Flags used by the CXX compiler during MINSIZEREL builds.
+//Flags used by the compiler during release builds for minimum
+// size.
 CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
 
-//Flags used by the CXX compiler during RELEASE builds.
+//Flags used by the compiler during release builds.
 CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
 
-//Flags used by the CXX compiler during RELWITHDEBINFO builds.
+//Flags used by the compiler during release builds with debug info.
 CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
 
-//Path to a program.
-CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND
-
-//Flags used by the linker during all build types.
+//Flags used by the linker.
 CMAKE_EXE_LINKER_FLAGS:STRING=
 
-//Flags used by the linker during DEBUG builds.
+//Flags used by the linker during debug builds.
 CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
 
-//Flags used by the linker during MINSIZEREL builds.
+//Flags used by the linker during release minsize builds.
 CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
 
-//Flags used by the linker during RELEASE builds.
+//Flags used by the linker during release builds.
 CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
 
-//Flags used by the linker during RELWITHDEBINFO builds.
+//Flags used by the linker during Release with Debug Info builds.
 CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
 
 //No help, variable specified on the command line.
@@ -76,27 +74,22 @@ CMAKE_INSTALL_PREFIX:PATH=/usr/local
 //Path to a program.
 CMAKE_LINKER:FILEPATH=/usr/bin/ld
 
-//Program used to build from build.ninja files.
-CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/ninja
+//Path to a program.
+CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make
 
-//Flags used by the linker during the creation of modules during
-// all build types.
+//Flags used by the linker during the creation of modules.
 CMAKE_MODULE_LINKER_FLAGS:STRING=
 
-//Flags used by the linker during the creation of modules during
-// DEBUG builds.
+//Flags used by the linker during debug builds.
 CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
 
-//Flags used by the linker during the creation of modules during
-// MINSIZEREL builds.
+//Flags used by the linker during release minsize builds.
 CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
 
-//Flags used by the linker during the creation of modules during
-// RELEASE builds.
+//Flags used by the linker during release builds.
 CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
 
-//Flags used by the linker during the creation of modules during
-// RELWITHDEBINFO builds.
+//Flags used by the linker during Release with Debug Info builds.
 CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
 
 //Path to a program.
@@ -111,51 +104,25 @@ CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump
 //Value Computed by CMake
 CMAKE_PROJECT_DESCRIPTION:STATIC=C++ implementation of logging system
 
-//Value Computed by CMake
-CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
-
 //Value Computed by CMake
 CMAKE_PROJECT_NAME:STATIC=logdb
 
-//Value Computed by CMake
-CMAKE_PROJECT_VERSION:STATIC=0.1
-
-//Value Computed by CMake
-CMAKE_PROJECT_VERSION_MAJOR:STATIC=0
-
-//Value Computed by CMake
-CMAKE_PROJECT_VERSION_MINOR:STATIC=1
-
-//Value Computed by CMake
-CMAKE_PROJECT_VERSION_PATCH:STATIC=
-
-//Value Computed by CMake
-CMAKE_PROJECT_VERSION_TWEAK:STATIC=
-
 //Path to a program.
 CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib
 
-//Path to a program.
-CMAKE_READELF:FILEPATH=/usr/bin/readelf
-
-//Flags used by the linker during the creation of shared libraries
-// during all build types.
+//Flags used by the linker during the creation of dll's.
 CMAKE_SHARED_LINKER_FLAGS:STRING=
 
-//Flags used by the linker during the creation of shared libraries
-// during DEBUG builds.
+//Flags used by the linker during debug builds.
 CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
 
-//Flags used by the linker during the creation of shared libraries
-// during MINSIZEREL builds.
+//Flags used by the linker during release minsize builds.
 CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
 
-//Flags used by the linker during the creation of shared libraries
-// during RELEASE builds.
+//Flags used by the linker during release builds.
 CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
 
-//Flags used by the linker during the creation of shared libraries
-// during RELWITHDEBINFO builds.
+//Flags used by the linker during Release with Debug Info builds.
 CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
 
 //If set, runtime paths are not added when installing shared libraries,
@@ -165,24 +132,19 @@ CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
 //If set, runtime paths are not added when using shared libraries.
 CMAKE_SKIP_RPATH:BOOL=NO
 
-//Flags used by the linker during the creation of static libraries
-// during all build types.
+//Flags used by the linker during the creation of static libraries.
 CMAKE_STATIC_LINKER_FLAGS:STRING=
 
-//Flags used by the linker during the creation of static libraries
-// during DEBUG builds.
+//Flags used by the linker during debug builds.
 CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
 
-//Flags used by the linker during the creation of static libraries
-// during MINSIZEREL builds.
+//Flags used by the linker during release minsize builds.
 CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
 
-//Flags used by the linker during the creation of static libraries
-// during RELEASE builds.
+//Flags used by the linker during release builds.
 CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
 
-//Flags used by the linker during the creation of static libraries
-// during RELWITHDEBINFO builds.
+//Flags used by the linker during Release with Debug Info builds.
 CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
 
 //Path to a program.
@@ -195,28 +157,31 @@ CMAKE_STRIP:FILEPATH=/usr/bin/strip
 CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
 
 //Value Computed by CMake
-logdb_BINARY_DIR:STATIC=/home/shichen/workspace/opensource/log/logdb/build
+logdb_BINARY_DIR:STATIC=/home/shichen/ssd/opensource/logdb/build
+
+//Dependencies for target
+logdb_LIB_DEPENDS:STATIC=
 
 //Value Computed by CMake
-logdb_SOURCE_DIR:STATIC=/home/shichen/workspace/opensource/log/logdb
+logdb_SOURCE_DIR:STATIC=/home/shichen/ssd/opensource/logdb
 
 
 ########################
 # INTERNAL cache entries
 ########################
 
-//ADVANCED property for variable: CMAKE_ADDR2LINE
-CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_AR
 CMAKE_AR-ADVANCED:INTERNAL=1
 //This is the directory where this CMakeCache.txt was created
-CMAKE_CACHEFILE_DIR:INTERNAL=/home/shichen/workspace/opensource/log/logdb/build
+CMAKE_CACHEFILE_DIR:INTERNAL=/home/shichen/ssd/opensource/logdb/build
 //Major version of cmake used to create the current loaded cache
 CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
 //Minor version of cmake used to create the current loaded cache
-CMAKE_CACHE_MINOR_VERSION:INTERNAL=16
+CMAKE_CACHE_MINOR_VERSION:INTERNAL=10
 //Patch version of cmake used to create the current loaded cache
-CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
+CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
+//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
+CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
 //Path to CMake executable.
 CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
 //Path to cpack program executable.
@@ -239,8 +204,6 @@ CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
 CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
 CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: CMAKE_DLLTOOL
-CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
 //Executable file format
 CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
 //ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
@@ -258,16 +221,14 @@ CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
 //Name of external makefile project generator.
 CMAKE_EXTRA_GENERATOR:INTERNAL=
 //Name of generator.
-CMAKE_GENERATOR:INTERNAL=Ninja
-//Generator instance identifier.
-CMAKE_GENERATOR_INSTANCE:INTERNAL=
+CMAKE_GENERATOR:INTERNAL=Unix Makefiles
 //Name of generator platform.
 CMAKE_GENERATOR_PLATFORM:INTERNAL=
 //Name of generator toolset.
 CMAKE_GENERATOR_TOOLSET:INTERNAL=
 //Source directory with the top level CMakeLists.txt file for this
 // project
-CMAKE_HOME_DIRECTORY:INTERNAL=/home/shichen/workspace/opensource/log/logdb
+CMAKE_HOME_DIRECTORY:INTERNAL=/home/shichen/ssd/opensource/logdb
 //Install .so files without execute permission.
 CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
 //ADVANCED property for variable: CMAKE_LINKER
@@ -296,10 +257,8 @@ CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
 CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_RANLIB
 CMAKE_RANLIB-ADVANCED:INTERNAL=1
-//ADVANCED property for variable: CMAKE_READELF
-CMAKE_READELF-ADVANCED:INTERNAL=1
 //Path to CMake installation.
-CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.16
+CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.10
 //ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
 CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
@@ -327,7 +286,7 @@ CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_STRIP
 CMAKE_STRIP-ADVANCED:INTERNAL=1
 //uname command
-CMAKE_UNAME:INTERNAL=/usr/bin/uname
+CMAKE_UNAME:INTERNAL=/bin/uname
 //ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
 CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
 
diff --git a/build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake b/build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake
new file mode 100644
index 0000000..85984d7
--- /dev/null
+++ b/build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake
@@ -0,0 +1,75 @@
+set(CMAKE_CXX_COMPILER "/usr/bin/c++")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "GNU")
+set(CMAKE_CXX_COMPILER_VERSION "7.5.0")
+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_CXX_COMPILER_WRAPPER "")
+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17")
+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
+
+set(CMAKE_CXX_PLATFORM_ID "Linux")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+
+
+set(CMAKE_AR "/usr/bin/ar")
+set(CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-7")
+set(CMAKE_RANLIB "/usr/bin/ranlib")
+set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-7")
+set(CMAKE_LINKER "/usr/bin/ld")
+set(CMAKE_COMPILER_IS_GNUCXX 1)
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+set(CMAKE_COMPILER_IS_MINGW )
+set(CMAKE_COMPILER_IS_CYGWIN )
+if(CMAKE_COMPILER_IS_CYGWIN)
+  set(CYGWIN 1)
+  set(UNIX 1)
+endif()
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+if(CMAKE_COMPILER_IS_MINGW)
+  set(MINGW 1)
+endif()
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;mm;CPP)
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
+set(CMAKE_CXX_COMPILER_ABI "ELF")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")
+endif()
+
+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/usr/lib/gcc/x86_64-linux-gnu/7;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
diff --git a/build/CMakeFiles/3.10.2/CMakeDetermineCompilerABI_CXX.bin b/build/CMakeFiles/3.10.2/CMakeDetermineCompilerABI_CXX.bin
new file mode 100755
index 0000000000000000000000000000000000000000..06f175697a725345131ebff7865782a6235439ef
GIT binary patch
literal 8264
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

literal 0
HcmV?d00001

diff --git a/build/CMakeFiles/3.10.2/CMakeSystem.cmake b/build/CMakeFiles/3.10.2/CMakeSystem.cmake
new file mode 100644
index 0000000..7962f62
--- /dev/null
+++ b/build/CMakeFiles/3.10.2/CMakeSystem.cmake
@@ -0,0 +1,15 @@
+set(CMAKE_HOST_SYSTEM "Linux-5.4.0-105-generic")
+set(CMAKE_HOST_SYSTEM_NAME "Linux")
+set(CMAKE_HOST_SYSTEM_VERSION "5.4.0-105-generic")
+set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")
+
+
+
+set(CMAKE_SYSTEM "Linux-5.4.0-105-generic")
+set(CMAKE_SYSTEM_NAME "Linux")
+set(CMAKE_SYSTEM_VERSION "5.4.0-105-generic")
+set(CMAKE_SYSTEM_PROCESSOR "x86_64")
+
+set(CMAKE_CROSSCOMPILING "FALSE")
+
+set(CMAKE_SYSTEM_LOADED 1)
diff --git a/build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp b/build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
new file mode 100644
index 0000000..2d66298
--- /dev/null
+++ b/build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
@@ -0,0 +1,576 @@
+/* This source file must have a .cpp extension so that all C++ compilers
+   recognize the extension without flags.  Borland does not know .cxx for
+   example.  */
+#ifndef __cplusplus
+# error "A C compiler has been selected for C++."
+#endif
+
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__COMO__)
+# define COMPILER_ID "Comeau"
+  /* __COMO_VERSION__ = VRR */
+# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
+
+#elif defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+  /* __INTEL_COMPILER = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+# if defined(__INTEL_COMPILER_UPDATE)
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+# else
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
+# define COMPILER_ID "Watcom"
+   /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "OpenWatcom"
+   /* __WATCOMC__ = VVRP + 1100 */
+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__SUNPRO_CC)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_CC >= 0x5100
+   /* __SUNPRO_CC = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# else
+   /* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# endif
+
+#elif defined(__HP_aCC)
+# define COMPILER_ID "HP"
+  /* __HP_aCC = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
+
+#elif defined(__DECCXX)
+# define COMPILER_ID "Compaq"
+  /* __DECCXX_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
+
+#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
+# define COMPILER_ID "zOS"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
+# define COMPILER_ID "XL"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
+# define COMPILER_ID "VisualAge"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version)
+# define COMPILER_ID "Fujitsu"
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__clang__) && defined(__apple_build_version__)
+# define COMPILER_ID "AppleClang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+
+#elif defined(__clang__)
+# define COMPILER_ID "Clang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__GNUC__) || defined(__GNUG__)
+# define COMPILER_ID "GNU"
+# if defined(__GNUC__)
+#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# else
+#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
+# define COMPILER_ID "ADSP"
+#if defined(__VISUALDSPVERSION__)
+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
+#endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+# if defined(__VER__)
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# endif
+
+#elif defined(__ARMCC_VERSION)
+# define COMPILER_ID "ARMCC"
+#if __ARMCC_VERSION >= 1000000
+  /* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+#else
+  /* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+#endif
+
+
+#elif defined(_SGI_COMPILER_VERSION) || defined(_COMPILER_VERSION)
+# define COMPILER_ID "MIPSpro"
+# if defined(_SGI_COMPILER_VERSION)
+  /* _SGI_COMPILER_VERSION = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(_SGI_COMPILER_VERSION/100)
+#  define COMPILER_VERSION_MINOR DEC(_SGI_COMPILER_VERSION/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(_SGI_COMPILER_VERSION    % 10)
+# else
+  /* _COMPILER_VERSION = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(_COMPILER_VERSION/100)
+#  define COMPILER_VERSION_MINOR DEC(_COMPILER_VERSION/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(_COMPILER_VERSION    % 10)
+# endif
+
+
+/* These compilers are either not known or too old to define an
+  identification macro.  Try to identify the platform and guess that
+  it is the native compiler.  */
+#elif defined(__sgi)
+# define COMPILER_ID "MIPSpro"
+
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto[]";
+#endif
+
+#if defined(__CRAYXE) || defined(__CRAYXC)
+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+#endif
+
+#define STRINGIFY_HELPER(X) #X
+#define STRINGIFY(X) STRINGIFY_HELPER(X)
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)
+# define PLATFORM_ID "IRIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#elif defined(__WATCOMC__)
+# if defined(__LINUX__)
+#  define PLATFORM_ID "Linux"
+
+# elif defined(__DOS__)
+#  define PLATFORM_ID "DOS"
+
+# elif defined(__OS2__)
+#  define PLATFORM_ID "OS2"
+
+# elif defined(__WINDOWS__)
+#  define PLATFORM_ID "Windows3x"
+
+# else /* unknown platform */
+#  define PLATFORM_ID
+# endif
+
+#else /* unknown platform */
+# define PLATFORM_ID
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM64)
+#  define ARCHITECTURE_ID "ARM64"
+
+# elif defined(_M_ARM)
+#  if _M_ARM == 4
+#   define ARCHITECTURE_ID "ARMV4I"
+#  elif _M_ARM == 5
+#   define ARCHITECTURE_ID "ARMV5I"
+#  else
+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
+#  endif
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__WATCOMC__)
+# if defined(_M_I86)
+#  define ARCHITECTURE_ID "I86"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# if defined(__ICCARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__ICCAVR__)
+#  define ARCHITECTURE_ID "AVR"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+#else
+#  define ARCHITECTURE_ID
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number components. */
+#ifdef COMPILER_VERSION_MAJOR
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the internal version number. */
+#ifdef COMPILER_VERSION_INTERNAL
+char const info_version_internal[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
+  'i','n','t','e','r','n','a','l','[',
+  COMPILER_VERSION_INTERNAL,']','\0'};
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+
+#if defined(_MSC_VER) && defined(_MSVC_LANG)
+#define CXX_STD _MSVC_LANG
+#else
+#define CXX_STD __cplusplus
+#endif
+
+const char* info_language_dialect_default = "INFO" ":" "dialect_default["
+#if CXX_STD > 201402L
+  "17"
+#elif CXX_STD >= 201402L
+  "14"
+#elif CXX_STD >= 201103L
+  "11"
+#else
+  "98"
+#endif
+"]";
+
+/*--------------------------------------------------------------------------*/
+
+int main(int argc, char* argv[])
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef COMPILER_VERSION_INTERNAL
+  require += info_version_internal[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+#if defined(__CRAYXE) || defined(__CRAYXC)
+  require += info_cray[argc];
+#endif
+  require += info_language_dialect_default[argc];
+  (void)argv;
+  return require;
+}
diff --git a/build/CMakeFiles/3.10.2/CompilerIdCXX/a.out b/build/CMakeFiles/3.10.2/CompilerIdCXX/a.out
new file mode 100755
index 0000000000000000000000000000000000000000..71c2ceda86a2fae89d661d131b89af3990e37838
GIT binary patch
literal 8416
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
L;1d=k>el}!^A2#R

literal 0
HcmV?d00001

diff --git a/build/CMakeFiles/3.16.3/CMakeDetermineCompilerABI_CXX.bin b/build/CMakeFiles/3.16.3/CMakeDetermineCompilerABI_CXX.bin
deleted file mode 100755
index 156cfcfc782ba2dc2f291ca842e4a4516fe2c356..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 16560
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

diff --git a/build/CMakeFiles/3.16.3/CompilerIdCXX/a.out b/build/CMakeFiles/3.16.3/CompilerIdCXX/a.out
deleted file mode 100755
index 34ec4a035bbb8902315ba9a0b3b352eb275bc2d7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 16720
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

diff --git a/build/CMakeFiles/CMakeDirectoryInformation.cmake b/build/CMakeFiles/CMakeDirectoryInformation.cmake
new file mode 100644
index 0000000..5abc81a
--- /dev/null
+++ b/build/CMakeFiles/CMakeDirectoryInformation.cmake
@@ -0,0 +1,16 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# Relative path conversion top directories.
+set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/shichen/ssd/opensource/logdb")
+set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/shichen/ssd/opensource/logdb/build")
+
+# Force unix paths in dependencies.
+set(CMAKE_FORCE_UNIX_PATHS 1)
+
+
+# The C and CXX include file regular expressions for this directory.
+set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")
+set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")
+set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
+set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
diff --git a/build/CMakeFiles/CMakeOutput.log b/build/CMakeFiles/CMakeOutput.log
index 6f07264..94f8549 100644
--- a/build/CMakeFiles/CMakeOutput.log
+++ b/build/CMakeFiles/CMakeOutput.log
@@ -1,4 +1,4 @@
-The system is: Linux - 5.15.0-58-generic - x86_64
+The system is: Linux - 5.4.0-105-generic - x86_64
 Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
 Compiler: /usr/bin/c++ 
 Build flags: 
@@ -10,178 +10,80 @@ The output was:
 
 Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"
 
-The CXX compiler identification is GNU, found in "/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/3.16.3/CompilerIdCXX/a.out"
+The CXX compiler identification is GNU, found in "/home/shichen/ssd/opensource/logdb/build/CMakeFiles/3.10.2/CompilerIdCXX/a.out"
 
 Determining if the CXX compiler works passed with the following output:
-Change Dir: /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp
-
-Run Build Command(s):/usr/bin/make cmTC_25706/fast && /usr/bin/make -f CMakeFiles/cmTC_25706.dir/build.make CMakeFiles/cmTC_25706.dir/build
-make[1]: Entering directory '/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp'
-Building CXX object CMakeFiles/cmTC_25706.dir/testCXXCompiler.cxx.o
-/usr/bin/c++     -o CMakeFiles/cmTC_25706.dir/testCXXCompiler.cxx.o -c /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
-Linking CXX executable cmTC_25706
-/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_25706.dir/link.txt --verbose=1
-/usr/bin/c++       CMakeFiles/cmTC_25706.dir/testCXXCompiler.cxx.o  -o cmTC_25706 
-make[1]: Leaving directory '/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp'
+Change Dir: /home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp
 
+Run Build Command:"/usr/bin/make" "cmTC_a51ad/fast"
+/usr/bin/make -f CMakeFiles/cmTC_a51ad.dir/build.make CMakeFiles/cmTC_a51ad.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_a51ad.dir/testCXXCompiler.cxx.o
+/usr/bin/c++     -o CMakeFiles/cmTC_a51ad.dir/testCXXCompiler.cxx.o -c /home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
+Linking CXX executable cmTC_a51ad
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a51ad.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_a51ad.dir/testCXXCompiler.cxx.o  -o cmTC_a51ad 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
 
 
 Detecting CXX compiler ABI info compiled with the following output:
-Change Dir: /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp
-
-Run Build Command(s):/usr/bin/make cmTC_02b75/fast && /usr/bin/make -f CMakeFiles/cmTC_02b75.dir/build.make CMakeFiles/cmTC_02b75.dir/build
-make[1]: Entering directory '/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp'
-Building CXX object CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o
-/usr/bin/c++    -v -o CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp
-Using built-in specs.
-COLLECT_GCC=/usr/bin/c++
-OFFLOAD_TARGET_NAMES=nvptx-none:hsa
-OFFLOAD_TARGET_DEFAULT=1
-Target: x86_64-linux-gnu
-Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
-Thread model: posix
-gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) 
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
- /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccyaNEGP.s
-GNU C++14 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
-	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP
-
-GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"
-ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
-ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
-ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
-#include "..." search starts here:
-#include <...> search starts here:
- /usr/include/c++/9
- /usr/include/x86_64-linux-gnu/c++/9
- /usr/include/c++/9/backward
- /usr/lib/gcc/x86_64-linux-gnu/9/include
- /usr/local/include
- /usr/include/x86_64-linux-gnu
- /usr/include
-End of search list.
-GNU C++14 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
-	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP
-
-GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-Compiler executable checksum: 65fe925b83d3956b533de4aaba7dace0
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
- as -v --64 -o CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccyaNEGP.s
-GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
-COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
-LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
-Linking CXX executable cmTC_02b75
-/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_02b75.dir/link.txt --verbose=1
-/usr/bin/c++      -v CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_02b75 
+Change Dir: /home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_7c314/fast"
+/usr/bin/make -f CMakeFiles/cmTC_7c314.dir/build.make CMakeFiles/cmTC_7c314.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o
+/usr/bin/c++     -o CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.10/Modules/CMakeCXXCompilerABI.cpp
+Linking CXX executable cmTC_7c314
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7c314.dir/link.txt --verbose=1
+/usr/bin/c++      -v CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_7c314 
 Using built-in specs.
 COLLECT_GCC=/usr/bin/c++
-COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
-OFFLOAD_TARGET_NAMES=nvptx-none:hsa
+COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper
+OFFLOAD_TARGET_NAMES=nvptx-none
 OFFLOAD_TARGET_DEFAULT=1
 Target: x86_64-linux-gnu
-Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
+Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.5.0-3ubuntu1~18.04' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
 Thread model: posix
-gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) 
-COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
-LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_02b75' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
- /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cctUAHzg.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_02b75 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_02b75' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
-make[1]: Leaving directory '/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp'
-
-
-
-Parsed CXX implicit include dir info from above output: rv=done
-  found start of include info
-  found start of implicit include info
-    add: [/usr/include/c++/9]
-    add: [/usr/include/x86_64-linux-gnu/c++/9]
-    add: [/usr/include/c++/9/backward]
-    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
-    add: [/usr/local/include]
-    add: [/usr/include/x86_64-linux-gnu]
-    add: [/usr/include]
-  end of search list found
-  collapse include dir [/usr/include/c++/9] ==> [/usr/include/c++/9]
-  collapse include dir [/usr/include/x86_64-linux-gnu/c++/9] ==> [/usr/include/x86_64-linux-gnu/c++/9]
-  collapse include dir [/usr/include/c++/9/backward] ==> [/usr/include/c++/9/backward]
-  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==> [/usr/lib/gcc/x86_64-linux-gnu/9/include]
-  collapse include dir [/usr/local/include] ==> [/usr/local/include]
-  collapse include dir [/usr/include/x86_64-linux-gnu] ==> [/usr/include/x86_64-linux-gnu]
-  collapse include dir [/usr/include] ==> [/usr/include]
-  implicit include dirs: [/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]
+gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) 
+COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/
+LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../:/lib/:/usr/lib/
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_7c314' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
+ /usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccFWAotm.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_7c314 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_7c314' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
 
 
 Parsed CXX implicit link information from above output:
   link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
-  ignore line: [Change Dir: /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp]
-  ignore line: []
-  ignore line: [Run Build Command(s):/usr/bin/make cmTC_02b75/fast && /usr/bin/make -f CMakeFiles/cmTC_02b75.dir/build.make CMakeFiles/cmTC_02b75.dir/build]
-  ignore line: [make[1]: Entering directory '/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp']
-  ignore line: [Building CXX object CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o]
-  ignore line: [/usr/bin/c++    -v -o CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp]
-  ignore line: [Using built-in specs.]
-  ignore line: [COLLECT_GCC=/usr/bin/c++]
-  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
-  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
-  ignore line: [Target: x86_64-linux-gnu]
-  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
-  ignore line: [Thread model: posix]
-  ignore line: [gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) ]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
-  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccyaNEGP.s]
-  ignore line: [GNU C++14 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)]
-  ignore line: [	compiled by GNU C version 9.4.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
-  ignore line: []
-  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-  ignore line: [ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"]
-  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
-  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
-  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
-  ignore line: [#include "..." search starts here:]
-  ignore line: [#include <...> search starts here:]
-  ignore line: [ /usr/include/c++/9]
-  ignore line: [ /usr/include/x86_64-linux-gnu/c++/9]
-  ignore line: [ /usr/include/c++/9/backward]
-  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
-  ignore line: [ /usr/local/include]
-  ignore line: [ /usr/include/x86_64-linux-gnu]
-  ignore line: [ /usr/include]
-  ignore line: [End of search list.]
-  ignore line: [GNU C++14 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)]
-  ignore line: [	compiled by GNU C version 9.4.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
+  ignore line: [Change Dir: /home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp]
   ignore line: []
-  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-  ignore line: [Compiler executable checksum: 65fe925b83d3956b533de4aaba7dace0]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
-  ignore line: [ as -v --64 -o CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccyaNEGP.s]
-  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
-  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
-  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
-  ignore line: [Linking CXX executable cmTC_02b75]
-  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_02b75.dir/link.txt --verbose=1]
-  ignore line: [/usr/bin/c++      -v CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_02b75 ]
+  ignore line: [Run Build Command:"/usr/bin/make" "cmTC_7c314/fast"]
+  ignore line: [/usr/bin/make -f CMakeFiles/cmTC_7c314.dir/build.make CMakeFiles/cmTC_7c314.dir/build]
+  ignore line: [make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp']
+  ignore line: [Building CXX object CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o]
+  ignore line: [/usr/bin/c++     -o CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.10/Modules/CMakeCXXCompilerABI.cpp]
+  ignore line: [Linking CXX executable cmTC_7c314]
+  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7c314.dir/link.txt --verbose=1]
+  ignore line: [/usr/bin/c++      -v CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_7c314 ]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=/usr/bin/c++]
-  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
-  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
+  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper]
+  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none]
   ignore line: [OFFLOAD_TARGET_DEFAULT=1]
   ignore line: [Target: x86_64-linux-gnu]
-  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
+  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.5.0-3ubuntu1~18.04' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
   ignore line: [Thread model: posix]
-  ignore line: [gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) ]
-  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
-  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_02b75' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
-  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cctUAHzg.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_02b75 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==> ignore
+  ignore line: [gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) ]
+  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/]
+  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../:/lib/:/usr/lib/]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_7c314' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
+  link line: [ /usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccFWAotm.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_7c314 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o]
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/collect2] ==> ignore
     arg [-plugin] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==> ignore
-    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==> ignore
-    arg [-plugin-opt=-fresolution=/tmp/cctUAHzg.res] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so] ==> ignore
+    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper] ==> ignore
+    arg [-plugin-opt=-fresolution=/tmp/ccFWAotm.res] ==> ignore
     arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
     arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
     arg [-plugin-opt=-pass-through=-lc] ==> ignore
@@ -199,19 +101,19 @@ Parsed CXX implicit link information from above output:
     arg [-znow] ==> ignore
     arg [-zrelro] ==> ignore
     arg [-o] ==> ignore
-    arg [cmTC_02b75] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==> ignore
-    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9]
-    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
-    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
+    arg [cmTC_7c314] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o] ==> ignore
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu]
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib]
     arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
     arg [-L/lib/../lib] ==> dir [/lib/../lib]
     arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
     arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
-    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
-    arg [CMakeFiles/cmTC_02b75.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
+    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../..]
+    arg [CMakeFiles/cmTC_7c314.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
     arg [-lstdc++] ==> lib [stdc++]
     arg [-lm] ==> lib [m]
     arg [-lgcc_s] ==> lib [gcc_s]
@@ -219,237 +121,310 @@ Parsed CXX implicit link information from above output:
     arg [-lc] ==> lib [c]
     arg [-lgcc_s] ==> lib [gcc_s]
     arg [-lgcc] ==> lib [gcc]
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==> ignore
-  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==> [/usr/lib/gcc/x86_64-linux-gnu/9]
-  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
-  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> [/usr/lib]
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o] ==> ignore
+    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o] ==> ignore
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7] ==> [/usr/lib/gcc/x86_64-linux-gnu/7]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib] ==> [/usr/lib]
   collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
   collapse library dir [/lib/../lib] ==> [/lib]
   collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
   collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
-  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> [/usr/lib]
+  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../..] ==> [/usr/lib]
   implicit libs: [stdc++;m;gcc_s;gcc;c;gcc_s;gcc]
-  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
+  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/7;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
   implicit fwks: []
 
 
-The system is: Linux - 5.15.0-60-generic - x86_64
-Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
-Compiler: /usr/bin/c++ 
-Build flags: 
-Id flags:  
-
-The output was:
-0
-
-
-Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"
-
-The CXX compiler identification is GNU, found in "/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/3.16.3/CompilerIdCXX/a.out"
-
-Determining if the CXX compiler works passed with the following output:
-Change Dir: /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp
-
-Run Build Command(s):/usr/bin/ninja cmTC_7d460 && [1/2] Building CXX object CMakeFiles/cmTC_7d460.dir/testCXXCompiler.cxx.o
-[2/2] Linking CXX executable cmTC_7d460
-
-
-
-Detecting CXX compiler ABI info compiled with the following output:
-Change Dir: /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp
-
-Run Build Command(s):/usr/bin/ninja cmTC_12ce8 && [1/2] Building CXX object CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o
-Using built-in specs.
-COLLECT_GCC=/usr/bin/c++
-OFFLOAD_TARGET_NAMES=nvptx-none:hsa
-OFFLOAD_TARGET_DEFAULT=1
-Target: x86_64-linux-gnu
-Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
-Thread model: posix
-gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) 
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
- /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccxWQUT0.s
-GNU C++14 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
-	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP
-
-GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"
-ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
-ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
-ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
-#include "..." search starts here:
-#include <...> search starts here:
- /usr/include/c++/9
- /usr/include/x86_64-linux-gnu/c++/9
- /usr/include/c++/9/backward
- /usr/lib/gcc/x86_64-linux-gnu/9/include
- /usr/local/include
- /usr/include/x86_64-linux-gnu
- /usr/include
-End of search list.
-GNU C++14 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
-	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP
-
-GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-Compiler executable checksum: 65fe925b83d3956b533de4aaba7dace0
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
- as -v --64 -o CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccxWQUT0.s
-GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
-COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
-LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
-[2/2] Linking CXX executable cmTC_12ce8
-Using built-in specs.
-COLLECT_GCC=/usr/bin/c++
-COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
-OFFLOAD_TARGET_NAMES=nvptx-none:hsa
-OFFLOAD_TARGET_DEFAULT=1
-Target: x86_64-linux-gnu
-Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
-Thread model: posix
-gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) 
-COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
-LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_12ce8' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
- /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cczkstmk.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_12ce8 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_12ce8' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
-
-
-
-Parsed CXX implicit include dir info from above output: rv=done
-  found start of include info
-  found start of implicit include info
-    add: [/usr/include/c++/9]
-    add: [/usr/include/x86_64-linux-gnu/c++/9]
-    add: [/usr/include/c++/9/backward]
-    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
-    add: [/usr/local/include]
-    add: [/usr/include/x86_64-linux-gnu]
-    add: [/usr/include]
-  end of search list found
-  collapse include dir [/usr/include/c++/9] ==> [/usr/include/c++/9]
-  collapse include dir [/usr/include/x86_64-linux-gnu/c++/9] ==> [/usr/include/x86_64-linux-gnu/c++/9]
-  collapse include dir [/usr/include/c++/9/backward] ==> [/usr/include/c++/9/backward]
-  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==> [/usr/lib/gcc/x86_64-linux-gnu/9/include]
-  collapse include dir [/usr/local/include] ==> [/usr/local/include]
-  collapse include dir [/usr/include/x86_64-linux-gnu] ==> [/usr/include/x86_64-linux-gnu]
-  collapse include dir [/usr/include] ==> [/usr/include]
-  implicit include dirs: [/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]
-
-
-Parsed CXX implicit link information from above output:
-  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
-  ignore line: [Change Dir: /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/CMakeTmp]
-  ignore line: []
-  ignore line: [Run Build Command(s):/usr/bin/ninja cmTC_12ce8 && [1/2] Building CXX object CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o]
-  ignore line: [Using built-in specs.]
-  ignore line: [COLLECT_GCC=/usr/bin/c++]
-  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
-  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
-  ignore line: [Target: x86_64-linux-gnu]
-  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
-  ignore line: [Thread model: posix]
-  ignore line: [gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) ]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
-  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccxWQUT0.s]
-  ignore line: [GNU C++14 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)]
-  ignore line: [	compiled by GNU C version 9.4.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
-  ignore line: []
-  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-  ignore line: [ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"]
-  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
-  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
-  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
-  ignore line: [#include "..." search starts here:]
-  ignore line: [#include <...> search starts here:]
-  ignore line: [ /usr/include/c++/9]
-  ignore line: [ /usr/include/x86_64-linux-gnu/c++/9]
-  ignore line: [ /usr/include/c++/9/backward]
-  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
-  ignore line: [ /usr/local/include]
-  ignore line: [ /usr/include/x86_64-linux-gnu]
-  ignore line: [ /usr/include]
-  ignore line: [End of search list.]
-  ignore line: [GNU C++14 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)]
-  ignore line: [	compiled by GNU C version 9.4.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
-  ignore line: []
-  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-  ignore line: [Compiler executable checksum: 65fe925b83d3956b533de4aaba7dace0]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
-  ignore line: [ as -v --64 -o CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccxWQUT0.s]
-  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
-  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
-  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
-  ignore line: [[2/2] Linking CXX executable cmTC_12ce8]
-  ignore line: [Using built-in specs.]
-  ignore line: [COLLECT_GCC=/usr/bin/c++]
-  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
-  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
-  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
-  ignore line: [Target: x86_64-linux-gnu]
-  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.4.0-1ubuntu1~20.04.1' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-Av3uEd/gcc-9-9.4.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
-  ignore line: [Thread model: posix]
-  ignore line: [gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1) ]
-  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
-  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_12ce8' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
-  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cczkstmk.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_12ce8 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==> ignore
-    arg [-plugin] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==> ignore
-    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==> ignore
-    arg [-plugin-opt=-fresolution=/tmp/cczkstmk.res] ==> ignore
-    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
-    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-    arg [-plugin-opt=-pass-through=-lc] ==> ignore
-    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
-    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-    arg [--build-id] ==> ignore
-    arg [--eh-frame-hdr] ==> ignore
-    arg [-m] ==> ignore
-    arg [elf_x86_64] ==> ignore
-    arg [--hash-style=gnu] ==> ignore
-    arg [--as-needed] ==> ignore
-    arg [-dynamic-linker] ==> ignore
-    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
-    arg [-pie] ==> ignore
-    arg [-znow] ==> ignore
-    arg [-zrelro] ==> ignore
-    arg [-o] ==> ignore
-    arg [cmTC_12ce8] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==> ignore
-    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9]
-    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
-    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
-    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
-    arg [-L/lib/../lib] ==> dir [/lib/../lib]
-    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
-    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
-    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
-    arg [CMakeFiles/cmTC_12ce8.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
-    arg [-lstdc++] ==> lib [stdc++]
-    arg [-lm] ==> lib [m]
-    arg [-lgcc_s] ==> lib [gcc_s]
-    arg [-lgcc] ==> lib [gcc]
-    arg [-lc] ==> lib [c]
-    arg [-lgcc_s] ==> lib [gcc_s]
-    arg [-lgcc] ==> lib [gcc]
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==> ignore
-    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==> ignore
-  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==> [/usr/lib/gcc/x86_64-linux-gnu/9]
-  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
-  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> [/usr/lib]
-  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
-  collapse library dir [/lib/../lib] ==> [/lib]
-  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
-  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
-  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> [/usr/lib]
-  implicit libs: [stdc++;m;gcc_s;gcc;c;gcc_s;gcc]
-  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
-  implicit fwks: []
 
 
+Detecting CXX [-std=c++1z] compiler features compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_5cc83/fast"
+/usr/bin/make -f CMakeFiles/cmTC_5cc83.dir/build.make CMakeFiles/cmTC_5cc83.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_5cc83.dir/feature_tests.cxx.o
+/usr/bin/c++    -std=c++1z -o CMakeFiles/cmTC_5cc83.dir/feature_tests.cxx.o -c /home/shichen/ssd/opensource/logdb/build/CMakeFiles/feature_tests.cxx
+Linking CXX executable cmTC_5cc83
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5cc83.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_5cc83.dir/feature_tests.cxx.o  -o cmTC_5cc83 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+
+
+    Feature record: CXX_FEATURE:1cxx_aggregate_default_initializers
+    Feature record: CXX_FEATURE:1cxx_alias_templates
+    Feature record: CXX_FEATURE:1cxx_alignas
+    Feature record: CXX_FEATURE:1cxx_alignof
+    Feature record: CXX_FEATURE:1cxx_attributes
+    Feature record: CXX_FEATURE:1cxx_attribute_deprecated
+    Feature record: CXX_FEATURE:1cxx_auto_type
+    Feature record: CXX_FEATURE:1cxx_binary_literals
+    Feature record: CXX_FEATURE:1cxx_constexpr
+    Feature record: CXX_FEATURE:1cxx_contextual_conversions
+    Feature record: CXX_FEATURE:1cxx_decltype
+    Feature record: CXX_FEATURE:1cxx_decltype_auto
+    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types
+    Feature record: CXX_FEATURE:1cxx_default_function_template_args
+    Feature record: CXX_FEATURE:1cxx_defaulted_functions
+    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers
+    Feature record: CXX_FEATURE:1cxx_delegating_constructors
+    Feature record: CXX_FEATURE:1cxx_deleted_functions
+    Feature record: CXX_FEATURE:1cxx_digit_separators
+    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations
+    Feature record: CXX_FEATURE:1cxx_explicit_conversions
+    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations
+    Feature record: CXX_FEATURE:1cxx_extern_templates
+    Feature record: CXX_FEATURE:1cxx_final
+    Feature record: CXX_FEATURE:1cxx_func_identifier
+    Feature record: CXX_FEATURE:1cxx_generalized_initializers
+    Feature record: CXX_FEATURE:1cxx_generic_lambdas
+    Feature record: CXX_FEATURE:1cxx_inheriting_constructors
+    Feature record: CXX_FEATURE:1cxx_inline_namespaces
+    Feature record: CXX_FEATURE:1cxx_lambdas
+    Feature record: CXX_FEATURE:1cxx_lambda_init_captures
+    Feature record: CXX_FEATURE:1cxx_local_type_template_args
+    Feature record: CXX_FEATURE:1cxx_long_long_type
+    Feature record: CXX_FEATURE:1cxx_noexcept
+    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init
+    Feature record: CXX_FEATURE:1cxx_nullptr
+    Feature record: CXX_FEATURE:1cxx_override
+    Feature record: CXX_FEATURE:1cxx_range_for
+    Feature record: CXX_FEATURE:1cxx_raw_string_literals
+    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions
+    Feature record: CXX_FEATURE:1cxx_relaxed_constexpr
+    Feature record: CXX_FEATURE:1cxx_return_type_deduction
+    Feature record: CXX_FEATURE:1cxx_right_angle_brackets
+    Feature record: CXX_FEATURE:1cxx_rvalue_references
+    Feature record: CXX_FEATURE:1cxx_sizeof_member
+    Feature record: CXX_FEATURE:1cxx_static_assert
+    Feature record: CXX_FEATURE:1cxx_strong_enums
+    Feature record: CXX_FEATURE:1cxx_template_template_parameters
+    Feature record: CXX_FEATURE:1cxx_thread_local
+    Feature record: CXX_FEATURE:1cxx_trailing_return_types
+    Feature record: CXX_FEATURE:1cxx_unicode_literals
+    Feature record: CXX_FEATURE:1cxx_uniform_initialization
+    Feature record: CXX_FEATURE:1cxx_unrestricted_unions
+    Feature record: CXX_FEATURE:1cxx_user_literals
+    Feature record: CXX_FEATURE:1cxx_variable_templates
+    Feature record: CXX_FEATURE:1cxx_variadic_macros
+    Feature record: CXX_FEATURE:1cxx_variadic_templates
+
+
+Detecting CXX [-std=c++14] compiler features compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_ce9ee/fast"
+/usr/bin/make -f CMakeFiles/cmTC_ce9ee.dir/build.make CMakeFiles/cmTC_ce9ee.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_ce9ee.dir/feature_tests.cxx.o
+/usr/bin/c++    -std=c++14 -o CMakeFiles/cmTC_ce9ee.dir/feature_tests.cxx.o -c /home/shichen/ssd/opensource/logdb/build/CMakeFiles/feature_tests.cxx
+Linking CXX executable cmTC_ce9ee
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ce9ee.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_ce9ee.dir/feature_tests.cxx.o  -o cmTC_ce9ee 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+
+
+    Feature record: CXX_FEATURE:1cxx_aggregate_default_initializers
+    Feature record: CXX_FEATURE:1cxx_alias_templates
+    Feature record: CXX_FEATURE:1cxx_alignas
+    Feature record: CXX_FEATURE:1cxx_alignof
+    Feature record: CXX_FEATURE:1cxx_attributes
+    Feature record: CXX_FEATURE:1cxx_attribute_deprecated
+    Feature record: CXX_FEATURE:1cxx_auto_type
+    Feature record: CXX_FEATURE:1cxx_binary_literals
+    Feature record: CXX_FEATURE:1cxx_constexpr
+    Feature record: CXX_FEATURE:1cxx_contextual_conversions
+    Feature record: CXX_FEATURE:1cxx_decltype
+    Feature record: CXX_FEATURE:1cxx_decltype_auto
+    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types
+    Feature record: CXX_FEATURE:1cxx_default_function_template_args
+    Feature record: CXX_FEATURE:1cxx_defaulted_functions
+    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers
+    Feature record: CXX_FEATURE:1cxx_delegating_constructors
+    Feature record: CXX_FEATURE:1cxx_deleted_functions
+    Feature record: CXX_FEATURE:1cxx_digit_separators
+    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations
+    Feature record: CXX_FEATURE:1cxx_explicit_conversions
+    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations
+    Feature record: CXX_FEATURE:1cxx_extern_templates
+    Feature record: CXX_FEATURE:1cxx_final
+    Feature record: CXX_FEATURE:1cxx_func_identifier
+    Feature record: CXX_FEATURE:1cxx_generalized_initializers
+    Feature record: CXX_FEATURE:1cxx_generic_lambdas
+    Feature record: CXX_FEATURE:1cxx_inheriting_constructors
+    Feature record: CXX_FEATURE:1cxx_inline_namespaces
+    Feature record: CXX_FEATURE:1cxx_lambdas
+    Feature record: CXX_FEATURE:1cxx_lambda_init_captures
+    Feature record: CXX_FEATURE:1cxx_local_type_template_args
+    Feature record: CXX_FEATURE:1cxx_long_long_type
+    Feature record: CXX_FEATURE:1cxx_noexcept
+    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init
+    Feature record: CXX_FEATURE:1cxx_nullptr
+    Feature record: CXX_FEATURE:1cxx_override
+    Feature record: CXX_FEATURE:1cxx_range_for
+    Feature record: CXX_FEATURE:1cxx_raw_string_literals
+    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions
+    Feature record: CXX_FEATURE:1cxx_relaxed_constexpr
+    Feature record: CXX_FEATURE:1cxx_return_type_deduction
+    Feature record: CXX_FEATURE:1cxx_right_angle_brackets
+    Feature record: CXX_FEATURE:1cxx_rvalue_references
+    Feature record: CXX_FEATURE:1cxx_sizeof_member
+    Feature record: CXX_FEATURE:1cxx_static_assert
+    Feature record: CXX_FEATURE:1cxx_strong_enums
+    Feature record: CXX_FEATURE:1cxx_template_template_parameters
+    Feature record: CXX_FEATURE:1cxx_thread_local
+    Feature record: CXX_FEATURE:1cxx_trailing_return_types
+    Feature record: CXX_FEATURE:1cxx_unicode_literals
+    Feature record: CXX_FEATURE:1cxx_uniform_initialization
+    Feature record: CXX_FEATURE:1cxx_unrestricted_unions
+    Feature record: CXX_FEATURE:1cxx_user_literals
+    Feature record: CXX_FEATURE:1cxx_variable_templates
+    Feature record: CXX_FEATURE:1cxx_variadic_macros
+    Feature record: CXX_FEATURE:1cxx_variadic_templates
+
+
+Detecting CXX [-std=c++11] compiler features compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_9beef/fast"
+/usr/bin/make -f CMakeFiles/cmTC_9beef.dir/build.make CMakeFiles/cmTC_9beef.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_9beef.dir/feature_tests.cxx.o
+/usr/bin/c++    -std=c++11 -o CMakeFiles/cmTC_9beef.dir/feature_tests.cxx.o -c /home/shichen/ssd/opensource/logdb/build/CMakeFiles/feature_tests.cxx
+Linking CXX executable cmTC_9beef
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9beef.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_9beef.dir/feature_tests.cxx.o  -o cmTC_9beef 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+
+
+    Feature record: CXX_FEATURE:0cxx_aggregate_default_initializers
+    Feature record: CXX_FEATURE:1cxx_alias_templates
+    Feature record: CXX_FEATURE:1cxx_alignas
+    Feature record: CXX_FEATURE:1cxx_alignof
+    Feature record: CXX_FEATURE:1cxx_attributes
+    Feature record: CXX_FEATURE:0cxx_attribute_deprecated
+    Feature record: CXX_FEATURE:1cxx_auto_type
+    Feature record: CXX_FEATURE:0cxx_binary_literals
+    Feature record: CXX_FEATURE:1cxx_constexpr
+    Feature record: CXX_FEATURE:0cxx_contextual_conversions
+    Feature record: CXX_FEATURE:1cxx_decltype
+    Feature record: CXX_FEATURE:0cxx_decltype_auto
+    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types
+    Feature record: CXX_FEATURE:1cxx_default_function_template_args
+    Feature record: CXX_FEATURE:1cxx_defaulted_functions
+    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers
+    Feature record: CXX_FEATURE:1cxx_delegating_constructors
+    Feature record: CXX_FEATURE:1cxx_deleted_functions
+    Feature record: CXX_FEATURE:0cxx_digit_separators
+    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations
+    Feature record: CXX_FEATURE:1cxx_explicit_conversions
+    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations
+    Feature record: CXX_FEATURE:1cxx_extern_templates
+    Feature record: CXX_FEATURE:1cxx_final
+    Feature record: CXX_FEATURE:1cxx_func_identifier
+    Feature record: CXX_FEATURE:1cxx_generalized_initializers
+    Feature record: CXX_FEATURE:0cxx_generic_lambdas
+    Feature record: CXX_FEATURE:1cxx_inheriting_constructors
+    Feature record: CXX_FEATURE:1cxx_inline_namespaces
+    Feature record: CXX_FEATURE:1cxx_lambdas
+    Feature record: CXX_FEATURE:0cxx_lambda_init_captures
+    Feature record: CXX_FEATURE:1cxx_local_type_template_args
+    Feature record: CXX_FEATURE:1cxx_long_long_type
+    Feature record: CXX_FEATURE:1cxx_noexcept
+    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init
+    Feature record: CXX_FEATURE:1cxx_nullptr
+    Feature record: CXX_FEATURE:1cxx_override
+    Feature record: CXX_FEATURE:1cxx_range_for
+    Feature record: CXX_FEATURE:1cxx_raw_string_literals
+    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions
+    Feature record: CXX_FEATURE:0cxx_relaxed_constexpr
+    Feature record: CXX_FEATURE:0cxx_return_type_deduction
+    Feature record: CXX_FEATURE:1cxx_right_angle_brackets
+    Feature record: CXX_FEATURE:1cxx_rvalue_references
+    Feature record: CXX_FEATURE:1cxx_sizeof_member
+    Feature record: CXX_FEATURE:1cxx_static_assert
+    Feature record: CXX_FEATURE:1cxx_strong_enums
+    Feature record: CXX_FEATURE:1cxx_template_template_parameters
+    Feature record: CXX_FEATURE:1cxx_thread_local
+    Feature record: CXX_FEATURE:1cxx_trailing_return_types
+    Feature record: CXX_FEATURE:1cxx_unicode_literals
+    Feature record: CXX_FEATURE:1cxx_uniform_initialization
+    Feature record: CXX_FEATURE:1cxx_unrestricted_unions
+    Feature record: CXX_FEATURE:1cxx_user_literals
+    Feature record: CXX_FEATURE:0cxx_variable_templates
+    Feature record: CXX_FEATURE:1cxx_variadic_macros
+    Feature record: CXX_FEATURE:1cxx_variadic_templates
+
+
+Detecting CXX [-std=c++98] compiler features compiled with the following output:
+Change Dir: /home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp
+
+Run Build Command:"/usr/bin/make" "cmTC_bc369/fast"
+/usr/bin/make -f CMakeFiles/cmTC_bc369.dir/build.make CMakeFiles/cmTC_bc369.dir/build
+make[1]: Entering directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_bc369.dir/feature_tests.cxx.o
+/usr/bin/c++    -std=c++98 -o CMakeFiles/cmTC_bc369.dir/feature_tests.cxx.o -c /home/shichen/ssd/opensource/logdb/build/CMakeFiles/feature_tests.cxx
+Linking CXX executable cmTC_bc369
+/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_bc369.dir/link.txt --verbose=1
+/usr/bin/c++       CMakeFiles/cmTC_bc369.dir/feature_tests.cxx.o  -o cmTC_bc369 
+make[1]: Leaving directory '/home/shichen/ssd/opensource/logdb/build/CMakeFiles/CMakeTmp'
+
+
+    Feature record: CXX_FEATURE:0cxx_aggregate_default_initializers
+    Feature record: CXX_FEATURE:0cxx_alias_templates
+    Feature record: CXX_FEATURE:0cxx_alignas
+    Feature record: CXX_FEATURE:0cxx_alignof
+    Feature record: CXX_FEATURE:0cxx_attributes
+    Feature record: CXX_FEATURE:0cxx_attribute_deprecated
+    Feature record: CXX_FEATURE:0cxx_auto_type
+    Feature record: CXX_FEATURE:0cxx_binary_literals
+    Feature record: CXX_FEATURE:0cxx_constexpr
+    Feature record: CXX_FEATURE:0cxx_contextual_conversions
+    Feature record: CXX_FEATURE:0cxx_decltype
+    Feature record: CXX_FEATURE:0cxx_decltype_auto
+    Feature record: CXX_FEATURE:0cxx_decltype_incomplete_return_types
+    Feature record: CXX_FEATURE:0cxx_default_function_template_args
+    Feature record: CXX_FEATURE:0cxx_defaulted_functions
+    Feature record: CXX_FEATURE:0cxx_defaulted_move_initializers
+    Feature record: CXX_FEATURE:0cxx_delegating_constructors
+    Feature record: CXX_FEATURE:0cxx_deleted_functions
+    Feature record: CXX_FEATURE:0cxx_digit_separators
+    Feature record: CXX_FEATURE:0cxx_enum_forward_declarations
+    Feature record: CXX_FEATURE:0cxx_explicit_conversions
+    Feature record: CXX_FEATURE:0cxx_extended_friend_declarations
+    Feature record: CXX_FEATURE:0cxx_extern_templates
+    Feature record: CXX_FEATURE:0cxx_final
+    Feature record: CXX_FEATURE:0cxx_func_identifier
+    Feature record: CXX_FEATURE:0cxx_generalized_initializers
+    Feature record: CXX_FEATURE:0cxx_generic_lambdas
+    Feature record: CXX_FEATURE:0cxx_inheriting_constructors
+    Feature record: CXX_FEATURE:0cxx_inline_namespaces
+    Feature record: CXX_FEATURE:0cxx_lambdas
+    Feature record: CXX_FEATURE:0cxx_lambda_init_captures
+    Feature record: CXX_FEATURE:0cxx_local_type_template_args
+    Feature record: CXX_FEATURE:0cxx_long_long_type
+    Feature record: CXX_FEATURE:0cxx_noexcept
+    Feature record: CXX_FEATURE:0cxx_nonstatic_member_init
+    Feature record: CXX_FEATURE:0cxx_nullptr
+    Feature record: CXX_FEATURE:0cxx_override
+    Feature record: CXX_FEATURE:0cxx_range_for
+    Feature record: CXX_FEATURE:0cxx_raw_string_literals
+    Feature record: CXX_FEATURE:0cxx_reference_qualified_functions
+    Feature record: CXX_FEATURE:0cxx_relaxed_constexpr
+    Feature record: CXX_FEATURE:0cxx_return_type_deduction
+    Feature record: CXX_FEATURE:0cxx_right_angle_brackets
+    Feature record: CXX_FEATURE:0cxx_rvalue_references
+    Feature record: CXX_FEATURE:0cxx_sizeof_member
+    Feature record: CXX_FEATURE:0cxx_static_assert
+    Feature record: CXX_FEATURE:0cxx_strong_enums
+    Feature record: CXX_FEATURE:1cxx_template_template_parameters
+    Feature record: CXX_FEATURE:0cxx_thread_local
+    Feature record: CXX_FEATURE:0cxx_trailing_return_types
+    Feature record: CXX_FEATURE:0cxx_unicode_literals
+    Feature record: CXX_FEATURE:0cxx_uniform_initialization
+    Feature record: CXX_FEATURE:0cxx_unrestricted_unions
+    Feature record: CXX_FEATURE:0cxx_user_literals
+    Feature record: CXX_FEATURE:0cxx_variable_templates
+    Feature record: CXX_FEATURE:0cxx_variadic_macros
+    Feature record: CXX_FEATURE:0cxx_variadic_templates
diff --git a/build/CMakeFiles/Makefile.cmake b/build/CMakeFiles/Makefile.cmake
new file mode 100644
index 0000000..42e502a
--- /dev/null
+++ b/build/CMakeFiles/Makefile.cmake
@@ -0,0 +1,45 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# The generator used is:
+set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")
+
+# The top level Makefile was generated from the following files:
+set(CMAKE_MAKEFILE_DEPENDS
+  "CMakeCache.txt"
+  "../CMakeLists.txt"
+  "CMakeFiles/3.10.2/CMakeCXXCompiler.cmake"
+  "CMakeFiles/3.10.2/CMakeSystem.cmake"
+  "../src/CMakeLists.txt"
+  "/usr/share/cmake-3.10/Modules/CMakeCXXInformation.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeCommonLanguageInclude.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeGenericSystem.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeLanguageInformation.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeSystemSpecificInformation.cmake"
+  "/usr/share/cmake-3.10/Modules/CMakeSystemSpecificInitialize.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/GNU-CXX.cmake"
+  "/usr/share/cmake-3.10/Modules/Compiler/GNU.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/Linux-GNU-CXX.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/Linux-GNU.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/Linux.cmake"
+  "/usr/share/cmake-3.10/Modules/Platform/UnixPaths.cmake"
+  )
+
+# The corresponding makefile is:
+set(CMAKE_MAKEFILE_OUTPUTS
+  "Makefile"
+  "CMakeFiles/cmake.check_cache"
+  )
+
+# Byproducts of CMake generate step:
+set(CMAKE_MAKEFILE_PRODUCTS
+  "CMakeFiles/CMakeDirectoryInformation.cmake"
+  "src/CMakeFiles/CMakeDirectoryInformation.cmake"
+  )
+
+# Dependency information for all targets:
+set(CMAKE_DEPEND_INFO_FILES
+  "CMakeFiles/logdbtest.dir/DependInfo.cmake"
+  "src/CMakeFiles/logdb.dir/DependInfo.cmake"
+  )
diff --git a/build/CMakeFiles/Makefile2 b/build/CMakeFiles/Makefile2
index 3d5e084..9f299e5 100644
--- a/build/CMakeFiles/Makefile2
+++ b/build/CMakeFiles/Makefile2
@@ -1,11 +1,21 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 # Default target executed when no arguments are given to make.
 default_target: all
 
 .PHONY : default_target
 
+# The main recursive all target
+all:
+
+.PHONY : all
+
+# The main recursive preinstall target
+preinstall:
+
+.PHONY : preinstall
+
 #=============================================================================
 # Special targets provided by cmake.
 
@@ -44,75 +54,65 @@ RM = /usr/bin/cmake -E remove -f
 EQUALS = =
 
 # The top-level source directory on which CMake was run.
-CMAKE_SOURCE_DIR = /home/shichen/workspace/opensource/log/logdb
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
 
 # The top-level build directory on which CMake was run.
-CMAKE_BINARY_DIR = /home/shichen/workspace/opensource/log/logdb/build
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb/build
 
 #=============================================================================
-# Directory level rules for the build root directory
+# Target rules for target CMakeFiles/logdbtest.dir
+
+# All Build rule for target.
+CMakeFiles/logdbtest.dir/all: src/CMakeFiles/logdb.dir/all
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/depend
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/build
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir=/home/shichen/ssd/opensource/logdb/build/CMakeFiles --progress-num=5,6 "Built target logdbtest"
+.PHONY : CMakeFiles/logdbtest.dir/all
 
-# The main recursive "all" target.
+# Include target in all.
 all: CMakeFiles/logdbtest.dir/all
-all: src/all
 
 .PHONY : all
 
-# The main recursive "preinstall" target.
-preinstall: src/preinstall
+# Build rule for subdir invocation for target.
+CMakeFiles/logdbtest.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/build/CMakeFiles 6
+	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/logdbtest.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/build/CMakeFiles 0
+.PHONY : CMakeFiles/logdbtest.dir/rule
+
+# Convenience name for target.
+logdbtest: CMakeFiles/logdbtest.dir/rule
+
+.PHONY : logdbtest
 
-.PHONY : preinstall
+# clean rule for target.
+CMakeFiles/logdbtest.dir/clean:
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/clean
+.PHONY : CMakeFiles/logdbtest.dir/clean
 
-# The main recursive "clean" target.
+# clean rule for target.
 clean: CMakeFiles/logdbtest.dir/clean
-clean: src/clean
 
 .PHONY : clean
 
 #=============================================================================
 # Directory level rules for directory src
 
-# Recursive "all" directory target.
+# Convenience name for "all" pass in the directory.
 src/all: src/CMakeFiles/logdb.dir/all
 
 .PHONY : src/all
 
-# Recursive "preinstall" directory target.
-src/preinstall:
-
-.PHONY : src/preinstall
-
-# Recursive "clean" directory target.
+# Convenience name for "clean" pass in the directory.
 src/clean: src/CMakeFiles/logdb.dir/clean
 
 .PHONY : src/clean
 
-#=============================================================================
-# Target rules for target CMakeFiles/logdbtest.dir
-
-# All Build rule for target.
-CMakeFiles/logdbtest.dir/all: src/CMakeFiles/logdb.dir/all
-	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/depend
-	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/build
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir=/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles --progress-num=3,4 "Built target logdbtest"
-.PHONY : CMakeFiles/logdbtest.dir/all
-
-# Build rule for subdir invocation for target.
-CMakeFiles/logdbtest.dir/rule: cmake_check_build_system
-	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles 4
-	$(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/logdbtest.dir/all
-	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles 0
-.PHONY : CMakeFiles/logdbtest.dir/rule
-
-# Convenience name for target.
-logdbtest: CMakeFiles/logdbtest.dir/rule
-
-.PHONY : logdbtest
+# Convenience name for "preinstall" pass in the directory.
+src/preinstall:
 
-# clean rule for target.
-CMakeFiles/logdbtest.dir/clean:
-	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/clean
-.PHONY : CMakeFiles/logdbtest.dir/clean
+.PHONY : src/preinstall
 
 #=============================================================================
 # Target rules for target src/CMakeFiles/logdb.dir
@@ -121,14 +121,19 @@ CMakeFiles/logdbtest.dir/clean:
 src/CMakeFiles/logdb.dir/all:
 	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/depend
 	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/build
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir=/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles --progress-num=1,2 "Built target logdb"
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir=/home/shichen/ssd/opensource/logdb/build/CMakeFiles --progress-num=1,2,3,4 "Built target logdb"
 .PHONY : src/CMakeFiles/logdb.dir/all
 
+# Include target in all.
+all: src/CMakeFiles/logdb.dir/all
+
+.PHONY : all
+
 # Build rule for subdir invocation for target.
 src/CMakeFiles/logdb.dir/rule: cmake_check_build_system
-	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles 2
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/build/CMakeFiles 4
 	$(MAKE) -f CMakeFiles/Makefile2 src/CMakeFiles/logdb.dir/all
-	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles 0
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/build/CMakeFiles 0
 .PHONY : src/CMakeFiles/logdb.dir/rule
 
 # Convenience name for target.
@@ -141,6 +146,11 @@ src/CMakeFiles/logdb.dir/clean:
 	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/clean
 .PHONY : src/CMakeFiles/logdb.dir/clean
 
+# clean rule for target.
+clean: src/CMakeFiles/logdb.dir/clean
+
+.PHONY : clean
+
 #=============================================================================
 # Special targets to cleanup operation of make.
 
@@ -148,6 +158,6 @@ src/CMakeFiles/logdb.dir/clean:
 # No rule that depends on this can have commands that come from listfiles
 # because they might be regenerated.
 cmake_check_build_system:
-	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
 .PHONY : cmake_check_build_system
 
diff --git a/build/CMakeFiles/TargetDirectories.txt b/build/CMakeFiles/TargetDirectories.txt
index 4917992..57fc136 100644
--- a/build/CMakeFiles/TargetDirectories.txt
+++ b/build/CMakeFiles/TargetDirectories.txt
@@ -1,6 +1,6 @@
-/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/rebuild_cache.dir
-/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/edit_cache.dir
-/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/logdbtest.dir
-/home/shichen/workspace/opensource/log/logdb/build/src/CMakeFiles/rebuild_cache.dir
-/home/shichen/workspace/opensource/log/logdb/build/src/CMakeFiles/edit_cache.dir
-/home/shichen/workspace/opensource/log/logdb/build/src/CMakeFiles/logdb.dir
+/home/shichen/ssd/opensource/logdb/build/CMakeFiles/rebuild_cache.dir
+/home/shichen/ssd/opensource/logdb/build/CMakeFiles/logdbtest.dir
+/home/shichen/ssd/opensource/logdb/build/CMakeFiles/edit_cache.dir
+/home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/rebuild_cache.dir
+/home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/logdb.dir
+/home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/edit_cache.dir
diff --git a/build/CMakeFiles/feature_tests.bin b/build/CMakeFiles/feature_tests.bin
new file mode 100755
index 0000000000000000000000000000000000000000..18b0c801d40b59a2ff9a6657a25dee54acb34deb
GIT binary patch
literal 12312
zcmeHNZ)_Y#6`!-?#7*O~<NkA#wAq#hC6rw4wn^MSp+5i18aZi6oi>H0%X)Y3yz1Sa
z+1pF)h(b}Cs%{C5C_)iP2vr~fLeMWj#fQpKO2h{~q<koqT0}quQfO7vKfx_+j^CS|
zcXxZYwkwrS$Rpjpd2il(^XAQ)*|#_I)uGYhrbI$;X%?Rmgw3r8DSfJ;Ym2G?^od?^
z5uO{wda)8XvG(CdrB6Pqa9*iq*s9u_0ZFd6DJ0ax4T_H;TS%})wZ(xm?ID$+5Sk>A
z9N9W|l|%tGSz)LtJ2orGa)gqcxLUFUYGFmeS!EbQ9v_X3eq%~sJsb?R2!_N<<*u`V
zP4(kRi8jF7L$YAVa-V~ov{SV&1v(VNUe(`1e(6y5GgQMBH{{&$?Kj_$v$y74uQauF
zs(1U=?Kh{2h1895+@zm)ckS6Hd!qSf*OJYb;zu-UUwdJ-`?bH@_rCechVS0=;M0eG
z=N~yhviw8!BbQ!qYBAjFK<kX5kAbGe(5(gN7lVFn48MRsEE@iHVHnnwX=Gf_%(;gg
zpwwg(1Je(Tyy<#k*XT(9fN^8$#?&@pjEwCzY{z%9ZZUBDvE2i?g6E8x<2jPd<_n&Z
zG(y%`MrlvzUG{MT-Xs6<JeStF7tsuSTG`HV&+$5^7S+637fgRv(OWf5N-~}Cmp6uV
ziaqL&%b6NF+eB^WYUnioT;^)%9MjY`Uqi25_xj=2TlFVfHm%o$eq=UiDxcO5ztDP8
zl()ULP7~!#@8H?Ku@ALQuw;&LKRs`Z%)I!3KJyp-@L%Wd8XG;@@&wG*kG5SR!Op*d
zv3%JnNWas*agbVez6NBUezfJ!fch=-`pntjN_71lLeX{Gf%2J5s(s_5vWo*Jsn;qF
z`5zPG(QVI2HCrw~UO#c6S)ZBHPn^3$Pn^<UybyFjp{W$EA%zR+dt~Q*U=yVq^us%M
zP;DRCvqpb%=dHlbwUx`|b2=WUT6%yd$ec&Wu(wY_CB{SS2VTp7gK9Gmf1uBl=AIn-
zK(|g~h(7~o`!82CwLd>glHgC@o4#jc<`3z8Y4~c>^H)e$Y$bSidgjBCne(Gt&dRws
z@nQ41?1ge!Kk`PP^}NFNkIuY5I&*$-=FN2Z(pUAvClmTDe=Plj=IRRv()Xtiq#sBd
zCy!PA_4Y~loaR=}CdE{3^w3D6W%a=R{l@T6dTig`p<BDHsVT$EX0b@jz`?T0n5A4`
zxSkuhaxwbF82+4V7LCBkPv#&L&ye-Zg&GQ(7?nZbyW^#JZQKU)CVj_3pLUFfQcy60
z=}D)tX&f7iKaEWV+l85nG0Q4=*h;1*{YF_dp(QApIRn*$j$d@a+{kA;RxZAGZZS+)
zxUe96ZWZ8B2h-p?LCN>zXkxnxCn;0%tN_+jX2LN2?85wxZLq|mO!>k=XNdr?ogBrB
z>t)F)#lSCFK_M<uh!L~3Xvc2W4UD2QY5Hco62~j$jZDFR$n<T5fR!W8_*uXl=3EQ<
z7M&~1r{mdVmhYmnq)voQ)yXlwlP|8unI&%<uI+e%n{l0(*vdK{1tea1_7V=4oUUc$
z%>1|=x3FAq!tt?Ymz)vTL-yeqo|$)wlcp87dKc^@Y>=iJmN|(SjTJ9gSS+*_mI_R~
zx3h+P#IGE$;7nQ0WYFkZkD?AiU>SKQKkoR_rWm$TE;kv(cpf3{`<R+W5#RK(4n<pB
z(?iHCeDd+aTZ!*vkeYawV|)pF22K2;(eFDsa|$eS8O85FHJbq<)y7go?8jK=W+wsz
z*5@2!+&8TUoggMu{exz%L>r8<GKQsycr0X;V;lQXem9Fn$B&sAIEZGI)@)RF54~yl
zol&jOvd?3Wh}%7a3EweoL<j<^(U8D5UBq&BiQTf~xmLk;7MU_|V7~L!B`9~7#tus!
z;vMsE(T)b8*!MsQZds(SgQo9Nrdn}8)JgJnEO~5-ZPW4#i!rb}i>vX9PpoggjlOXx
zuk1ZvE<X;a13nA5A8<e5_`l2L-vT}kcn)wLuv;ae^nF1kacHkdOm!sIuUXZ4EU~JC
z=o|2xf45w|o)}b#=NIBSv=jf2z%O&@WXEu_>$B|_Kh*k&xMSUIpStO~Ye@ykBV7{5
zz{fc<(Mk4x{JsgBuOUJ@+3{G@K-<duVGvM~`7(aT(e40>{$$5fP5sHPZ!`}jwWBNg
zlbgTZq9?l_Td5~|53kyt?DLbo>1200xw${7fe-xs$yS-?zX0)B=vh2tqE42}vImwu
zu<U_l4=j6N*#pZSSoXlO2bMjs?15zu{J(pE&w2P<M}00=&TiHy2RyeTth6coTk3G}
zN`>?J(RzjRH!q#DQQ>nW`u?TD?eAVF7YIMDK2rHiM^}eIsvGf~YN!7Ks5~43LFaE&
zx<Vi>Q;-3lDb1>LqgAS5UNx{Cvx<&GF<DsO)e2|6|CB>};U`JL35T@*Wu*@XDH3Nt
z&MEwqYJX4RY?o61zXN<8{V_H2dETypfm^lB`^HONP||j!wxzna-c*uU&sTbSQ{6Xj
z38^2YyJkccpX=B1H{(o)&%>kiW)Z~vdC`m$Wsa99e@i7!qV$!5<0(pCC3s$<^j5+1
z8Kqw&IBuf!)q>YYlzy=|t=3JHzDAshrMFe?Sw#7hg4bJ=-Y&k+3#6u@8UOz9eSsP>
z&ezw9m(@LjD7~|C{~=1hq_S?Kbo{#&6KBm>eZ0=1{Fe)%X|*I-Zx&aGj#xUczN!eV
zrxoH~<tint(f-sV+Jwd%hhm^%68(#H^lKEI_dCTdcA%1|v4{GjGK^nBH2NVAI_c;A
zlX$62<CnnA0^ScL5s%~e#o7N8$=@z!)jYnWHmHTh`zy)6R=le2wE(S@IQ_qot(^_?
z_!8&|`j@h99{;5H>+OF_(i`Kd1%@VK=6yZro$${wH7;Jp*MqJ}UC~ED(i`Js7w8@0
z@`gCs1bU}vTo-#JJ*u0qywX!2hlfDd8rj7R=xduU7rYNL%eRRxs_TxI@ee_#@oH+k
zjuLngumf?`rD?1}!lL5mdsY13^DjUr{`z%sLh-+^;`th-?G)%_XFdP#L67zr3cL>b
zwMw=Y{2cU75wnk3eozcbnM}$O)oUq6kT)#4m{P>06uV$#bA@pni`jI<iId<d!H2ze
zYRC3ldgGbsN{owBUEiF>iAvy4iwvEX7<MV2pN2>c7M{vQSRIp2=y1|d42mh7z6j&<
zqrI7sN>&Z;P46BuhV~2^xG58rw}mly-=6gDk%4H7ypjVF?jRXMy3(Kz?iI$a(L4Lo
zqsE=X!*>sj8Dr`G(IL_*FY;K$k{rq6S9cuS3``cO-u>z8i(LLOh%3C{1K#LuAHyyd
zj0w}T=_b&~o#3)v&%lWchEuhK?lu4)FBX*=dBeysaFK|eK{t$IuMI^nDn(5bsp51#
zFvkG{KZFxpb8(5lpA;#t5ICuH|H#(B%qlGFl~Us+7uUjETcik^FpCo+Wlww17s9{~
zTh#S~2x6d(P7z5!q~zdIles|9Bb6<nLiZO$ib4sT1?lCKGogZK!iGF!p?nx{p#;~V
z+|0Wc%%Mq2!FeKu2+kuaYuCufsZ(BzC5CrKSU3-2$a%49mb_di_zC>z)xh$cFEP~6
zR$F*qVp<O>wep--F}#i$6|9#Z1RY071@52oFNSPCziv5SX0>}zp<JEipHmfvd?Aar
zPx2GXb0%;PXp}RvJm+%^`Fj8?vXGA2@&FLZ%~_uFK8F0A!}c>D!v`Txxjy5ZA2QTb
zXZ7|gvN(ha`IO~3k7PKj7`gxY@jr@o8k2gxRPs&EJFigk4C?3ai8^`COBu?uOcn-Y
zoZ(Y-@|?diWP4c!;|wYPskNWqdkmkcn=tN|^?k2Sp7UXb{N2X<_2d76l4t*O-puek
ze;6tS8Y@!pr+{Q4%X5Cs@b)_X`u=}iC(n5}!`8a-v)@?l3#d>|%ioQhpYc82dVa<k
zo`x)?j4aRJ<MUU6h{Aj!R>hhADjF#ESiX`sst@E@Wk1I!%kexu4OwDgdHznA-3TH|
zpL|vyEYI*Pnrh`Md7Ku?a6hbp<rx1bDn#S{IbZ6~LXLX=y6F&eU?W<0$X<D}e9d)u
z*~ap<kYlGJj7pytVyD%@r~gYR7i4>Q|D*V3+e3-)+40E`w$>@<ewlYIDsl2%n?sKG
Km{Gxc`TqiBL+q3Q

literal 0
HcmV?d00001

diff --git a/build/CMakeFiles/feature_tests.cxx b/build/CMakeFiles/feature_tests.cxx
new file mode 100644
index 0000000..b93418c
--- /dev/null
+++ b/build/CMakeFiles/feature_tests.cxx
@@ -0,0 +1,405 @@
+
+  const char features[] = {"\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 500 && __cplusplus >= 201402L
+"1"
+#else
+"0"
+#endif
+"cxx_aggregate_default_initializers\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_alias_templates\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_alignas\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_alignof\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_attributes\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_attribute_deprecated\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_auto_type\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_binary_literals\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_constexpr\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_contextual_conversions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_decltype\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_decltype_auto\n"
+"CXX_FEATURE:"
+#if ((__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) >= 40801) && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_decltype_incomplete_return_types\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_default_function_template_args\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_defaulted_functions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_defaulted_move_initializers\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_delegating_constructors\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_deleted_functions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_digit_separators\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_enum_forward_declarations\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_explicit_conversions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_extended_friend_declarations\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_extern_templates\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_final\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_func_identifier\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_generalized_initializers\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_generic_lambdas\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_inheriting_constructors\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_inline_namespaces\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_lambdas\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_lambda_init_captures\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_local_type_template_args\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_long_long_type\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_noexcept\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_nonstatic_member_init\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_nullptr\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_override\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_range_for\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_raw_string_literals\n"
+"CXX_FEATURE:"
+#if ((__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) >= 40801) && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_reference_qualified_functions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 500 && __cplusplus >= 201402L
+"1"
+#else
+"0"
+#endif
+"cxx_relaxed_constexpr\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 409 && __cplusplus > 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_return_type_deduction\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_right_angle_brackets\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_rvalue_references\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_sizeof_member\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_static_assert\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_strong_enums\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && __cplusplus
+"1"
+#else
+"0"
+#endif
+"cxx_template_template_parameters\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 408 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_thread_local\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_trailing_return_types\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_unicode_literals\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_uniform_initialization\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 406 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_unrestricted_unions\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407 && __cplusplus >= 201103L
+"1"
+#else
+"0"
+#endif
+"cxx_user_literals\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 500 && __cplusplus >= 201402L
+"1"
+#else
+"0"
+#endif
+"cxx_variable_templates\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_variadic_macros\n"
+"CXX_FEATURE:"
+#if (__GNUC__ * 100 + __GNUC_MINOR__) >= 404 && (__cplusplus >= 201103L || (defined(__GXX_EXPERIMENTAL_CXX0X__) && __GXX_EXPERIMENTAL_CXX0X__))
+"1"
+#else
+"0"
+#endif
+"cxx_variadic_templates\n"
+
+};
+
+int main(int argc, char** argv) { (void)argv; return features[argc]; }
diff --git a/build/CMakeFiles/logdbtest.dir/CXX.includecache b/build/CMakeFiles/logdbtest.dir/CXX.includecache
index 66af2c8..9d3b06d 100644
--- a/build/CMakeFiles/logdbtest.dir/CXX.includecache
+++ b/build/CMakeFiles/logdbtest.dir/CXX.includecache
@@ -6,15 +6,43 @@
 
 #IncludeRegexTransform: 
 
-../src/log.h
+../include/appender.h
+string
+-
+layout.h
+../include/layout.h
+loggingevent.h
+../include/loggingevent.h
+
+../include/config.h
+
+../include/layout.h
+string
+-
+loggingevent.h
+../include/loggingevent.h
+
+../include/log.h
 iostream
 -
+vector
+-
 time.h
 -
+config.h
+../include/config.h
+appender.h
+../include/appender.h
+loggingevent.h
+../include/loggingevent.h
+
+../include/loggingevent.h
 
-/home/shichen/workspace/opensource/log/logdb/testlogdb.cpp
+/home/shichen/ssd/opensource/logdb/testlogdb.cpp
 iostream
 -
 log.h
-/home/shichen/workspace/opensource/log/logdb/log.h
+/home/shichen/ssd/opensource/logdb/log.h
+layout.h
+/home/shichen/ssd/opensource/logdb/layout.h
 
diff --git a/build/CMakeFiles/logdbtest.dir/DependInfo.cmake b/build/CMakeFiles/logdbtest.dir/DependInfo.cmake
index e11bc24..97d9993 100644
--- a/build/CMakeFiles/logdbtest.dir/DependInfo.cmake
+++ b/build/CMakeFiles/logdbtest.dir/DependInfo.cmake
@@ -4,18 +4,19 @@ set(CMAKE_DEPENDS_LANGUAGES
   )
 # The set of files for implicit dependencies of each language:
 set(CMAKE_DEPENDS_CHECK_CXX
-  "/home/shichen/workspace/opensource/log/logdb/testlogdb.cpp" "/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
+  "/home/shichen/ssd/opensource/logdb/testlogdb.cpp" "/home/shichen/ssd/opensource/logdb/build/CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
   )
 set(CMAKE_CXX_COMPILER_ID "GNU")
 
 # The include file search paths:
 set(CMAKE_CXX_TARGET_INCLUDE_PATH
+  "../include"
   "../src"
   )
 
 # Targets to which this target links.
 set(CMAKE_TARGET_LINKED_INFO_FILES
-  "/home/shichen/workspace/opensource/log/logdb/build/src/CMakeFiles/logdb.dir/DependInfo.cmake"
+  "/home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/logdb.dir/DependInfo.cmake"
   )
 
 # Fortran module output directory.
diff --git a/build/CMakeFiles/logdbtest.dir/build.make b/build/CMakeFiles/logdbtest.dir/build.make
index fc3e6cd..a8f88e6 100644
--- a/build/CMakeFiles/logdbtest.dir/build.make
+++ b/build/CMakeFiles/logdbtest.dir/build.make
@@ -1,5 +1,5 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 # Delete rule output on recipe failure.
 .DELETE_ON_ERROR:
@@ -43,10 +43,10 @@ RM = /usr/bin/cmake -E remove -f
 EQUALS = =
 
 # The top-level source directory on which CMake was run.
-CMAKE_SOURCE_DIR = /home/shichen/workspace/opensource/log/logdb
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
 
 # The top-level build directory on which CMake was run.
-CMAKE_BINARY_DIR = /home/shichen/workspace/opensource/log/logdb/build
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb/build
 
 # Include any dependencies generated for this target.
 include CMakeFiles/logdbtest.dir/depend.make
@@ -59,16 +59,27 @@ include CMakeFiles/logdbtest.dir/flags.make
 
 CMakeFiles/logdbtest.dir/testlogdb.cpp.o: CMakeFiles/logdbtest.dir/flags.make
 CMakeFiles/logdbtest.dir/testlogdb.cpp.o: ../testlogdb.cpp
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
-	/usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdbtest.dir/testlogdb.cpp.o -c /home/shichen/workspace/opensource/log/logdb/testlogdb.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/ssd/opensource/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
+	/usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdbtest.dir/testlogdb.cpp.o -c /home/shichen/ssd/opensource/logdb/testlogdb.cpp
 
 CMakeFiles/logdbtest.dir/testlogdb.cpp.i: cmake_force
 	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/logdbtest.dir/testlogdb.cpp.i"
-	/usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/workspace/opensource/log/logdb/testlogdb.cpp > CMakeFiles/logdbtest.dir/testlogdb.cpp.i
+	/usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/ssd/opensource/logdb/testlogdb.cpp > CMakeFiles/logdbtest.dir/testlogdb.cpp.i
 
 CMakeFiles/logdbtest.dir/testlogdb.cpp.s: cmake_force
 	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/logdbtest.dir/testlogdb.cpp.s"
-	/usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/workspace/opensource/log/logdb/testlogdb.cpp -o CMakeFiles/logdbtest.dir/testlogdb.cpp.s
+	/usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/ssd/opensource/logdb/testlogdb.cpp -o CMakeFiles/logdbtest.dir/testlogdb.cpp.s
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o.requires:
+
+.PHONY : CMakeFiles/logdbtest.dir/testlogdb.cpp.o.requires
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o.provides: CMakeFiles/logdbtest.dir/testlogdb.cpp.o.requires
+	$(MAKE) -f CMakeFiles/logdbtest.dir/build.make CMakeFiles/logdbtest.dir/testlogdb.cpp.o.provides.build
+.PHONY : CMakeFiles/logdbtest.dir/testlogdb.cpp.o.provides
+
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o.provides.build: CMakeFiles/logdbtest.dir/testlogdb.cpp.o
+
 
 # Object files for target logdbtest
 logdbtest_OBJECTS = \
@@ -81,7 +92,7 @@ logdbtest: CMakeFiles/logdbtest.dir/testlogdb.cpp.o
 logdbtest: CMakeFiles/logdbtest.dir/build.make
 logdbtest: src/liblogdb.so
 logdbtest: CMakeFiles/logdbtest.dir/link.txt
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) "Linking CXX executable logdbtest"
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/shichen/ssd/opensource/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) "Linking CXX executable logdbtest"
 	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/logdbtest.dir/link.txt --verbose=$(VERBOSE)
 
 # Rule to build all files generated by this target.
@@ -89,11 +100,15 @@ CMakeFiles/logdbtest.dir/build: logdbtest
 
 .PHONY : CMakeFiles/logdbtest.dir/build
 
+CMakeFiles/logdbtest.dir/requires: CMakeFiles/logdbtest.dir/testlogdb.cpp.o.requires
+
+.PHONY : CMakeFiles/logdbtest.dir/requires
+
 CMakeFiles/logdbtest.dir/clean:
 	$(CMAKE_COMMAND) -P CMakeFiles/logdbtest.dir/cmake_clean.cmake
 .PHONY : CMakeFiles/logdbtest.dir/clean
 
 CMakeFiles/logdbtest.dir/depend:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/shichen/workspace/opensource/log/logdb /home/shichen/workspace/opensource/log/logdb /home/shichen/workspace/opensource/log/logdb/build /home/shichen/workspace/opensource/log/logdb/build /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/logdbtest.dir/DependInfo.cmake --color=$(COLOR)
+	cd /home/shichen/ssd/opensource/logdb/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb/build /home/shichen/ssd/opensource/logdb/build /home/shichen/ssd/opensource/logdb/build/CMakeFiles/logdbtest.dir/DependInfo.cmake --color=$(COLOR)
 .PHONY : CMakeFiles/logdbtest.dir/depend
 
diff --git a/build/CMakeFiles/logdbtest.dir/cmake_clean.cmake b/build/CMakeFiles/logdbtest.dir/cmake_clean.cmake
index 9c77692..c4d095a 100644
--- a/build/CMakeFiles/logdbtest.dir/cmake_clean.cmake
+++ b/build/CMakeFiles/logdbtest.dir/cmake_clean.cmake
@@ -1,7 +1,7 @@
 file(REMOVE_RECURSE
   "CMakeFiles/logdbtest.dir/testlogdb.cpp.o"
-  "logdbtest"
   "logdbtest.pdb"
+  "logdbtest"
 )
 
 # Per-language clean rules from dependency scanning.
diff --git a/build/CMakeFiles/logdbtest.dir/depend.internal b/build/CMakeFiles/logdbtest.dir/depend.internal
index ca0c922..5b58556 100644
--- a/build/CMakeFiles/logdbtest.dir/depend.internal
+++ b/build/CMakeFiles/logdbtest.dir/depend.internal
@@ -1,6 +1,10 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 CMakeFiles/logdbtest.dir/testlogdb.cpp.o
- ../src/log.h
- /home/shichen/workspace/opensource/log/logdb/testlogdb.cpp
+ ../include/appender.h
+ ../include/config.h
+ ../include/layout.h
+ ../include/log.h
+ ../include/loggingevent.h
+ /home/shichen/ssd/opensource/logdb/testlogdb.cpp
diff --git a/build/CMakeFiles/logdbtest.dir/depend.make b/build/CMakeFiles/logdbtest.dir/depend.make
index d6a0e93..978eb83 100644
--- a/build/CMakeFiles/logdbtest.dir/depend.make
+++ b/build/CMakeFiles/logdbtest.dir/depend.make
@@ -1,6 +1,10 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
-CMakeFiles/logdbtest.dir/testlogdb.cpp.o: ../src/log.h
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o: ../include/appender.h
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o: ../include/config.h
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o: ../include/layout.h
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o: ../include/log.h
+CMakeFiles/logdbtest.dir/testlogdb.cpp.o: ../include/loggingevent.h
 CMakeFiles/logdbtest.dir/testlogdb.cpp.o: ../testlogdb.cpp
 
diff --git a/build/CMakeFiles/logdbtest.dir/flags.make b/build/CMakeFiles/logdbtest.dir/flags.make
index f7985a3..edd152d 100644
--- a/build/CMakeFiles/logdbtest.dir/flags.make
+++ b/build/CMakeFiles/logdbtest.dir/flags.make
@@ -1,10 +1,10 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 # compile CXX with /usr/bin/c++
-CXX_FLAGS =  
+CXX_FLAGS = -g  
 
 CXX_DEFINES = 
 
-CXX_INCLUDES = -I/home/shichen/workspace/opensource/log/logdb/src 
+CXX_INCLUDES = -I/home/shichen/ssd/opensource/logdb/include -I/home/shichen/ssd/opensource/logdb/src 
 
diff --git a/build/CMakeFiles/logdbtest.dir/link.txt b/build/CMakeFiles/logdbtest.dir/link.txt
index 9812574..edd362f 100644
--- a/build/CMakeFiles/logdbtest.dir/link.txt
+++ b/build/CMakeFiles/logdbtest.dir/link.txt
@@ -1 +1 @@
-/usr/bin/c++     CMakeFiles/logdbtest.dir/testlogdb.cpp.o  -o logdbtest  -Wl,-rpath,/home/shichen/workspace/opensource/log/logdb/build/src src/liblogdb.so 
+/usr/bin/c++  -g   CMakeFiles/logdbtest.dir/testlogdb.cpp.o  -o logdbtest -Wl,-rpath,/home/shichen/ssd/opensource/logdb/build/src src/liblogdb.so 
diff --git a/build/CMakeFiles/logdbtest.dir/progress.make b/build/CMakeFiles/logdbtest.dir/progress.make
index 8c8fb6f..3a86673 100644
--- a/build/CMakeFiles/logdbtest.dir/progress.make
+++ b/build/CMakeFiles/logdbtest.dir/progress.make
@@ -1,3 +1,3 @@
-CMAKE_PROGRESS_1 = 3
-CMAKE_PROGRESS_2 = 4
+CMAKE_PROGRESS_1 = 5
+CMAKE_PROGRESS_2 = 6
 
diff --git a/build/CMakeFiles/progress.marks b/build/CMakeFiles/progress.marks
index b8626c4..1e8b314 100644
--- a/build/CMakeFiles/progress.marks
+++ b/build/CMakeFiles/progress.marks
@@ -1 +1 @@
-4
+6
diff --git a/build/Makefile b/build/Makefile
index 05ebca9..4802ae3 100644
--- a/build/Makefile
+++ b/build/Makefile
@@ -1,5 +1,5 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 # Default target executed when no arguments are given to make.
 default_target: all
@@ -48,10 +48,10 @@ RM = /usr/bin/cmake -E remove -f
 EQUALS = =
 
 # The top-level source directory on which CMake was run.
-CMAKE_SOURCE_DIR = /home/shichen/workspace/opensource/log/logdb
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
 
 # The top-level build directory on which CMake was run.
-CMAKE_BINARY_DIR = /home/shichen/workspace/opensource/log/logdb/build
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb/build
 
 #=============================================================================
 # Targets provided globally by CMake.
@@ -59,7 +59,7 @@ CMAKE_BINARY_DIR = /home/shichen/workspace/opensource/log/logdb/build
 # Special rule for the target rebuild_cache
 rebuild_cache:
 	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
-	/usr/bin/cmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
+	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
 .PHONY : rebuild_cache
 
 # Special rule for the target rebuild_cache
@@ -80,9 +80,9 @@ edit_cache/fast: edit_cache
 
 # The main all target
 all: cmake_check_build_system
-	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles/progress.marks
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/build/CMakeFiles /home/shichen/ssd/opensource/logdb/build/CMakeFiles/progress.marks
 	$(MAKE) -f CMakeFiles/Makefile2 all
-	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles 0
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/build/CMakeFiles 0
 .PHONY : all
 
 # The main clean target
@@ -107,7 +107,7 @@ preinstall/fast:
 
 # clear depends
 depend:
-	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
 .PHONY : depend
 
 #=============================================================================
@@ -170,8 +170,8 @@ help:
 	@echo "... clean"
 	@echo "... depend"
 	@echo "... rebuild_cache"
-	@echo "... edit_cache"
 	@echo "... logdbtest"
+	@echo "... edit_cache"
 	@echo "... logdb"
 	@echo "... testlogdb.o"
 	@echo "... testlogdb.i"
@@ -187,6 +187,6 @@ help:
 # No rule that depends on this can have commands that come from listfiles
 # because they might be regenerated.
 cmake_check_build_system:
-	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
+	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
 .PHONY : cmake_check_build_system
 
diff --git a/build/cmake_install.cmake b/build/cmake_install.cmake
index 1b24d58..71efbd7 100644
--- a/build/cmake_install.cmake
+++ b/build/cmake_install.cmake
@@ -1,4 +1,4 @@
-# Install script for directory: /home/shichen/workspace/opensource/log/logdb
+# Install script for directory: /home/shichen/ssd/opensource/logdb
 
 # Set the install prefix
 if(NOT DEFINED CMAKE_INSTALL_PREFIX)
@@ -38,8 +38,9 @@ if(NOT DEFINED CMAKE_CROSSCOMPILING)
 endif()
 
 if(NOT CMAKE_INSTALL_LOCAL_ONLY)
-  # Include the install script for the subdirectory.
-  include("/home/shichen/workspace/opensource/log/logdb/build/src/cmake_install.cmake")
+  # Include the install script for each subdirectory.
+  include("/home/shichen/ssd/opensource/logdb/build/src/cmake_install.cmake")
+
 endif()
 
 if(CMAKE_INSTALL_COMPONENT)
@@ -50,5 +51,5 @@ endif()
 
 string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
        "${CMAKE_INSTALL_MANIFEST_FILES}")
-file(WRITE "/home/shichen/workspace/opensource/log/logdb/build/${CMAKE_INSTALL_MANIFEST}"
+file(WRITE "/home/shichen/ssd/opensource/logdb/build/${CMAKE_INSTALL_MANIFEST}"
      "${CMAKE_INSTALL_MANIFEST_CONTENT}")
diff --git a/build/compile_commands.json b/build/compile_commands.json
index a8f1328..36b4cef 100644
--- a/build/compile_commands.json
+++ b/build/compile_commands.json
@@ -1,19 +1,22 @@
 [
 {
-  "directory": "/home/shichen/workspace/opensource/log/logdb/build",
-  "command": "/usr/bin/c++   -I../include -I../src  -g   -o CMakeFiles/logdbtest.dir/testlogdb.cpp.o -c /home/shichen/workspace/opensource/log/logdb/testlogdb.cpp",
-  "file": "/home/shichen/workspace/opensource/log/logdb/testlogdb.cpp"
+  "directory": "/home/shichen/ssd/opensource/logdb/build",
+  "command": "/usr/bin/c++   -I/home/shichen/ssd/opensource/logdb/include -I/home/shichen/ssd/opensource/logdb/src  -g   -o CMakeFiles/logdbtest.dir/testlogdb.cpp.o -c /home/shichen/ssd/opensource/logdb/testlogdb.cpp",
+  "file": "/home/shichen/ssd/opensource/logdb/testlogdb.cpp"
 },
-
 {
-  "directory": "/home/shichen/workspace/opensource/log/logdb/build",
-  "command": "/usr/bin/c++  -Dlogdb_EXPORTS -I../include -I../src/./appender.cpp -I../src/./log.cpp/../include  -g -fPIC   -o src/CMakeFiles/logdb.dir/appender.cpp.o -c /home/shichen/workspace/opensource/log/logdb/src/appender.cpp",
-  "file": "/home/shichen/workspace/opensource/log/logdb/src/appender.cpp"
+  "directory": "/home/shichen/ssd/opensource/logdb/build/src",
+  "command": "/usr/bin/c++  -Dlogdb_EXPORTS -I/home/shichen/ssd/opensource/logdb/include  -g -fPIC   -o CMakeFiles/logdb.dir/appender.cpp.o -c /home/shichen/ssd/opensource/logdb/src/appender.cpp",
+  "file": "/home/shichen/ssd/opensource/logdb/src/appender.cpp"
 },
-
 {
-  "directory": "/home/shichen/workspace/opensource/log/logdb/build",
-  "command": "/usr/bin/c++  -Dlogdb_EXPORTS -I../include -I../src/./appender.cpp -I../src/./log.cpp/../include  -g -fPIC   -o src/CMakeFiles/logdb.dir/log.cpp.o -c /home/shichen/workspace/opensource/log/logdb/src/log.cpp",
-  "file": "/home/shichen/workspace/opensource/log/logdb/src/log.cpp"
+  "directory": "/home/shichen/ssd/opensource/logdb/build/src",
+  "command": "/usr/bin/c++  -Dlogdb_EXPORTS -I/home/shichen/ssd/opensource/logdb/include  -g -fPIC   -o CMakeFiles/logdb.dir/layout.cpp.o -c /home/shichen/ssd/opensource/logdb/src/layout.cpp",
+  "file": "/home/shichen/ssd/opensource/logdb/src/layout.cpp"
+},
+{
+  "directory": "/home/shichen/ssd/opensource/logdb/build/src",
+  "command": "/usr/bin/c++  -Dlogdb_EXPORTS -I/home/shichen/ssd/opensource/logdb/include  -g -fPIC   -o CMakeFiles/logdb.dir/log.cpp.o -c /home/shichen/ssd/opensource/logdb/src/log.cpp",
+  "file": "/home/shichen/ssd/opensource/logdb/src/log.cpp"
 }
 ]
\ No newline at end of file
diff --git a/build/src/CMakeFiles/CMakeDirectoryInformation.cmake b/build/src/CMakeFiles/CMakeDirectoryInformation.cmake
index 7deb87f..5abc81a 100644
--- a/build/src/CMakeFiles/CMakeDirectoryInformation.cmake
+++ b/build/src/CMakeFiles/CMakeDirectoryInformation.cmake
@@ -1,9 +1,9 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 # Relative path conversion top directories.
-set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/shichen/workspace/opensource/log/logdb")
-set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/shichen/workspace/opensource/log/logdb/build")
+set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/shichen/ssd/opensource/logdb")
+set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/shichen/ssd/opensource/logdb/build")
 
 # Force unix paths in dependencies.
 set(CMAKE_FORCE_UNIX_PATHS 1)
diff --git a/build/src/CMakeFiles/logdb.dir/CXX.includecache b/build/src/CMakeFiles/logdb.dir/CXX.includecache
index 11ee768..f626f70 100644
--- a/build/src/CMakeFiles/logdb.dir/CXX.includecache
+++ b/build/src/CMakeFiles/logdb.dir/CXX.includecache
@@ -6,19 +6,65 @@
 
 #IncludeRegexTransform: 
 
-/home/shichen/workspace/opensource/log/logdb/src/log.cpp
-log.h
-/home/shichen/workspace/opensource/log/logdb/src/log.h
-unistd.h
+../include/appender.h
+string
+-
+layout.h
+../include/layout.h
+loggingevent.h
+../include/loggingevent.h
+
+../include/config.h
+
+../include/layout.h
+string
+-
+loggingevent.h
+../include/loggingevent.h
+
+../include/log.h
+iostream
+-
+vector
 -
 time.h
 -
+config.h
+../include/config.h
+appender.h
+../include/appender.h
+loggingevent.h
+../include/loggingevent.h
+
+../include/loggingevent.h
+
+/home/shichen/ssd/opensource/logdb/src/appender.cpp
+iostream
+-
 string
 -
+log.h
+/home/shichen/ssd/opensource/logdb/src/log.h
+appender.h
+/home/shichen/ssd/opensource/logdb/src/appender.h
+loggingevent.h
+/home/shichen/ssd/opensource/logdb/src/loggingevent.h
 
-/home/shichen/workspace/opensource/log/logdb/src/log.h
+/home/shichen/ssd/opensource/logdb/src/layout.cpp
 iostream
 -
+layout.h
+/home/shichen/ssd/opensource/logdb/src/layout.h
+
+/home/shichen/ssd/opensource/logdb/src/log.cpp
+log.h
+/home/shichen/ssd/opensource/logdb/src/log.h
+unistd.h
+-
 time.h
 -
+string
+-
+algorithm
+-
 
diff --git a/build/src/CMakeFiles/logdb.dir/DependInfo.cmake b/build/src/CMakeFiles/logdb.dir/DependInfo.cmake
index 8053389..dd99067 100644
--- a/build/src/CMakeFiles/logdb.dir/DependInfo.cmake
+++ b/build/src/CMakeFiles/logdb.dir/DependInfo.cmake
@@ -4,17 +4,15 @@ set(CMAKE_DEPENDS_LANGUAGES
   )
 # The set of files for implicit dependencies of each language:
 set(CMAKE_DEPENDS_CHECK_CXX
-  "/home/shichen/workspace/opensource/log/logdb/src/log.cpp" "/home/shichen/workspace/opensource/log/logdb/build/src/CMakeFiles/logdb.dir/log.cpp.o"
+  "/home/shichen/ssd/opensource/logdb/src/appender.cpp" "/home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/logdb.dir/appender.cpp.o"
+  "/home/shichen/ssd/opensource/logdb/src/layout.cpp" "/home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/logdb.dir/layout.cpp.o"
+  "/home/shichen/ssd/opensource/logdb/src/log.cpp" "/home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/logdb.dir/log.cpp.o"
   )
 set(CMAKE_CXX_COMPILER_ID "GNU")
 
-# Preprocessor definitions for this target.
-set(CMAKE_TARGET_DEFINITIONS_CXX
-  "logdb_EXPORTS"
-  )
-
 # The include file search paths:
 set(CMAKE_CXX_TARGET_INCLUDE_PATH
+  "../include"
   )
 
 # Targets to which this target links.
diff --git a/build/src/CMakeFiles/logdb.dir/build.make b/build/src/CMakeFiles/logdb.dir/build.make
index 4e1775e..7c34f20 100644
--- a/build/src/CMakeFiles/logdb.dir/build.make
+++ b/build/src/CMakeFiles/logdb.dir/build.make
@@ -1,5 +1,5 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 # Delete rule output on recipe failure.
 .DELETE_ON_ERROR:
@@ -43,10 +43,10 @@ RM = /usr/bin/cmake -E remove -f
 EQUALS = =
 
 # The top-level source directory on which CMake was run.
-CMAKE_SOURCE_DIR = /home/shichen/workspace/opensource/log/logdb
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
 
 # The top-level build directory on which CMake was run.
-CMAKE_BINARY_DIR = /home/shichen/workspace/opensource/log/logdb/build
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb/build
 
 # Include any dependencies generated for this target.
 include src/CMakeFiles/logdb.dir/depend.make
@@ -57,42 +57,111 @@ include src/CMakeFiles/logdb.dir/progress.make
 # Include the compile flags for this target's objects.
 include src/CMakeFiles/logdb.dir/flags.make
 
+src/CMakeFiles/logdb.dir/appender.cpp.o: src/CMakeFiles/logdb.dir/flags.make
+src/CMakeFiles/logdb.dir/appender.cpp.o: ../src/appender.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/ssd/opensource/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object src/CMakeFiles/logdb.dir/appender.cpp.o"
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdb.dir/appender.cpp.o -c /home/shichen/ssd/opensource/logdb/src/appender.cpp
+
+src/CMakeFiles/logdb.dir/appender.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/logdb.dir/appender.cpp.i"
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/ssd/opensource/logdb/src/appender.cpp > CMakeFiles/logdb.dir/appender.cpp.i
+
+src/CMakeFiles/logdb.dir/appender.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/logdb.dir/appender.cpp.s"
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/ssd/opensource/logdb/src/appender.cpp -o CMakeFiles/logdb.dir/appender.cpp.s
+
+src/CMakeFiles/logdb.dir/appender.cpp.o.requires:
+
+.PHONY : src/CMakeFiles/logdb.dir/appender.cpp.o.requires
+
+src/CMakeFiles/logdb.dir/appender.cpp.o.provides: src/CMakeFiles/logdb.dir/appender.cpp.o.requires
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/appender.cpp.o.provides.build
+.PHONY : src/CMakeFiles/logdb.dir/appender.cpp.o.provides
+
+src/CMakeFiles/logdb.dir/appender.cpp.o.provides.build: src/CMakeFiles/logdb.dir/appender.cpp.o
+
+
+src/CMakeFiles/logdb.dir/layout.cpp.o: src/CMakeFiles/logdb.dir/flags.make
+src/CMakeFiles/logdb.dir/layout.cpp.o: ../src/layout.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/ssd/opensource/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object src/CMakeFiles/logdb.dir/layout.cpp.o"
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdb.dir/layout.cpp.o -c /home/shichen/ssd/opensource/logdb/src/layout.cpp
+
+src/CMakeFiles/logdb.dir/layout.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/logdb.dir/layout.cpp.i"
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/ssd/opensource/logdb/src/layout.cpp > CMakeFiles/logdb.dir/layout.cpp.i
+
+src/CMakeFiles/logdb.dir/layout.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/logdb.dir/layout.cpp.s"
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/ssd/opensource/logdb/src/layout.cpp -o CMakeFiles/logdb.dir/layout.cpp.s
+
+src/CMakeFiles/logdb.dir/layout.cpp.o.requires:
+
+.PHONY : src/CMakeFiles/logdb.dir/layout.cpp.o.requires
+
+src/CMakeFiles/logdb.dir/layout.cpp.o.provides: src/CMakeFiles/logdb.dir/layout.cpp.o.requires
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/layout.cpp.o.provides.build
+.PHONY : src/CMakeFiles/logdb.dir/layout.cpp.o.provides
+
+src/CMakeFiles/logdb.dir/layout.cpp.o.provides.build: src/CMakeFiles/logdb.dir/layout.cpp.o
+
+
 src/CMakeFiles/logdb.dir/log.cpp.o: src/CMakeFiles/logdb.dir/flags.make
 src/CMakeFiles/logdb.dir/log.cpp.o: ../src/log.cpp
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object src/CMakeFiles/logdb.dir/log.cpp.o"
-	cd /home/shichen/workspace/opensource/log/logdb/build/src && /usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdb.dir/log.cpp.o -c /home/shichen/workspace/opensource/log/logdb/src/log.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/ssd/opensource/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_3) "Building CXX object src/CMakeFiles/logdb.dir/log.cpp.o"
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdb.dir/log.cpp.o -c /home/shichen/ssd/opensource/logdb/src/log.cpp
 
 src/CMakeFiles/logdb.dir/log.cpp.i: cmake_force
 	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/logdb.dir/log.cpp.i"
-	cd /home/shichen/workspace/opensource/log/logdb/build/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/workspace/opensource/log/logdb/src/log.cpp > CMakeFiles/logdb.dir/log.cpp.i
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/ssd/opensource/logdb/src/log.cpp > CMakeFiles/logdb.dir/log.cpp.i
 
 src/CMakeFiles/logdb.dir/log.cpp.s: cmake_force
 	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/logdb.dir/log.cpp.s"
-	cd /home/shichen/workspace/opensource/log/logdb/build/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/workspace/opensource/log/logdb/src/log.cpp -o CMakeFiles/logdb.dir/log.cpp.s
+	cd /home/shichen/ssd/opensource/logdb/build/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/ssd/opensource/logdb/src/log.cpp -o CMakeFiles/logdb.dir/log.cpp.s
+
+src/CMakeFiles/logdb.dir/log.cpp.o.requires:
+
+.PHONY : src/CMakeFiles/logdb.dir/log.cpp.o.requires
+
+src/CMakeFiles/logdb.dir/log.cpp.o.provides: src/CMakeFiles/logdb.dir/log.cpp.o.requires
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.o.provides.build
+.PHONY : src/CMakeFiles/logdb.dir/log.cpp.o.provides
+
+src/CMakeFiles/logdb.dir/log.cpp.o.provides.build: src/CMakeFiles/logdb.dir/log.cpp.o
+
 
 # Object files for target logdb
 logdb_OBJECTS = \
+"CMakeFiles/logdb.dir/appender.cpp.o" \
+"CMakeFiles/logdb.dir/layout.cpp.o" \
 "CMakeFiles/logdb.dir/log.cpp.o"
 
 # External object files for target logdb
 logdb_EXTERNAL_OBJECTS =
 
+src/liblogdb.so: src/CMakeFiles/logdb.dir/appender.cpp.o
+src/liblogdb.so: src/CMakeFiles/logdb.dir/layout.cpp.o
 src/liblogdb.so: src/CMakeFiles/logdb.dir/log.cpp.o
 src/liblogdb.so: src/CMakeFiles/logdb.dir/build.make
 src/liblogdb.so: src/CMakeFiles/logdb.dir/link.txt
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/shichen/workspace/opensource/log/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) "Linking CXX shared library liblogdb.so"
-	cd /home/shichen/workspace/opensource/log/logdb/build/src && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/logdb.dir/link.txt --verbose=$(VERBOSE)
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/shichen/ssd/opensource/logdb/build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_4) "Linking CXX shared library liblogdb.so"
+	cd /home/shichen/ssd/opensource/logdb/build/src && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/logdb.dir/link.txt --verbose=$(VERBOSE)
 
 # Rule to build all files generated by this target.
 src/CMakeFiles/logdb.dir/build: src/liblogdb.so
 
 .PHONY : src/CMakeFiles/logdb.dir/build
 
+src/CMakeFiles/logdb.dir/requires: src/CMakeFiles/logdb.dir/appender.cpp.o.requires
+src/CMakeFiles/logdb.dir/requires: src/CMakeFiles/logdb.dir/layout.cpp.o.requires
+src/CMakeFiles/logdb.dir/requires: src/CMakeFiles/logdb.dir/log.cpp.o.requires
+
+.PHONY : src/CMakeFiles/logdb.dir/requires
+
 src/CMakeFiles/logdb.dir/clean:
-	cd /home/shichen/workspace/opensource/log/logdb/build/src && $(CMAKE_COMMAND) -P CMakeFiles/logdb.dir/cmake_clean.cmake
+	cd /home/shichen/ssd/opensource/logdb/build/src && $(CMAKE_COMMAND) -P CMakeFiles/logdb.dir/cmake_clean.cmake
 .PHONY : src/CMakeFiles/logdb.dir/clean
 
 src/CMakeFiles/logdb.dir/depend:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/shichen/workspace/opensource/log/logdb /home/shichen/workspace/opensource/log/logdb/src /home/shichen/workspace/opensource/log/logdb/build /home/shichen/workspace/opensource/log/logdb/build/src /home/shichen/workspace/opensource/log/logdb/build/src/CMakeFiles/logdb.dir/DependInfo.cmake --color=$(COLOR)
+	cd /home/shichen/ssd/opensource/logdb/build && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb/src /home/shichen/ssd/opensource/logdb/build /home/shichen/ssd/opensource/logdb/build/src /home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/logdb.dir/DependInfo.cmake --color=$(COLOR)
 .PHONY : src/CMakeFiles/logdb.dir/depend
 
diff --git a/build/src/CMakeFiles/logdb.dir/cmake_clean.cmake b/build/src/CMakeFiles/logdb.dir/cmake_clean.cmake
index 0978876..31f4744 100644
--- a/build/src/CMakeFiles/logdb.dir/cmake_clean.cmake
+++ b/build/src/CMakeFiles/logdb.dir/cmake_clean.cmake
@@ -1,4 +1,6 @@
 file(REMOVE_RECURSE
+  "CMakeFiles/logdb.dir/appender.cpp.o"
+  "CMakeFiles/logdb.dir/layout.cpp.o"
   "CMakeFiles/logdb.dir/log.cpp.o"
   "liblogdb.pdb"
   "liblogdb.so"
diff --git a/build/src/CMakeFiles/logdb.dir/depend.internal b/build/src/CMakeFiles/logdb.dir/depend.internal
index 1b1848f..86b0163 100644
--- a/build/src/CMakeFiles/logdb.dir/depend.internal
+++ b/build/src/CMakeFiles/logdb.dir/depend.internal
@@ -1,6 +1,21 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
+src/CMakeFiles/logdb.dir/appender.cpp.o
+ ../include/appender.h
+ ../include/config.h
+ ../include/layout.h
+ ../include/log.h
+ ../include/loggingevent.h
+ /home/shichen/ssd/opensource/logdb/src/appender.cpp
+src/CMakeFiles/logdb.dir/layout.cpp.o
+ ../include/layout.h
+ ../include/loggingevent.h
+ /home/shichen/ssd/opensource/logdb/src/layout.cpp
 src/CMakeFiles/logdb.dir/log.cpp.o
- /home/shichen/workspace/opensource/log/logdb/src/log.cpp
- /home/shichen/workspace/opensource/log/logdb/src/log.h
+ ../include/appender.h
+ ../include/config.h
+ ../include/layout.h
+ ../include/log.h
+ ../include/loggingevent.h
+ /home/shichen/ssd/opensource/logdb/src/log.cpp
diff --git a/build/src/CMakeFiles/logdb.dir/depend.make b/build/src/CMakeFiles/logdb.dir/depend.make
index a6a1210..29397cf 100644
--- a/build/src/CMakeFiles/logdb.dir/depend.make
+++ b/build/src/CMakeFiles/logdb.dir/depend.make
@@ -1,6 +1,21 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
+src/CMakeFiles/logdb.dir/appender.cpp.o: ../include/appender.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: ../include/config.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: ../include/layout.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: ../include/log.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: ../include/loggingevent.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: ../src/appender.cpp
+
+src/CMakeFiles/logdb.dir/layout.cpp.o: ../include/layout.h
+src/CMakeFiles/logdb.dir/layout.cpp.o: ../include/loggingevent.h
+src/CMakeFiles/logdb.dir/layout.cpp.o: ../src/layout.cpp
+
+src/CMakeFiles/logdb.dir/log.cpp.o: ../include/appender.h
+src/CMakeFiles/logdb.dir/log.cpp.o: ../include/config.h
+src/CMakeFiles/logdb.dir/log.cpp.o: ../include/layout.h
+src/CMakeFiles/logdb.dir/log.cpp.o: ../include/log.h
+src/CMakeFiles/logdb.dir/log.cpp.o: ../include/loggingevent.h
 src/CMakeFiles/logdb.dir/log.cpp.o: ../src/log.cpp
-src/CMakeFiles/logdb.dir/log.cpp.o: ../src/log.h
 
diff --git a/build/src/CMakeFiles/logdb.dir/flags.make b/build/src/CMakeFiles/logdb.dir/flags.make
index c91f431..e767b50 100644
--- a/build/src/CMakeFiles/logdb.dir/flags.make
+++ b/build/src/CMakeFiles/logdb.dir/flags.make
@@ -1,10 +1,10 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 # compile CXX with /usr/bin/c++
-CXX_FLAGS = -fPIC  
+CXX_FLAGS = -g -fPIC  
 
 CXX_DEFINES = -Dlogdb_EXPORTS
 
-CXX_INCLUDES = 
+CXX_INCLUDES = -I/home/shichen/ssd/opensource/logdb/include 
 
diff --git a/build/src/CMakeFiles/logdb.dir/link.txt b/build/src/CMakeFiles/logdb.dir/link.txt
index ff65da3..9311a78 100644
--- a/build/src/CMakeFiles/logdb.dir/link.txt
+++ b/build/src/CMakeFiles/logdb.dir/link.txt
@@ -1 +1 @@
-/usr/bin/c++ -fPIC   -shared -Wl,-soname,liblogdb.so -o liblogdb.so CMakeFiles/logdb.dir/log.cpp.o 
+/usr/bin/c++ -fPIC -g  -shared -Wl,-soname,liblogdb.so -o liblogdb.so CMakeFiles/logdb.dir/appender.cpp.o CMakeFiles/logdb.dir/layout.cpp.o CMakeFiles/logdb.dir/log.cpp.o 
diff --git a/build/src/CMakeFiles/logdb.dir/progress.make b/build/src/CMakeFiles/logdb.dir/progress.make
index abadeb0..a69a57e 100644
--- a/build/src/CMakeFiles/logdb.dir/progress.make
+++ b/build/src/CMakeFiles/logdb.dir/progress.make
@@ -1,3 +1,5 @@
 CMAKE_PROGRESS_1 = 1
 CMAKE_PROGRESS_2 = 2
+CMAKE_PROGRESS_3 = 3
+CMAKE_PROGRESS_4 = 4
 
diff --git a/build/src/CMakeFiles/progress.marks b/build/src/CMakeFiles/progress.marks
index 0cfbf08..b8626c4 100644
--- a/build/src/CMakeFiles/progress.marks
+++ b/build/src/CMakeFiles/progress.marks
@@ -1 +1 @@
-2
+4
diff --git a/build/src/Makefile b/build/src/Makefile
index 06e87ec..df2c488 100644
--- a/build/src/Makefile
+++ b/build/src/Makefile
@@ -1,5 +1,5 @@
 # CMAKE generated file: DO NOT EDIT!
-# Generated by "Unix Makefiles" Generator, CMake Version 3.16
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
 
 # Default target executed when no arguments are given to make.
 default_target: all
@@ -48,10 +48,10 @@ RM = /usr/bin/cmake -E remove -f
 EQUALS = =
 
 # The top-level source directory on which CMake was run.
-CMAKE_SOURCE_DIR = /home/shichen/workspace/opensource/log/logdb
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
 
 # The top-level build directory on which CMake was run.
-CMAKE_BINARY_DIR = /home/shichen/workspace/opensource/log/logdb/build
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb/build
 
 #=============================================================================
 # Targets provided globally by CMake.
@@ -59,7 +59,7 @@ CMAKE_BINARY_DIR = /home/shichen/workspace/opensource/log/logdb/build
 # Special rule for the target rebuild_cache
 rebuild_cache:
 	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
-	/usr/bin/cmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
+	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
 .PHONY : rebuild_cache
 
 # Special rule for the target rebuild_cache
@@ -80,14 +80,14 @@ edit_cache/fast: edit_cache
 
 # The main all target
 all: cmake_check_build_system
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles /home/shichen/workspace/opensource/log/logdb/build/src/CMakeFiles/progress.marks
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/all
-	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/workspace/opensource/log/logdb/build/CMakeFiles 0
+	cd /home/shichen/ssd/opensource/logdb/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/build/CMakeFiles /home/shichen/ssd/opensource/logdb/build/src/CMakeFiles/progress.marks
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/build/CMakeFiles 0
 .PHONY : all
 
 # The main clean target
 clean:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/clean
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/clean
 .PHONY : clean
 
 # The main clean target
@@ -97,22 +97,22 @@ clean/fast: clean
 
 # Prepare targets for installation.
 preinstall: all
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/preinstall
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/preinstall
 .PHONY : preinstall
 
 # Prepare targets for installation.
 preinstall/fast:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/preinstall
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/preinstall
 .PHONY : preinstall/fast
 
 # clear depends
 depend:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
+	cd /home/shichen/ssd/opensource/logdb/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
 .PHONY : depend
 
 # Convenience name for target.
 src/CMakeFiles/logdb.dir/rule:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/CMakeFiles/logdb.dir/rule
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f CMakeFiles/Makefile2 src/CMakeFiles/logdb.dir/rule
 .PHONY : src/CMakeFiles/logdb.dir/rule
 
 # Convenience name for target.
@@ -122,16 +122,70 @@ logdb: src/CMakeFiles/logdb.dir/rule
 
 # fast build rule for target.
 logdb/fast:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/build
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/build
 .PHONY : logdb/fast
 
+appender.o: appender.cpp.o
+
+.PHONY : appender.o
+
+# target to build an object file
+appender.cpp.o:
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/appender.cpp.o
+.PHONY : appender.cpp.o
+
+appender.i: appender.cpp.i
+
+.PHONY : appender.i
+
+# target to preprocess a source file
+appender.cpp.i:
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/appender.cpp.i
+.PHONY : appender.cpp.i
+
+appender.s: appender.cpp.s
+
+.PHONY : appender.s
+
+# target to generate assembly for a file
+appender.cpp.s:
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/appender.cpp.s
+.PHONY : appender.cpp.s
+
+layout.o: layout.cpp.o
+
+.PHONY : layout.o
+
+# target to build an object file
+layout.cpp.o:
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/layout.cpp.o
+.PHONY : layout.cpp.o
+
+layout.i: layout.cpp.i
+
+.PHONY : layout.i
+
+# target to preprocess a source file
+layout.cpp.i:
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/layout.cpp.i
+.PHONY : layout.cpp.i
+
+layout.s: layout.cpp.s
+
+.PHONY : layout.s
+
+# target to generate assembly for a file
+layout.cpp.s:
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/layout.cpp.s
+.PHONY : layout.cpp.s
+
 log.o: log.cpp.o
 
 .PHONY : log.o
 
 # target to build an object file
 log.cpp.o:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.o
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.o
 .PHONY : log.cpp.o
 
 log.i: log.cpp.i
@@ -140,7 +194,7 @@ log.i: log.cpp.i
 
 # target to preprocess a source file
 log.cpp.i:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.i
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.i
 .PHONY : log.cpp.i
 
 log.s: log.cpp.s
@@ -149,7 +203,7 @@ log.s: log.cpp.s
 
 # target to generate assembly for a file
 log.cpp.s:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.s
+	cd /home/shichen/ssd/opensource/logdb/build && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.s
 .PHONY : log.cpp.s
 
 # Help Target
@@ -159,8 +213,14 @@ help:
 	@echo "... clean"
 	@echo "... depend"
 	@echo "... rebuild_cache"
-	@echo "... edit_cache"
 	@echo "... logdb"
+	@echo "... edit_cache"
+	@echo "... appender.o"
+	@echo "... appender.i"
+	@echo "... appender.s"
+	@echo "... layout.o"
+	@echo "... layout.i"
+	@echo "... layout.s"
 	@echo "... log.o"
 	@echo "... log.i"
 	@echo "... log.s"
@@ -175,6 +235,6 @@ help:
 # No rule that depends on this can have commands that come from listfiles
 # because they might be regenerated.
 cmake_check_build_system:
-	cd /home/shichen/workspace/opensource/log/logdb/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
+	cd /home/shichen/ssd/opensource/logdb/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
 .PHONY : cmake_check_build_system
 
diff --git a/build/src/cmake_install.cmake b/build/src/cmake_install.cmake
index 3c801c6..a8cde24 100644
--- a/build/src/cmake_install.cmake
+++ b/build/src/cmake_install.cmake
@@ -1,4 +1,4 @@
-# Install script for directory: /home/shichen/workspace/opensource/log/logdb/src
+# Install script for directory: /home/shichen/ssd/opensource/logdb/src
 
 # Set the install prefix
 if(NOT DEFINED CMAKE_INSTALL_PREFIX)
diff --git a/cmake_install.cmake b/cmake_install.cmake
new file mode 100644
index 0000000..827b407
--- /dev/null
+++ b/cmake_install.cmake
@@ -0,0 +1,55 @@
+# Install script for directory: /home/shichen/ssd/opensource/logdb
+
+# Set the install prefix
+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
+  set(CMAKE_INSTALL_PREFIX "/usr/local")
+endif()
+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
+
+# Set the install configuration name.
+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
+  if(BUILD_TYPE)
+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
+  else()
+    set(CMAKE_INSTALL_CONFIG_NAME "")
+  endif()
+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
+endif()
+
+# Set the component getting installed.
+if(NOT CMAKE_INSTALL_COMPONENT)
+  if(COMPONENT)
+    message(STATUS "Install component: \"${COMPONENT}\"")
+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
+  else()
+    set(CMAKE_INSTALL_COMPONENT)
+  endif()
+endif()
+
+# Install shared libraries without execute permission?
+if(NOT DEFINED CMAKE_INSTALL_SO_NO_EXE)
+  set(CMAKE_INSTALL_SO_NO_EXE "1")
+endif()
+
+# Is this installation the result of a crosscompile?
+if(NOT DEFINED CMAKE_CROSSCOMPILING)
+  set(CMAKE_CROSSCOMPILING "FALSE")
+endif()
+
+if(NOT CMAKE_INSTALL_LOCAL_ONLY)
+  # Include the install script for each subdirectory.
+  include("/home/shichen/ssd/opensource/logdb/src/cmake_install.cmake")
+
+endif()
+
+if(CMAKE_INSTALL_COMPONENT)
+  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
+else()
+  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
+endif()
+
+string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
+       "${CMAKE_INSTALL_MANIFEST_FILES}")
+file(WRITE "/home/shichen/ssd/opensource/logdb/${CMAKE_INSTALL_MANIFEST}"
+     "${CMAKE_INSTALL_MANIFEST_CONTENT}")
diff --git a/include/appender.h b/include/appender.h
index db57466..db2cc58 100644
--- a/include/appender.h
+++ b/include/appender.h
@@ -3,11 +3,15 @@
 #define APPENDER_H
 
 #include <string>
+#include "layout.h"
+#include "loggingevent.h"
 
 namespace logdb {
 
 using std::string;
 
+class Layout;
+
 class Appender
 {
 public:
@@ -16,13 +20,33 @@ public:
 
     std::string getName();
     void setName(string& name);
-
-private:
+    
+    void setLayout(LayoutPtr newLayout);
+    LayoutPtr getLayout();
+    /*
+    * core function, must be overloaded by subclass 
+    */
+    virtual void doAppend(LoggingEvent_t *ev) = 0;
+protected:
     string name;
+    LayoutPtr layout;
+    virtual void append(LoggingEvent_t *ev) = 0;
 };
 
 typedef Appender* AppenderPtr; 
 
+class ConsoleAppender:public Appender
+{
+public:
+    ConsoleAppender(/* args */);
+    ~ConsoleAppender();
+    virtual void doAppend(LoggingEvent_t *ev);
+private:
+    virtual void append(LoggingEvent_t *ev);
+};
+
+
+
 }
 
 #endif
\ No newline at end of file
diff --git a/include/layout.h b/include/layout.h
new file mode 100644
index 0000000..9f56167
--- /dev/null
+++ b/include/layout.h
@@ -0,0 +1,36 @@
+#ifndef LOGDB_LAYOUT_H
+#define LOGDB_LAYOUT_H
+
+#include <string>
+#include "loggingevent.h"
+
+namespace logdb 
+{
+
+using std::string;
+
+class Layout
+{
+public:
+    Layout(/* args */){}
+    ~Layout(){}
+    virtual void formatAndAppend(std::ostream &, LoggingEvent_t *ev) = 0;
+protected:
+    const string& level2Str(const LogLevel ll);
+};
+
+typedef Layout* LayoutPtr;
+
+class SampleLayout:public Layout
+{
+public:
+    SampleLayout(/* args */){}
+    ~SampleLayout(){}
+    virtual void formatAndAppend(std::ostream &, LoggingEvent_t *ev);
+};
+
+
+
+} //namespace logdb
+
+#endif
\ No newline at end of file
diff --git a/src/log.h b/include/log.h
similarity index 85%
rename from src/log.h
rename to include/log.h
index a1c0d64..2d4a198 100644
--- a/src/log.h
+++ b/include/log.h
@@ -7,14 +7,7 @@
 #include <time.h>
 #include "config.h"
 #include "appender.h"
-
-enum LogLevel{
-    DEBUG = 0,
-    TRACE,
-    INFO,
-    WARNING,
-    ERROR,
-};
+#include "loggingevent.h"
 
 #define DEFAULT_LEVEL	INFO
 
@@ -29,13 +22,6 @@ class Appender;
         LogLevel level;
     }LogMsg_t;
 
-    typedef struct FmtMsg {
-        string msg;
-    }FmtMsg_t;
-
-    typedef struct TimeStamp {
-        time_t time;
-    }TimeStamp_t;
 
     class Filter;
 
@@ -67,7 +53,7 @@ class Appender;
         void removeAppender(AppenderPtr appender);
         void removeAppender(string& name);
         AppenderPtr getAppender(string& name);
-        void callAppend();
+        void callAppend(LoggingEvent_t *ev);
         /**
          * The user interface to stream log message
          * 
@@ -84,6 +70,7 @@ class Appender;
             const char *func = LOGDB_CALLER_FUNCTION()
             );
         LogLevel getLogLevel() {return this->loglevel;}
+        void setLogLevel(LogLevel ll) { this->loglevel = ll; }
 
     private:
         Logger();
@@ -94,15 +81,12 @@ class Appender;
          * which can only be called by GetInstance()
          */
 	    static Logger* createInstance();
-        FmtMsg_t Format(LogMsg_t& msg);
-	    string level2str(const LogLevel levl);
         bool isEnabledfor(LogLevel ll);
 
         static Logger *m_pLoggerInstance;
         
         std::vector<AppenderPtr> appenderList;
         LogLevel loglevel;
-	    TimeStamp_t ts;
 	    int Pid;
 	    string ModuleName;
     };
diff --git a/include/loggingevent.h b/include/loggingevent.h
new file mode 100644
index 0000000..036fe3c
--- /dev/null
+++ b/include/loggingevent.h
@@ -0,0 +1,31 @@
+#ifndef LOGGING_EVENT_H
+#define LOGGING_EVENT_H
+
+
+namespace logdb {
+
+using std::string;
+
+enum LogLevel{
+    DEBUG = 0,
+    TRACE,
+    INFO,
+    WARNING,
+    ERROR,
+};
+
+typedef string TimeStamp_t;
+
+typedef struct LoggingEvent {
+    /* data */
+    LogLevel ll;
+    string msg;
+    string file;
+    int line;
+    string func;
+    TimeStamp_t time;
+} LoggingEvent_t;
+
+}
+
+#endif
\ No newline at end of file
diff --git a/src/CMakeFiles/CMakeDirectoryInformation.cmake b/src/CMakeFiles/CMakeDirectoryInformation.cmake
new file mode 100644
index 0000000..72f65c9
--- /dev/null
+++ b/src/CMakeFiles/CMakeDirectoryInformation.cmake
@@ -0,0 +1,16 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# Relative path conversion top directories.
+set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/home/shichen/ssd/opensource/logdb")
+set(CMAKE_RELATIVE_PATH_TOP_BINARY "/home/shichen/ssd/opensource/logdb")
+
+# Force unix paths in dependencies.
+set(CMAKE_FORCE_UNIX_PATHS 1)
+
+
+# The C and CXX include file regular expressions for this directory.
+set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")
+set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")
+set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
+set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
diff --git a/src/CMakeFiles/logdb.dir/CXX.includecache b/src/CMakeFiles/logdb.dir/CXX.includecache
new file mode 100644
index 0000000..cd347b0
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/CXX.includecache
@@ -0,0 +1,72 @@
+#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+/home/shichen/ssd/opensource/logdb/src/appender.cpp
+iostream
+-
+string
+-
+log.h
+/home/shichen/ssd/opensource/logdb/src/log.h
+appender.h
+/home/shichen/ssd/opensource/logdb/src/appender.h
+loggingevent.h
+/home/shichen/ssd/opensource/logdb/src/loggingevent.h
+
+/home/shichen/ssd/opensource/logdb/src/layout.cpp
+iostream
+-
+layout.h
+/home/shichen/ssd/opensource/logdb/src/layout.h
+
+/home/shichen/ssd/opensource/logdb/src/log.cpp
+log.h
+/home/shichen/ssd/opensource/logdb/src/log.h
+unistd.h
+-
+time.h
+-
+string
+-
+algorithm
+-
+
+include/appender.h
+string
+-
+layout.h
+include/layout.h
+loggingevent.h
+include/loggingevent.h
+
+include/config.h
+
+include/layout.h
+string
+-
+loggingevent.h
+include/loggingevent.h
+
+include/log.h
+iostream
+-
+vector
+-
+time.h
+-
+config.h
+include/config.h
+appender.h
+include/appender.h
+loggingevent.h
+include/loggingevent.h
+
+include/loggingevent.h
+log.h
+include/log.h
+
diff --git a/src/CMakeFiles/logdb.dir/DependInfo.cmake b/src/CMakeFiles/logdb.dir/DependInfo.cmake
new file mode 100644
index 0000000..ca57f0a
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/DependInfo.cmake
@@ -0,0 +1,23 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "/home/shichen/ssd/opensource/logdb/src/appender.cpp" "/home/shichen/ssd/opensource/logdb/src/CMakeFiles/logdb.dir/appender.cpp.o"
+  "/home/shichen/ssd/opensource/logdb/src/layout.cpp" "/home/shichen/ssd/opensource/logdb/src/CMakeFiles/logdb.dir/layout.cpp.o"
+  "/home/shichen/ssd/opensource/logdb/src/log.cpp" "/home/shichen/ssd/opensource/logdb/src/CMakeFiles/logdb.dir/log.cpp.o"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# The include file search paths:
+set(CMAKE_CXX_TARGET_INCLUDE_PATH
+  "include"
+  )
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  )
+
+# Fortran module output directory.
+set(CMAKE_Fortran_TARGET_MODULE_DIR "")
diff --git a/src/CMakeFiles/logdb.dir/appender.cpp.o b/src/CMakeFiles/logdb.dir/appender.cpp.o
new file mode 100644
index 0000000000000000000000000000000000000000..32c26740d191eb907042015bef84be4b8ee33dcd
GIT binary patch
literal 10768
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
F{{`0E9rOSI

literal 0
HcmV?d00001

diff --git a/src/CMakeFiles/logdb.dir/build.make b/src/CMakeFiles/logdb.dir/build.make
new file mode 100644
index 0000000..d0b1305
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/build.make
@@ -0,0 +1,167 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# Delete rule output on recipe failure.
+.DELETE_ON_ERROR:
+
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb
+
+# Include any dependencies generated for this target.
+include src/CMakeFiles/logdb.dir/depend.make
+
+# Include the progress variables for this target.
+include src/CMakeFiles/logdb.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include src/CMakeFiles/logdb.dir/flags.make
+
+src/CMakeFiles/logdb.dir/appender.cpp.o: src/CMakeFiles/logdb.dir/flags.make
+src/CMakeFiles/logdb.dir/appender.cpp.o: src/appender.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/ssd/opensource/logdb/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object src/CMakeFiles/logdb.dir/appender.cpp.o"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdb.dir/appender.cpp.o -c /home/shichen/ssd/opensource/logdb/src/appender.cpp
+
+src/CMakeFiles/logdb.dir/appender.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/logdb.dir/appender.cpp.i"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/ssd/opensource/logdb/src/appender.cpp > CMakeFiles/logdb.dir/appender.cpp.i
+
+src/CMakeFiles/logdb.dir/appender.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/logdb.dir/appender.cpp.s"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/ssd/opensource/logdb/src/appender.cpp -o CMakeFiles/logdb.dir/appender.cpp.s
+
+src/CMakeFiles/logdb.dir/appender.cpp.o.requires:
+
+.PHONY : src/CMakeFiles/logdb.dir/appender.cpp.o.requires
+
+src/CMakeFiles/logdb.dir/appender.cpp.o.provides: src/CMakeFiles/logdb.dir/appender.cpp.o.requires
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/appender.cpp.o.provides.build
+.PHONY : src/CMakeFiles/logdb.dir/appender.cpp.o.provides
+
+src/CMakeFiles/logdb.dir/appender.cpp.o.provides.build: src/CMakeFiles/logdb.dir/appender.cpp.o
+
+
+src/CMakeFiles/logdb.dir/layout.cpp.o: src/CMakeFiles/logdb.dir/flags.make
+src/CMakeFiles/logdb.dir/layout.cpp.o: src/layout.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/ssd/opensource/logdb/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object src/CMakeFiles/logdb.dir/layout.cpp.o"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdb.dir/layout.cpp.o -c /home/shichen/ssd/opensource/logdb/src/layout.cpp
+
+src/CMakeFiles/logdb.dir/layout.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/logdb.dir/layout.cpp.i"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/ssd/opensource/logdb/src/layout.cpp > CMakeFiles/logdb.dir/layout.cpp.i
+
+src/CMakeFiles/logdb.dir/layout.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/logdb.dir/layout.cpp.s"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/ssd/opensource/logdb/src/layout.cpp -o CMakeFiles/logdb.dir/layout.cpp.s
+
+src/CMakeFiles/logdb.dir/layout.cpp.o.requires:
+
+.PHONY : src/CMakeFiles/logdb.dir/layout.cpp.o.requires
+
+src/CMakeFiles/logdb.dir/layout.cpp.o.provides: src/CMakeFiles/logdb.dir/layout.cpp.o.requires
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/layout.cpp.o.provides.build
+.PHONY : src/CMakeFiles/logdb.dir/layout.cpp.o.provides
+
+src/CMakeFiles/logdb.dir/layout.cpp.o.provides.build: src/CMakeFiles/logdb.dir/layout.cpp.o
+
+
+src/CMakeFiles/logdb.dir/log.cpp.o: src/CMakeFiles/logdb.dir/flags.make
+src/CMakeFiles/logdb.dir/log.cpp.o: src/log.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/shichen/ssd/opensource/logdb/CMakeFiles --progress-num=$(CMAKE_PROGRESS_3) "Building CXX object src/CMakeFiles/logdb.dir/log.cpp.o"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles/logdb.dir/log.cpp.o -c /home/shichen/ssd/opensource/logdb/src/log.cpp
+
+src/CMakeFiles/logdb.dir/log.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/logdb.dir/log.cpp.i"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/shichen/ssd/opensource/logdb/src/log.cpp > CMakeFiles/logdb.dir/log.cpp.i
+
+src/CMakeFiles/logdb.dir/log.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/logdb.dir/log.cpp.s"
+	cd /home/shichen/ssd/opensource/logdb/src && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/shichen/ssd/opensource/logdb/src/log.cpp -o CMakeFiles/logdb.dir/log.cpp.s
+
+src/CMakeFiles/logdb.dir/log.cpp.o.requires:
+
+.PHONY : src/CMakeFiles/logdb.dir/log.cpp.o.requires
+
+src/CMakeFiles/logdb.dir/log.cpp.o.provides: src/CMakeFiles/logdb.dir/log.cpp.o.requires
+	$(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.o.provides.build
+.PHONY : src/CMakeFiles/logdb.dir/log.cpp.o.provides
+
+src/CMakeFiles/logdb.dir/log.cpp.o.provides.build: src/CMakeFiles/logdb.dir/log.cpp.o
+
+
+# Object files for target logdb
+logdb_OBJECTS = \
+"CMakeFiles/logdb.dir/appender.cpp.o" \
+"CMakeFiles/logdb.dir/layout.cpp.o" \
+"CMakeFiles/logdb.dir/log.cpp.o"
+
+# External object files for target logdb
+logdb_EXTERNAL_OBJECTS =
+
+src/liblogdb.so: src/CMakeFiles/logdb.dir/appender.cpp.o
+src/liblogdb.so: src/CMakeFiles/logdb.dir/layout.cpp.o
+src/liblogdb.so: src/CMakeFiles/logdb.dir/log.cpp.o
+src/liblogdb.so: src/CMakeFiles/logdb.dir/build.make
+src/liblogdb.so: src/CMakeFiles/logdb.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/shichen/ssd/opensource/logdb/CMakeFiles --progress-num=$(CMAKE_PROGRESS_4) "Linking CXX shared library liblogdb.so"
+	cd /home/shichen/ssd/opensource/logdb/src && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/logdb.dir/link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+src/CMakeFiles/logdb.dir/build: src/liblogdb.so
+
+.PHONY : src/CMakeFiles/logdb.dir/build
+
+src/CMakeFiles/logdb.dir/requires: src/CMakeFiles/logdb.dir/appender.cpp.o.requires
+src/CMakeFiles/logdb.dir/requires: src/CMakeFiles/logdb.dir/layout.cpp.o.requires
+src/CMakeFiles/logdb.dir/requires: src/CMakeFiles/logdb.dir/log.cpp.o.requires
+
+.PHONY : src/CMakeFiles/logdb.dir/requires
+
+src/CMakeFiles/logdb.dir/clean:
+	cd /home/shichen/ssd/opensource/logdb/src && $(CMAKE_COMMAND) -P CMakeFiles/logdb.dir/cmake_clean.cmake
+.PHONY : src/CMakeFiles/logdb.dir/clean
+
+src/CMakeFiles/logdb.dir/depend:
+	cd /home/shichen/ssd/opensource/logdb && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb/src /home/shichen/ssd/opensource/logdb /home/shichen/ssd/opensource/logdb/src /home/shichen/ssd/opensource/logdb/src/CMakeFiles/logdb.dir/DependInfo.cmake --color=$(COLOR)
+.PHONY : src/CMakeFiles/logdb.dir/depend
+
diff --git a/src/CMakeFiles/logdb.dir/cmake_clean.cmake b/src/CMakeFiles/logdb.dir/cmake_clean.cmake
new file mode 100644
index 0000000..31f4744
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/cmake_clean.cmake
@@ -0,0 +1,12 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/logdb.dir/appender.cpp.o"
+  "CMakeFiles/logdb.dir/layout.cpp.o"
+  "CMakeFiles/logdb.dir/log.cpp.o"
+  "liblogdb.pdb"
+  "liblogdb.so"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/logdb.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
diff --git a/src/CMakeFiles/logdb.dir/depend.internal b/src/CMakeFiles/logdb.dir/depend.internal
new file mode 100644
index 0000000..c326ef8
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/depend.internal
@@ -0,0 +1,24 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+src/CMakeFiles/logdb.dir/appender.cpp.o
+ /home/shichen/ssd/opensource/logdb/src/appender.cpp
+ include/appender.h
+ include/config.h
+ include/layout.h
+ include/log.h
+ include/loggingevent.h
+src/CMakeFiles/logdb.dir/layout.cpp.o
+ /home/shichen/ssd/opensource/logdb/src/layout.cpp
+ include/appender.h
+ include/config.h
+ include/layout.h
+ include/log.h
+ include/loggingevent.h
+src/CMakeFiles/logdb.dir/log.cpp.o
+ /home/shichen/ssd/opensource/logdb/src/log.cpp
+ include/appender.h
+ include/config.h
+ include/layout.h
+ include/log.h
+ include/loggingevent.h
diff --git a/src/CMakeFiles/logdb.dir/depend.make b/src/CMakeFiles/logdb.dir/depend.make
new file mode 100644
index 0000000..03dcecc
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/depend.make
@@ -0,0 +1,24 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+src/CMakeFiles/logdb.dir/appender.cpp.o: src/appender.cpp
+src/CMakeFiles/logdb.dir/appender.cpp.o: include/appender.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: include/config.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: include/layout.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: include/log.h
+src/CMakeFiles/logdb.dir/appender.cpp.o: include/loggingevent.h
+
+src/CMakeFiles/logdb.dir/layout.cpp.o: src/layout.cpp
+src/CMakeFiles/logdb.dir/layout.cpp.o: include/appender.h
+src/CMakeFiles/logdb.dir/layout.cpp.o: include/config.h
+src/CMakeFiles/logdb.dir/layout.cpp.o: include/layout.h
+src/CMakeFiles/logdb.dir/layout.cpp.o: include/log.h
+src/CMakeFiles/logdb.dir/layout.cpp.o: include/loggingevent.h
+
+src/CMakeFiles/logdb.dir/log.cpp.o: src/log.cpp
+src/CMakeFiles/logdb.dir/log.cpp.o: include/appender.h
+src/CMakeFiles/logdb.dir/log.cpp.o: include/config.h
+src/CMakeFiles/logdb.dir/log.cpp.o: include/layout.h
+src/CMakeFiles/logdb.dir/log.cpp.o: include/log.h
+src/CMakeFiles/logdb.dir/log.cpp.o: include/loggingevent.h
+
diff --git a/src/CMakeFiles/logdb.dir/flags.make b/src/CMakeFiles/logdb.dir/flags.make
new file mode 100644
index 0000000..ee02a58
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/flags.make
@@ -0,0 +1,10 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# compile CXX with /usr/bin/c++
+CXX_FLAGS = -fPIC  
+
+CXX_DEFINES = -Dlogdb_EXPORTS
+
+CXX_INCLUDES = -I/home/shichen/ssd/opensource/logdb/include 
+
diff --git a/src/CMakeFiles/logdb.dir/link.txt b/src/CMakeFiles/logdb.dir/link.txt
new file mode 100644
index 0000000..71b37d7
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/link.txt
@@ -0,0 +1 @@
+/usr/bin/c++ -fPIC   -shared -Wl,-soname,liblogdb.so -o liblogdb.so CMakeFiles/logdb.dir/appender.cpp.o CMakeFiles/logdb.dir/layout.cpp.o CMakeFiles/logdb.dir/log.cpp.o 
diff --git a/src/CMakeFiles/logdb.dir/progress.make b/src/CMakeFiles/logdb.dir/progress.make
new file mode 100644
index 0000000..a69a57e
--- /dev/null
+++ b/src/CMakeFiles/logdb.dir/progress.make
@@ -0,0 +1,5 @@
+CMAKE_PROGRESS_1 = 1
+CMAKE_PROGRESS_2 = 2
+CMAKE_PROGRESS_3 = 3
+CMAKE_PROGRESS_4 = 4
+
diff --git a/src/CMakeFiles/progress.marks b/src/CMakeFiles/progress.marks
new file mode 100644
index 0000000..b8626c4
--- /dev/null
+++ b/src/CMakeFiles/progress.marks
@@ -0,0 +1 @@
+4
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index d341368..10c95a1 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -1,3 +1,3 @@
 aux_source_directory(. DIR_LOGDB_SRCS)
 add_library(logdb SHARED  ${DIR_LOGDB_SRCS})
-include_directories(${DIR_LOGDB_SRCS}/../include)
+include_directories(${PROJECT_SOURCE_DIR}/include)
diff --git a/src/Makefile b/src/Makefile
new file mode 100644
index 0000000..a2e4a29
--- /dev/null
+++ b/src/Makefile
@@ -0,0 +1,240 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Unix Makefiles" Generator, CMake Version 3.10
+
+# Default target executed when no arguments are given to make.
+default_target: all
+
+.PHONY : default_target
+
+# Allow only one "make -f Makefile2" at a time, but pass parallelism.
+.NOTPARALLEL:
+
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Remove some rules from gmake that .SUFFIXES does not remove.
+SUFFIXES =
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+# The shell in which to execute make rules.
+SHELL = /bin/sh
+
+# The CMake executable.
+CMAKE_COMMAND = /usr/bin/cmake
+
+# The command to remove a file.
+RM = /usr/bin/cmake -E remove -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = /home/shichen/ssd/opensource/logdb
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = /home/shichen/ssd/opensource/logdb
+
+#=============================================================================
+# Targets provided globally by CMake.
+
+# Special rule for the target rebuild_cache
+rebuild_cache:
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
+	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
+.PHONY : rebuild_cache
+
+# Special rule for the target rebuild_cache
+rebuild_cache/fast: rebuild_cache
+
+.PHONY : rebuild_cache/fast
+
+# Special rule for the target edit_cache
+edit_cache:
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
+	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
+.PHONY : edit_cache
+
+# Special rule for the target edit_cache
+edit_cache/fast: edit_cache
+
+.PHONY : edit_cache/fast
+
+# The main all target
+all: cmake_check_build_system
+	cd /home/shichen/ssd/opensource/logdb && $(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/CMakeFiles /home/shichen/ssd/opensource/logdb/src/CMakeFiles/progress.marks
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f CMakeFiles/Makefile2 src/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/shichen/ssd/opensource/logdb/CMakeFiles 0
+.PHONY : all
+
+# The main clean target
+clean:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f CMakeFiles/Makefile2 src/clean
+.PHONY : clean
+
+# The main clean target
+clean/fast: clean
+
+.PHONY : clean/fast
+
+# Prepare targets for installation.
+preinstall: all
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f CMakeFiles/Makefile2 src/preinstall
+.PHONY : preinstall
+
+# Prepare targets for installation.
+preinstall/fast:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f CMakeFiles/Makefile2 src/preinstall
+.PHONY : preinstall/fast
+
+# clear depends
+depend:
+	cd /home/shichen/ssd/opensource/logdb && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
+.PHONY : depend
+
+# Convenience name for target.
+src/CMakeFiles/logdb.dir/rule:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f CMakeFiles/Makefile2 src/CMakeFiles/logdb.dir/rule
+.PHONY : src/CMakeFiles/logdb.dir/rule
+
+# Convenience name for target.
+logdb: src/CMakeFiles/logdb.dir/rule
+
+.PHONY : logdb
+
+# fast build rule for target.
+logdb/fast:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/build
+.PHONY : logdb/fast
+
+appender.o: appender.cpp.o
+
+.PHONY : appender.o
+
+# target to build an object file
+appender.cpp.o:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/appender.cpp.o
+.PHONY : appender.cpp.o
+
+appender.i: appender.cpp.i
+
+.PHONY : appender.i
+
+# target to preprocess a source file
+appender.cpp.i:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/appender.cpp.i
+.PHONY : appender.cpp.i
+
+appender.s: appender.cpp.s
+
+.PHONY : appender.s
+
+# target to generate assembly for a file
+appender.cpp.s:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/appender.cpp.s
+.PHONY : appender.cpp.s
+
+layout.o: layout.cpp.o
+
+.PHONY : layout.o
+
+# target to build an object file
+layout.cpp.o:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/layout.cpp.o
+.PHONY : layout.cpp.o
+
+layout.i: layout.cpp.i
+
+.PHONY : layout.i
+
+# target to preprocess a source file
+layout.cpp.i:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/layout.cpp.i
+.PHONY : layout.cpp.i
+
+layout.s: layout.cpp.s
+
+.PHONY : layout.s
+
+# target to generate assembly for a file
+layout.cpp.s:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/layout.cpp.s
+.PHONY : layout.cpp.s
+
+log.o: log.cpp.o
+
+.PHONY : log.o
+
+# target to build an object file
+log.cpp.o:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.o
+.PHONY : log.cpp.o
+
+log.i: log.cpp.i
+
+.PHONY : log.i
+
+# target to preprocess a source file
+log.cpp.i:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.i
+.PHONY : log.cpp.i
+
+log.s: log.cpp.s
+
+.PHONY : log.s
+
+# target to generate assembly for a file
+log.cpp.s:
+	cd /home/shichen/ssd/opensource/logdb && $(MAKE) -f src/CMakeFiles/logdb.dir/build.make src/CMakeFiles/logdb.dir/log.cpp.s
+.PHONY : log.cpp.s
+
+# Help Target
+help:
+	@echo "The following are some of the valid targets for this Makefile:"
+	@echo "... all (the default if no target is provided)"
+	@echo "... clean"
+	@echo "... depend"
+	@echo "... rebuild_cache"
+	@echo "... logdb"
+	@echo "... edit_cache"
+	@echo "... appender.o"
+	@echo "... appender.i"
+	@echo "... appender.s"
+	@echo "... layout.o"
+	@echo "... layout.i"
+	@echo "... layout.s"
+	@echo "... log.o"
+	@echo "... log.i"
+	@echo "... log.s"
+.PHONY : help
+
+
+
+#=============================================================================
+# Special targets to cleanup operation of make.
+
+# Special rule to run CMake to check the build system integrity.
+# No rule that depends on this can have commands that come from listfiles
+# because they might be regenerated.
+cmake_check_build_system:
+	cd /home/shichen/ssd/opensource/logdb && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
+.PHONY : cmake_check_build_system
+
diff --git a/src/appender.cpp b/src/appender.cpp
index da9f2f1..5a2a631 100644
--- a/src/appender.cpp
+++ b/src/appender.cpp
@@ -2,9 +2,19 @@
 #include <string>
 #include "log.h"
 #include "appender.h"
+#include "loggingevent.h"
 
 namespace logdb {
 
+Appender::Appender()
+: name(""), layout(new SampleLayout)
+{
+}
+Appender::~Appender()
+{
+
+}
+
 void Appender::setName(string &n)
 {
     name = n;
@@ -15,6 +25,33 @@ string Appender::getName()
     return name;
 }
 
+void Appender::setLayout(LayoutPtr newLayout)
+{
+    layout = newLayout;
+}
+
+LayoutPtr Appender::getLayout()
+{
+    return layout;
+}
+
+ConsoleAppender::ConsoleAppender(/* args */)
+{
+}
+
+ConsoleAppender::~ConsoleAppender()
+{
+}
 
+void ConsoleAppender::doAppend(LoggingEvent_t *ev)
+{
+    append(ev);
+}
+
+void ConsoleAppender::append(LoggingEvent_t *ev)
+{
+    std::ostream& stream = std::cout;
+    layout->formatAndAppend(stream, ev);
+}
 
 }
\ No newline at end of file
diff --git a/src/cmake_install.cmake b/src/cmake_install.cmake
new file mode 100644
index 0000000..0a12897
--- /dev/null
+++ b/src/cmake_install.cmake
@@ -0,0 +1,39 @@
+# Install script for directory: /home/shichen/ssd/opensource/logdb/src
+
+# Set the install prefix
+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
+  set(CMAKE_INSTALL_PREFIX "/usr/local")
+endif()
+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
+
+# Set the install configuration name.
+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
+  if(BUILD_TYPE)
+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
+  else()
+    set(CMAKE_INSTALL_CONFIG_NAME "")
+  endif()
+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
+endif()
+
+# Set the component getting installed.
+if(NOT CMAKE_INSTALL_COMPONENT)
+  if(COMPONENT)
+    message(STATUS "Install component: \"${COMPONENT}\"")
+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
+  else()
+    set(CMAKE_INSTALL_COMPONENT)
+  endif()
+endif()
+
+# Install shared libraries without execute permission?
+if(NOT DEFINED CMAKE_INSTALL_SO_NO_EXE)
+  set(CMAKE_INSTALL_SO_NO_EXE "1")
+endif()
+
+# Is this installation the result of a crosscompile?
+if(NOT DEFINED CMAKE_CROSSCOMPILING)
+  set(CMAKE_CROSSCOMPILING "FALSE")
+endif()
+
diff --git a/src/layout.cpp b/src/layout.cpp
new file mode 100644
index 0000000..06b19ae
--- /dev/null
+++ b/src/layout.cpp
@@ -0,0 +1,42 @@
+#include <iostream>
+#include "layout.h"
+
+namespace logdb {
+
+using std::string;
+
+static const string DEBUGSTRING("DEBUG");
+static const string TRACESTRING("TRACE");
+static const string INFOSTRING("INFO");
+static const string WARNINGSTRING("WARNING");
+static const string ERRORSTRING("ERROR");
+
+
+void SampleLayout::formatAndAppend(std::ostream &stream, LoggingEvent_t *ev)
+{
+    stream << ev->file << " "
+    << ev->func << " "
+    << level2Str(ev->ll) << " - "
+    << ev->line << " "
+    << ev->msg << std::endl;
+}
+
+const string& Layout::level2Str(const LogLevel ll)
+{
+    switch(ll){
+    case DEBUG:
+        return DEBUGSTRING;
+    case TRACE:
+        return TRACESTRING;
+    case INFO:
+        return INFOSTRING;
+    case WARNING:
+        return WARNINGSTRING;
+    case ERROR:
+        return ERRORSTRING;
+    default:
+        return INFOSTRING;
+    }
+}
+
+}//namespace logdb
\ No newline at end of file
diff --git a/src/log.cpp b/src/log.cpp
index fd2669b..431857b 100644
--- a/src/log.cpp
+++ b/src/log.cpp
@@ -18,12 +18,23 @@ void Logger::forcedLog(LogLevel ll, string str,
             const char *file, int line, const char *func)
 {
     // TODO
+    LoggingEvent_t *ev = new LoggingEvent_t();
+
+    ev->func = func;
+    ev->file = file;
+    ev->line = line;
+    ev->ll = ll;
+    ev->msg = str;
+
+    callAppend(ev);
+
 }
 
 Logger::~Logger(){
 
 }
 Logger::Logger()
+:loglevel(INFO)
 {
 }
 
@@ -55,45 +66,6 @@ void Logger::destroyInstance()
     }
 }
 
-string Logger::level2str(const LogLevel levl)
-{
-    switch(levl){
-    case DEBUG:
-        return "DEBUG";
-    case TRACE:
-        return "TRACE";
-    case INFO:
-        return "INFO";
-    case WARNING:
-        return "WARNING";
-    case ERROR:
-        return "ERROR";
-    default:
-        return "INFO";
-    }
-}
-
-FmtMsg_t Logger::Format(LogMsg_t& msg)
-{
-    time_t t = time(NULL);
-    FmtMsg_t outmsg;
-    string space = " ";
-    
-    string timestamp = ctime(&t);
-    size_t pos = timestamp.find('\n');
-    if(pos != std::string::npos) {
-        timestamp.erase(pos, 1);
-    }
-
-    outmsg.msg = space + timestamp +
-    		  space + std::__cxx11::to_string(Pid) + 
-                   space + ModuleName +
-		   space + level2str(msg.level) +
-		   space + msg.msgline;
-
-    return outmsg;
-}
-
 
 bool Logger::isEnabledfor(LogLevel ll)
 {
@@ -131,9 +103,12 @@ void Logger::removeAppender(string& name)
 }
 
 
-void Logger::callAppend()
+void Logger::callAppend(LoggingEvent_t *ev)
 {
     //TODO
+    for ( AppenderPtr& ptr : appenderList ) {
+        ptr->doAppend(ev);
+    }
 }
 
 }//namespace logdb
diff --git a/testlogdb.cpp b/testlogdb.cpp
index 5e747ac..c18abd9 100644
--- a/testlogdb.cpp
+++ b/testlogdb.cpp
@@ -1,18 +1,23 @@
 #include <iostream>
 
 #include "log.h"
+#include "layout.h"
 
 using namespace logdb;
 
 int main(int argc, char** argv)
 {
-    Logbase *pLogger = Logbase::CreateInstance();
+    Logger *pLogger = Logger::getInstance();
 
-    pLogger->Init("TestModule");
+    pLogger->addAppender(new ConsoleAppender);
+
+    pLogger->log(INFO, "hello world");
+    pLogger->log(DEBUG, "hello world");
+    pLogger->log(ERROR, "hello world");
+
+    pLogger->setLogLevel(DEBUG);
+    pLogger->log(DEBUG, "hello world");
 
-    pLogger->print(std::cout, INFO,"hello world");
-    pLogger->print(std::cout, DEBUG,"hello world");
-    pLogger->print(std::cout, ERROR,"hello world");
 
     return 0;
 }
-- 
2.17.1

